# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Body53(object):

    """Implementation of the 'body_53' model.

    TODO: type model description here.

    Attributes:
        mtype (string): The type (category) of template Valid values:
            marketing, authorization
        page (int): The page count to retrieve from the total results in the
            collection. Page indexing starts at 1.
        pagesize (int): The count of objects to return per page.
        shortcode (string): Only list templates of type

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype":'type',
        "page":'page',
        "pagesize":'pagesize',
        "shortcode":'Shortcode'
    }

    def __init__(self,
                 mtype=None,
                 page=None,
                 pagesize=None,
                 shortcode=None):
        """Constructor for the Body53 class"""

        # Initialize members of the class
        self.mtype = mtype
        self.page = page
        self.pagesize = pagesize
        self.shortcode = shortcode


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mtype = dictionary.get('type')
        page = dictionary.get('page')
        pagesize = dictionary.get('pagesize')
        shortcode = dictionary.get('Shortcode')

        # Return an object of this model
        return cls(mtype,
                   page,
                   pagesize,
                   shortcode)


