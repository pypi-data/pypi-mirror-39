# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Body43(object):

    """Implementation of the 'body_43' model.

    TODO: type model description here.

    Attributes:
        mfrom (string): A valid Ytel Voice enabled number (E.164 format) that
            will be initiating the phone call.
        rvm_caller_id (string): A required secondary Caller ID for RVM to
            work.
        to (string): A valid number (E.164 format) that will receive the phone
            call.
        voice_mail_url (string): The URL requested once the RVM connects. A
            set of default parameters will be sent here.
        method (string): Specifies the HTTP method used to request the
            required URL once call connects.
        status_call_back_url (string): URL that can be requested to receive
            notification when call has ended. A set of default parameters will
            be sent here once the call is finished.
        stats_call_back_method (string): Specifies the HTTP method used to
            request the required StatusCallBackUrl once call connects.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mfrom":'From',
        "rvm_caller_id":'RVMCallerId',
        "to":'To',
        "voice_mail_url":'VoiceMailURL',
        "method":'Method',
        "status_call_back_url":'StatusCallBackUrl',
        "stats_call_back_method":'StatsCallBackMethod'
    }

    def __init__(self,
                 mfrom=None,
                 rvm_caller_id=None,
                 to=None,
                 voice_mail_url=None,
                 method=None,
                 status_call_back_url=None,
                 stats_call_back_method=None):
        """Constructor for the Body43 class"""

        # Initialize members of the class
        self.mfrom = mfrom
        self.rvm_caller_id = rvm_caller_id
        self.to = to
        self.voice_mail_url = voice_mail_url
        self.method = method
        self.status_call_back_url = status_call_back_url
        self.stats_call_back_method = stats_call_back_method


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        mfrom = dictionary.get('From')
        rvm_caller_id = dictionary.get('RVMCallerId')
        to = dictionary.get('To')
        voice_mail_url = dictionary.get('VoiceMailURL')
        method = dictionary.get('Method')
        status_call_back_url = dictionary.get('StatusCallBackUrl')
        stats_call_back_method = dictionary.get('StatsCallBackMethod')

        # Return an object of this model
        return cls(mfrom,
                   rvm_caller_id,
                   to,
                   voice_mail_url,
                   method,
                   status_call_back_url,
                   stats_call_back_method)


