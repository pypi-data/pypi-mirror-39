# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Body52(object):

    """Implementation of the 'body_52' model.

    TODO: type model description here.

    Attributes:
        shortcode (int): Your dedicated shortcode
        to (float): The number to send your SMS to
        body (string): The body of your message
        method (string): Specifies the HTTP method used to request the
            required URL once the Short Code message is sent.GET or POST
        messagestatuscallback (string): URL that can be requested to receive
            notification when Short Code message was sent.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "shortcode":'shortcode',
        "to":'to',
        "body":'body',
        "method":'method',
        "messagestatuscallback":'messagestatuscallback'
    }

    def __init__(self,
                 shortcode=None,
                 to=None,
                 body=None,
                 method=None,
                 messagestatuscallback=None):
        """Constructor for the Body52 class"""

        # Initialize members of the class
        self.shortcode = shortcode
        self.to = to
        self.body = body
        self.method = method
        self.messagestatuscallback = messagestatuscallback


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        shortcode = dictionary.get('shortcode')
        to = dictionary.get('to')
        body = dictionary.get('body')
        method = dictionary.get('method')
        messagestatuscallback = dictionary.get('messagestatuscallback')

        # Return an object of this model
        return cls(shortcode,
                   to,
                   body,
                   method,
                   messagestatuscallback)


