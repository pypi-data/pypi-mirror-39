# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Body51(object):

    """Implementation of the 'body_51' model.

    TODO: type model description here.

    Attributes:
        conference_sid (string): The unique identifier for a conference
            object.
        participant_number (string): The phone number of the participant to be
            added.
        muted (bool): Specifies if participant should be muted.
        deaf (bool): Specifies if the participant should hear audio in the
            conference.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "conference_sid":'ConferenceSid',
        "participant_number":'ParticipantNumber',
        "muted":'Muted',
        "deaf":'Deaf'
    }

    def __init__(self,
                 conference_sid=None,
                 participant_number=None,
                 muted=None,
                 deaf=None):
        """Constructor for the Body51 class"""

        # Initialize members of the class
        self.conference_sid = conference_sid
        self.participant_number = participant_number
        self.muted = muted
        self.deaf = deaf


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        conference_sid = dictionary.get('ConferenceSid')
        participant_number = dictionary.get('ParticipantNumber')
        muted = dictionary.get('Muted')
        deaf = dictionary.get('Deaf')

        # Return an object of this model
        return cls(conference_sid,
                   participant_number,
                   muted,
                   deaf)


