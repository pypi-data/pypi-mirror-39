# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Body22(object):

    """Implementation of the 'body_22' model.

    TODO: type model description here.

    Attributes:
        call_sid (string): The unique identifier of each call resource
        audio_url (string): URL to sound that should be played. You also can
            add more than one audio file using semicolons e.g.
            http://example.com/audio1.mp3;http://example.com/audio2.wav
        say_text (string): Valid alphanumeric string that should be played to
            the In-progress call.
        length (int): Time limit in seconds for audio play back
        direction (Direction1Enum): The leg of the call audio will be played
            to
        mix (bool): If false, all other audio will be muted

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "call_sid":'CallSid',
        "audio_url":'AudioUrl',
        "say_text":'SayText',
        "length":'Length',
        "direction":'Direction',
        "mix":'Mix'
    }

    def __init__(self,
                 call_sid=None,
                 audio_url=None,
                 say_text=None,
                 length=None,
                 direction=None,
                 mix=None):
        """Constructor for the Body22 class"""

        # Initialize members of the class
        self.call_sid = call_sid
        self.audio_url = audio_url
        self.say_text = say_text
        self.length = length
        self.direction = direction
        self.mix = mix


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        call_sid = dictionary.get('CallSid')
        audio_url = dictionary.get('AudioUrl')
        say_text = dictionary.get('SayText')
        length = dictionary.get('Length')
        direction = dictionary.get('Direction')
        mix = dictionary.get('Mix')

        # Return an object of this model
        return cls(call_sid,
                   audio_url,
                   say_text,
                   length,
                   direction,
                   mix)


