# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Body28(object):

    """Implementation of the 'body_28' model.

    TODO: type model description here.

    Attributes:
        call_sid (string): The unique identifier for voice call that is in
            progress.
        url (string): URL the in-progress call will be redirected to
        method (string): The method used to request the above Url parameter
        status (Status1Enum): Status to set the in-progress call to

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "call_sid":'CallSid',
        "url":'Url',
        "method":'Method',
        "status":'Status'
    }

    def __init__(self,
                 call_sid=None,
                 url=None,
                 method=None,
                 status=None):
        """Constructor for the Body28 class"""

        # Initialize members of the class
        self.call_sid = call_sid
        self.url = url
        self.method = method
        self.status = status


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        call_sid = dictionary.get('CallSid')
        url = dictionary.get('Url')
        method = dictionary.get('Method')
        status = dictionary.get('Status')

        # Return an object of this model
        return cls(call_sid,
                   url,
                   method,
                   status)


