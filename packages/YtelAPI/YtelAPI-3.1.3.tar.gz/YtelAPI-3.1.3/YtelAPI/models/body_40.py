# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Body40(object):

    """Implementation of the 'body_40' model.

    TODO: type model description here.

    Attributes:
        shortcode (string): The Short Code number that is the sender of this
            message
        to (string): A valid 10-digit number that should receive the message
        templateid (uuid|string): The unique identifier for the template used
            for the message
        data (string): format of your data, example:
            {companyname}:test,{otpcode}:1234
        method (string): Specifies the HTTP method used to request the
            required URL once the Short Code message is sent.
        message_status_callback (string): URL that can be requested to receive
            notification when Short Code message was sent.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "shortcode":'shortcode',
        "to":'to',
        "templateid":'templateid',
        "data":'data',
        "method":'Method',
        "message_status_callback":'MessageStatusCallback'
    }

    def __init__(self,
                 shortcode=None,
                 to=None,
                 templateid=None,
                 data=None,
                 method=None,
                 message_status_callback=None):
        """Constructor for the Body40 class"""

        # Initialize members of the class
        self.shortcode = shortcode
        self.to = to
        self.templateid = templateid
        self.data = data
        self.method = method
        self.message_status_callback = message_status_callback


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        shortcode = dictionary.get('shortcode')
        to = dictionary.get('to')
        templateid = dictionary.get('templateid')
        data = dictionary.get('data')
        method = dictionary.get('Method')
        message_status_callback = dictionary.get('MessageStatusCallback')

        # Return an object of this model
        return cls(shortcode,
                   to,
                   templateid,
                   data,
                   method,
                   message_status_callback)


