# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Body38(object):

    """Implementation of the 'body_38' model.

    TODO: type model description here.

    Attributes:
        shortcode (string): Only list messages sent from this Short Code
        to (string): Only list messages sent to this number
        date_sent (string): Only list messages sent with the specified date
        page (int): The page count to retrieve from the total results in the
            collection. Page indexing starts at 1.
        page_size (int): The count of objects to return per page.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "shortcode":'Shortcode',
        "to":'To',
        "date_sent":'DateSent',
        "page":'Page',
        "page_size":'PageSize'
    }

    def __init__(self,
                 shortcode=None,
                 to=None,
                 date_sent=None,
                 page=None,
                 page_size=None):
        """Constructor for the Body38 class"""

        # Initialize members of the class
        self.shortcode = shortcode
        self.to = to
        self.date_sent = date_sent
        self.page = page
        self.page_size = page_size


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        shortcode = dictionary.get('Shortcode')
        to = dictionary.get('To')
        date_sent = dictionary.get('DateSent')
        page = dictionary.get('Page')
        page_size = dictionary.get('PageSize')

        # Return an object of this model
        return cls(shortcode,
                   to,
                   date_sent,
                   page,
                   page_size)


