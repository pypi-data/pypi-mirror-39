# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Body65(object):

    """Implementation of the 'body_65' model.

    TODO: type model description here.

    Attributes:
        page (int): The page count to retrieve from the total results in the
            collection. Page indexing starts at 1.
        pagesize (int): Number of individual resources listed in the response
            per page
        friendly_name (string): Only return conferences with the specified
            FriendlyName
        date_created (string): Conference created date

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "page":'page',
        "pagesize":'pagesize',
        "friendly_name":'FriendlyName',
        "date_created":'DateCreated'
    }

    def __init__(self,
                 page=None,
                 pagesize=None,
                 friendly_name=None,
                 date_created=None):
        """Constructor for the Body65 class"""

        # Initialize members of the class
        self.page = page
        self.pagesize = pagesize
        self.friendly_name = friendly_name
        self.date_created = date_created


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        page = dictionary.get('page')
        pagesize = dictionary.get('pagesize')
        friendly_name = dictionary.get('FriendlyName')
        date_created = dictionary.get('DateCreated')

        # Return an object of this model
        return cls(page,
                   pagesize,
                   friendly_name,
                   date_created)


