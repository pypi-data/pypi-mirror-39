# -*- coding: utf-8 -*-

"""
    YtelAPI

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import jsonpickle
import dateutil.parser
from .controller_test_base import ControllerTestBase
from ..test_helper import TestHelper
from YtelAPI.api_helper import APIHelper


class SharedShortCodeControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(SharedShortCodeControllerTests, cls).setUpClass()
        cls.controller = cls.api_client.shared_short_code

    # Retrieve a list of shortcode assignment associated with your Ytel account.
    def test_test_list_shortcodes(self):
        # Parameters for the API call
        shortcode = None
        page = None
        pagesize = None

        # Perform the API call through the SDK function
        result = self.controller.create_list_shortcodes(shortcode, page, pagesize)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))


    # Retrieve a list of keywords associated with your Ytel account.
    def test_test_list_keywords(self):
        # Parameters for the API call
        page = None
        pagesize = None
        keyword = None
        shortcode = None

        # Perform the API call through the SDK function
        result = self.controller.create_list_keywords(page, pagesize, keyword, shortcode)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))


    # List Shortcode Templates by Type
    def test_test_list_templates(self):
        # Parameters for the API call
        mtype = None
        page = None
        pagesize = None
        shortcode = None

        # Perform the API call through the SDK function
        result = self.controller.create_list_templates(mtype, page, pagesize, shortcode)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))


    # List All Inbound ShortCode
    def test_test_list_inbound_sms(self):
        # Parameters for the API call
        datecreated = None
        page = None
        pagesize = None
        mfrom = None
        shortcode = None

        # Perform the API call through the SDK function
        result = self.controller.create_list_inbound_sms(datecreated, page, pagesize, mfrom, shortcode)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['content-type'] = 'application/json'

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))


