[DEFAULT]
# The database connection string.  This is here to allow sharing between
# alembic's settings and application's.
#
database = postgresql:///xakodb

[app:main]
use = egg:xako

# xako.fragment_size: The maximum size in bytes of each document fragment.
# 1MB = 1048576
xako.fragment_size = 1048576

# xako.transport:  The (dotted) name of the xako transport. Transport must
# deal with the sending and reception of fragments and control messages
# from/to other peers.
xako.transport_backend = xako.backends.email.Email

# xako.transmission_interval: The amount of seconds in which the communication
# process with the transport service will be considered as too long and then
# interrupted.
xako.transmission_interval = 60

# xako.transmission_band: The amount of data in bytes allowed to be accumulated
# unconfirmed on the channel. Each time xako sends a message it takes the size
# of the message from the band, when the confirmation is received this size is
# released.
# 0 = no limit.
xako.transmission_band = 1211840

# xako.local_domain: The domains this peer owns.  Each peer might own several
# domains.  It's up to the admin to make sure two peers don't own the same
# domains.
xako.local_domains =
    xakobino
    photocuba.lahavane
    photocuba.france


# xako.routes:  This peer will allow to send/receive messages to the domains
# according to this table.  Each line is formatted as FROM->TO.  If the FROM
# is a local domain (see xako.local_domains) then, the peer will allow to send
# from that domain to the one in the TO.  If the TO is a local domain then the
# peer will allow the reception of messages from the FROM domain.  If both are
# local then you are doing tests.
xako.routes =
    xakobino->xakobino
    xakobino->photocuba.france
    photocuba.lahavane->photocuba.france
    photocuba.france->photocuba.lahavane


# xako.deprecation_time: This is the time (in minutes) that has pass since the
# last download of a received document to delete the document.
xako.deprecation_time = 60


# TODO: xako.backends.options = email_backend_options
# [email_backend_options]
# domain_maps = ....
# The domain to email address map.  Each domain must a unique email address.
# Address for local domains are used in the `From:` header in emails.
xako.domain_emails =
    xakobino:peer@email.com
    photocuba.lahavane:peer@email.com
    photocuba.france:peer@email.com


# SMTP configuration
xako.smtp_host = localhost
xako.smtp_port = 1025
xako.smtp_user = peer@email.com
xako.smtp_pass = password
xako.smtp_starttls = false
xako.smtp_debug = false

# POP3 configuration.
# WARNING:  Notice that if the peer has several domains, messages directed to
# their addresses must be saved in the same Inbox in the POP/IMAP server.
xako.pop3_host = localhost
xako.pop3_port = 1110
xako.pop3_user = peer@email.com
xako.pop3_pass = password
xako.pop3_ssl = false
xako.pop3_debuglevel = 0

#  The `pyramid-storage` configuration options.  The `base_path`  is where to
#  save the files.  The `base_url` is how to server the files.
storage.base_path = /%(here)s/xako_files/
storage.base_url = /file/

#  Pyramid stuff.
pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = true
pyramid.debug_routematch = true
pyramid.default_locale_name = en
pyramid.serve_statics = true

pyramid.includes =
    pyramid_debugtoolbar

# The database connection string for the application.
sqlalchemy.url = %(database)s

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 127.0.0.1
port = 6543

###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/logging.html
###

[loggers]
keys = root, xako, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console

[logger_xako]
level = DEBUG
handlers =
qualname = xako

[logger_sqlalchemy]
level = ERROR
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
