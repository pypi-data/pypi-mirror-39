{
  "nuclei_viewer/dashx/src/components/Cropper.react.js": {
    "description": "Cropper is a component that crop and resize image.",
    "displayName": "Cropper",
    "methods": [
      {
        "name": "animateLoading",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "ctx",
            "type": null
          },
          {
            "name": "width",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "updateCanvas",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "src": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The image source url",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The image box render width/height",
        "defaultValue": {
          "value": "200",
          "computed": false
        }
      },
      "zoom": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Zoom ratio",
        "defaultValue": {
          "value": "2",
          "computed": false
        }
      },
      "coordinate": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Show coordinate location or not",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "rect": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "number"
          }
        },
        "required": false,
        "description": "The rectangle of the nuclei. \nEg. [x0, y0, x1, y1]"
      }
    }
  },
  "nuclei_viewer/dashx/src/components/Dropdown.react.js": {
    "description": "Dropdown is an interactive dropdown element for selecting one or more\nitems.\nThe values and labels of the dropdown items are specified in the `options`\nproperty and the selected item(s) are specified with the `value` property.\n\nUse a dropdown when you have many options (more than 5) or when you are\nconstrained for space. Otherwise, you can use RadioItems or a Checklist,\nwhich have the benefit of showing the users all of the items at once.",
    "displayName": "Dropdown",
    "methods": [
      {
        "name": "handleChange",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "value",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "options": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "shape",
            "value": {
              "label": {
                "name": "string",
                "description": "The dropdown's label",
                "required": false
              },
              "value": {
                "name": "string",
                "description": "The value of the dropdown. This value\ncorresponds to the items specified in the\n`values` property.",
                "required": false
              },
              "disabled": {
                "name": "bool",
                "description": "If true, this dropdown is disabled and items can't be selected.",
                "required": false
              }
            }
          }
        },
        "required": false,
        "description": "An array of options"
      },
      "value": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The value of the input."
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The class of the React-Select component"
      },
      "placeholder": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The grey, default text shown when no option is selected"
      },
      "searchable": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether to enable the searching feature or not",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether is disabled",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "ellipsis": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Whether truncate label string",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "react callback the get fired when the the value changes"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the input changes",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      }
    }
  },
  "nuclei_viewer/dashx/src/components/GraphObserver.react.js": {
    "description": "GraphObserver is a component that handle event of graph figure.",
    "displayName": "GraphObserver",
    "methods": [
      {
        "name": "bindEvents",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "cell": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The target cell type"
      },
      "clickData": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Data from latest click event",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "color": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Color code"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the value changes."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The children of this component"
      }
    }
  },
  "nuclei_viewer/dashx/src/components/ImageBox.react.js": {
    "description": "ImageBox is a component that encapsulates several nuclei image items.",
    "displayName": "ImageBox",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The class of image box"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The style of the container (div)"
      },
      "data": {
        "type": {
          "name": "shape",
          "value": {
            "src": {
              "name": "string",
              "description": "The image source url",
              "required": false
            },
            "masks": {
              "name": "arrayOf",
              "value": {
                "name": "shape",
                "value": {
                  "mask": {
                    "name": "string",
                    "description": "The nuclei's mask id",
                    "required": false
                  },
                  "label": {
                    "name": "string",
                    "description": "The nuclei's label",
                    "required": false
                  },
                  "rect": {
                    "name": "arrayOf",
                    "value": {
                      "name": "number"
                    },
                    "description": "The rectangle of the nuclei. \nEg. [x0, y0, x1, y1]",
                    "required": false
                  },
                  "prob": {
                    "name": "number",
                    "description": "Probability of CTC candidate",
                    "required": false
                  }
                }
              },
              "description": "An array of masks",
              "required": false
            }
          }
        },
        "required": false,
        "description": "The data of nuclei",
        "defaultValue": {
          "value": "{src: '', masks: []}",
          "computed": false
        }
      },
      "prob": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The currently selected probability threshold",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "filter": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Filter by label or not",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "width": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The image box render width/height",
        "defaultValue": {
          "value": "200",
          "computed": false
        }
      },
      "channel": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "An array of options"
      },
      "cell": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "An array of options"
      },
      "enhance": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "An array of options"
      },
      "clickData": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Data from latest click event",
        "defaultValue": {
          "value": "null",
          "computed": false
        }
      },
      "coordinate": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Show coordinate location or not",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the value changes."
      }
    }
  },
  "nuclei_viewer/dashx/src/components/RadioItemRows.react.js": {
    "description": "RadioItemRows is a component that encapsulates several radio item inputs.\nThe values and labels of the RadioItemRows is specified in the `options`\nproperty and the seleced item is specified with the `value` property.\nEach radio item is rendered as an input with a surrounding label.",
    "displayName": "RadioItemRows",
    "methods": [
      {
        "name": "setValue",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "value",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "getValue",
        "docblock": null,
        "modifiers": [],
        "params": [],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": ""
      },
      "options": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "arrayOf",
            "value": {
              "name": "shape",
              "value": {
                "label": {
                  "name": "string",
                  "description": "The radio item's label",
                  "required": false
                },
                "value": {
                  "name": "string",
                  "description": "The value of the radio item. This value\ncorresponds to the items specified in the\n`values` property.",
                  "required": false
                },
                "disabled": {
                  "name": "bool",
                  "description": "If true, this radio item is disabled and can't be clicked on.",
                  "required": false
                },
                "style": {
                  "name": "object",
                  "description": "The style of the <span> element",
                  "required": false
                }
              }
            }
          }
        },
        "required": false,
        "description": "An array of options",
        "defaultValue": {
          "value": "[[]]",
          "computed": false
        }
      },
      "value": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The currently selected value"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "The style of the container (div)"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The class of the container (div)",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "react callback the get fired when the the value changes"
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that gets fired when the value changes."
      }
    }
  }
}
