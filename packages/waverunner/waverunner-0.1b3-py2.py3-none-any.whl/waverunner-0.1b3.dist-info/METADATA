Metadata-Version: 2.1
Name: waverunner
Version: 0.1b3
Summary: Package for sending (hardware) experiment requests across the network and receiving the results
Home-page: http://gitlab.com/bjmuld/waverunner/
Author: Barry Muldrey
Author-email: barry@muldrey.net
License: GPLv3
Project-URL: Bug Tracker, https://gitlab.com/bjmuld/waverunner/issues
Project-URL: Documentation, https://gitlab.com/bjmuld/waverunner
Keywords: scientific experiements analysis data management
Platform: UNKNOWN
Description-Content-Type: text/markdown
Requires-Dist: netifaces
Requires-Dist: numpy
Requires-Dist: futures

# Waverunner is a symmetrical client/server tool for securely
# advertising and executing arbitrary remote python modules

### server-side code:
create a script (let's call it `batch-script.py`) that looks like this:
```python
import numpy
import fancyInstrumentControl

def get_measurement(stimulus):
    return fancyInstrumentControl.pass(stimulus)
```
then run waverunner:
```bash
$ python -m waverunner \
     --srv-path /path/to/batch-script.py \
     --notify 123.345.543.2

found batch-script.get_measurement
serving at 142.555.432.1
```

waverunner will now serve 'batch-script.get_measurement()' and advertise to
any waverunner that might be running at 123.345.543.2

### -side code:

```python

from waverunner import Server

waver = Server()

request = (
    'batch-script.get_measurement',
    np.array([
        [np.random.randn(100) for i in range(100)]
    ]),
)

result = waver.external_request('http://142.555.432.1', *request)
```




