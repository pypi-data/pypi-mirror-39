C     -*- fortran -*-
C     This file is autogenerated with f2py (version:2)
C     It contains Fortran 77 wrappers to fortran functions.

      subroutine f2pywrapMakeGridPoint (MakeGridPointf2pywrap, cil
     &m, lmax, lat, lon, norm, csphase, dealloc, cilm_d0, cilm_d1, cilm_
     &d2)
      external pymakegridpoint
      integer lmax
      real*8 lat
      real*8 lon
      integer norm
      integer csphase
      integer dealloc
      integer cilm_d0
      integer cilm_d1
      integer cilm_d2
      real*8 cilm(cilm_d0,cilm_d1,cilm_d2)
      real*8 MakeGridPointf2pywrap, pymakegridpoint
      MakeGridPointf2pywrap = pymakegridpoint(cilm, lmax, lat, lon
     &, norm, csphase, dealloc, cilm_d0, cilm_d1, cilm_d2)
      end


      subroutine f2pywrapMakeGridPointC (MakeGridPointCf2pywrap, c
     &ilm, lmax, lat, lon, norm, csphase, dealloc, cilm_d0, cilm_d1, cil
     &m_d2)
      external pymakegridpointc
      integer lmax
      real*8 lat
      real*8 lon
      integer norm
      integer csphase
      integer dealloc
      integer cilm_d0
      integer cilm_d1
      integer cilm_d2
      complex*16 cilm(cilm_d0,cilm_d1,cilm_d2)
      complex*16 MakeGridPointCf2pywrap, pymakegridpointc
      MakeGridPointCf2pywrap = pymakegridpointc(cilm, lmax, lat, l
     &on, norm, csphase, dealloc, cilm_d0, cilm_d1, cilm_d2)
      end


      subroutine f2pywrapSHConfidence (SHConfidencef2pywrap, l_con
     &f, r)
      external pyshconfidence
      integer l_conf
      real*8 r
      real*8 SHConfidencef2pywrap, pyshconfidence
      SHConfidencef2pywrap = pyshconfidence(l_conf, r)
      end


      subroutine f2pywrapSHFindLWin (SHFindLWinf2pywrap, theta0, m
     &, alpha, taper_number)
      external pyshfindlwin
      real*8 theta0
      integer m
      real*8 alpha
      integer taper_number
      integer SHFindLWinf2pywrap, pyshfindlwin
      SHFindLWinf2pywrap = pyshfindlwin(theta0, m, alpha, taper_nu
     &mber)
      end


      subroutine f2pywrapSHSjkPG (SHSjkPGf2pywrap, incspectra, l, 
     &m, mprime, hj_real, hk_real, mj, mk, lwin, hkcc, hk_real_d0, incsp
     &ectra_d0, hj_real_d0)
      external pyshsjkpg
      integer l
      integer m
      integer mprime
      integer mj
      integer mk
      integer lwin
      integer hkcc
      integer hk_real_d0
      integer incspectra_d0
      integer hj_real_d0
      real*8 incspectra(incspectra_d0)
      real*8 hj_real(hj_real_d0)
      real*8 hk_real(hk_real_d0)
      complex*16 SHSjkPGf2pywrap, pyshsjkpg
      SHSjkPGf2pywrap = pyshsjkpg(incspectra, l, m, mprime, hj_rea
     &l, hk_real, mj, mk, lwin, hkcc, hk_real_d0, incspectra_d0, hj_real
     &_d0)
      end


      subroutine f2pywrapDownContFilterMA (DownContFilterMAf2pywra
     &p, l, half, r, d)
      external pydowncontfilterma
      integer l
      integer half
      real*8 r
      real*8 d
      real*8 DownContFilterMAf2pywrap, pydowncontfilterma
      DownContFilterMAf2pywrap = pydowncontfilterma(l, half, r, d)
      end


      subroutine f2pywrapDownContFilterMC (DownContFilterMCf2pywra
     &p, l, half, r, d)
      external pydowncontfiltermc
      integer l
      integer half
      real*8 r
      real*8 d
      real*8 DownContFilterMCf2pywrap, pydowncontfiltermc
      DownContFilterMCf2pywrap = pydowncontfiltermc(l, half, r, d)
      end


      subroutine f2pywrapNormalGravity (NormalGravityf2pywrap, geo
     &centric_lat, gm, omega, a, b)
      external pynormalgravity
      real*8 geocentric_lat
      real*8 gm
      real*8 omega
      real*8 a
      real*8 b
      real*8 NormalGravityf2pywrap, pynormalgravity
      NormalGravityf2pywrap = pynormalgravity(geocentric_lat, gm, 
     &omega, a, b)
      end

