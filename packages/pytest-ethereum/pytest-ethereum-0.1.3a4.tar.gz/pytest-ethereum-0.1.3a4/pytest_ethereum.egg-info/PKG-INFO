Metadata-Version: 1.2
Name: pytest-ethereum
Version: 0.1.3a4
Summary: pytest-ethereum: Pytest library for ethereum projects.
Home-page: https://github.com/ethereum/pytest-ethereum
Author: pytest-ethereum-contributors
Author-email: UNKNOWN
License: MIT
Description: pytest-ethereum
        ===============
        
        `Join the chat at
        https://gitter.im/ethereum/pytest-ethereum <https://gitter.im/ethereum/pytest-ethereum?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge>`__
        `Build Status <https://circleci.com/gh/ethereum/pytest-ethereum>`__
        `PyPI version <https://badge.fury.io/py/pytest-ethereum>`__ `Python
        versions <https://pypi.python.org/pypi/pytest-ethereum>`__ `Docs
        build <http://pytest-ethereum.readthedocs.io/en/latest/?badge=latest>`__
        
        Pytest library for ethereum projects.
        
        Read more in the `documentation on
        ReadTheDocs <https://pytest-ethereum.readthedocs.io/>`__. `View the
        change
        log <https://pytest-ethereum.readthedocs.io/en/latest/releases.html>`__.
        
        Quickstart
        ----------
        
        .. code:: sh
        
           pip install pytest-ethereum
        
        Developer Setup
        ---------------
        
        If you would like to hack on pytest-ethereum, please check out the
        `Ethereum Development Tactical
        Manual <https://github.com/pipermerriam/ethereum-dev-tactical-manual>`__
        for information on how we do:
        
        -  Testing
        -  Pull Requests
        -  Code Style
        -  Documentation
        
        Development Environment Setup
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        
        You can set up your dev environment with:
        
        .. code:: sh
        
           git clone git@github.com:ethereum/pytest-ethereum.git
           cd pytest-ethereum
           virtualenv -p python3 venv
           . venv/bin/activate
           pip install -e .[dev]
        
        Testing Setup
        ~~~~~~~~~~~~~
        
        During development, you might like to have tests run on every file save.
        
        Show flake8 errors on file change:
        
        .. code:: sh
        
           # Test flake8
           when-changed -v -s -r -1 pytest_ethereum/ tests/ -c "clear; flake8 pytest_ethereum tests && echo 'flake8 success' || echo 'error'"
        
        Run multi-process tests in one command, but without color:
        
        .. code:: sh
        
           # in the project root:
           pytest --numprocesses=4 --looponfail --maxfail=1
           # the same thing, succinctly:
           pytest -n 4 -f --maxfail=1
        
        Run in one thread, with color and desktop notifications:
        
        .. code:: sh
        
           cd venv
           ptw --onfail "notify-send -t 5000 'Test failure ⚠⚠⚠⚠⚠' 'python 3 test on pytest-ethereum failed'" ../tests ../pytest_ethereum
        
        Release setup
        ~~~~~~~~~~~~~
        
        For Debian-like systems:
        
        ::
        
           apt install pandoc
        
        To release a new version:
        
        .. code:: sh
        
           make release bump=$$VERSION_PART_TO_BUMP$$
        
        How to bumpversion
        ^^^^^^^^^^^^^^^^^^
        
        The version format for this repo is ``{major}.{minor}.{patch}`` for
        stable, and ``{major}.{minor}.{patch}-{stage}.{devnum}`` for unstable
        (``stage`` can be alpha or beta).
        
        To issue the next version in line, specify which part to bump, like
        ``make release bump=minor`` or ``make release bump=devnum``.
        
        If you are in a beta version, ``make release bump=stage`` will switch to
        a stable.
        
        To issue an unstable version when the current version is stable, specify
        the new version explicitly, like
        ``make release bump="--new-version 4.0.0-alpha.1 devnum"``
        
Keywords: ethereum
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Requires-Python: >=3.6, <4
