/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOBURR
#define ROOBURR

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooAbsReal.h"
#include <RooRealConstant.h>
 
class RooBurr : public RooAbsPdf {
public:
  RooBurr() {} ; 
  RooBurr(const char *name, const char *title,
	      RooAbsReal& _x,
	      RooAbsReal& _c,
	      RooAbsReal& _k,
	      RooAbsReal& _lambda = RooRealConstant::value(1));
  RooBurr(const RooBurr& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooBurr(*this,newname); }
  inline virtual ~RooBurr() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooRealProxy x ;
  RooRealProxy c ;
  RooRealProxy k ;
  RooRealProxy lambda ;
  
  Double_t evaluate() const ;

private:

  ClassDef(RooBurr,1)
};
 
#endif
