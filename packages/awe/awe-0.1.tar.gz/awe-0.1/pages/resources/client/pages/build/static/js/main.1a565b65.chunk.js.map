{"version":3,"sources":["components/Table.js","components/Grid.js","components/Text.js","components/Chart.js","Pages.js","components/index.js","App.js","Processor.js","store.js","index.js"],"names":["Table","table","this","props","_table$data","data","headers","rows","columns","map","header","title","dataIndex","key","dataSource","row","id","pairs","e","i","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","err","return","react_default","a","createElement","Table_default","assign","Component","Grid","_this$props$grid","grid","children","childColumns","singleColumnSpan","currentRow","currentRowSpan","length","toString","childComponent","childColumnSpan","push","lib_grid","span","paddingBottom","gutter","style","Text","lines","text","split","line","callback","chart","userOptions","callbackOptions","movingWindow","fn","init","xAxis","dataMax","getExtremes","range","minRange","setExtremes","Highcharts","addEvent","Chart","_chart$data","options","charts","_arr","values","_i","config","series","type","defaultOptions","height","plotOptions","defineProperty","marker","enabled","symbol","time","useUTC","yAxis","tickPixelInterval","finalOptions","keys","lodash","defaultsDeep","highcharts_react_min_default","highcharts","instance","Pages","_ref","_this","processor","host","port","classCallCheck","finishedInitialFetch","pendingActions","ws","WebSocket","concat","onmessage","onMessage","bind","onerror","error","console","fetchInitialState","then","initialState","processInitialState","version","pendingAction","dispatch","functionId","kwargs","sendMessage","variableId","message","send","JSON","stringify","action","parse","_ref2$host","_ref2$port","fetch","json","nativeComponents","div","connectedComponents","components_Text","Card","card","card_default","components_Table","components_Grid","Divider","divider","divider_default","Tab","tab","tabs_default","TabPane","Tabs","tabs","Button","button","button_default","onClick","call","Input","input","input_default","variables","onChange","updateVariable","target","onPressEnter","enter","components_Chart","components","processElement","element","elementType","App","_this$props","elements","sortedElements","sort","b","index","rootElement","parentId","connect","state","toJS","Processor","store","processStyle","variable","processVariable","child","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","fromJS","updateElementActions","append","list","prepend","unshift","addChartData","existingData","withMutations","get","newSeriesObject","singleSeries","seriesPath","existingSeries","getIn","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","entries","newData","newExistingData","set","setIn","prefix","reducers","setStyle","_ref4","newElement","_ref5","_ref5$props","newVariable","_ref6","updateElement","_ref8","updateData","_updateData$path","path","fullPath","updateIn","_ref7","_ref7$version","internal","currentVersion","update","mergeIn","createStore","arguments","actionReducer","start","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1a565b65.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport AntTable from 'antd/lib/table/Table';\n\nclass Table extends Component {\n  render() {\n    const table = this.props.table;\n    const {headers, rows} = table.data;\n    const columns = headers.map((header) => ({title: header, dataIndex: header, key: header}));\n    const dataSource = rows.map((row) => {\n      const {data, id} = row;\n      const pairs = data.map((e, i) => [headers[i], e]);\n      const result = {key: id};\n      for (let [key, value] of pairs) {\n        result[key] = value;\n      }\n      return result;\n    });\n    return (\n      <AntTable\n        {...table.props}\n        dataSource={dataSource}\n        columns={columns}\n      />\n    );\n  }\n}\n\nexport default Table;\n","import React, {Component} from 'react';\nimport {Row, Col} from 'antd/lib/grid';\n\nclass Grid extends Component {\n  render() {\n    const {props, data, children} = this.props.grid;\n    delete props.key;\n    const {columns, childColumns} = data;\n    const singleColumnSpan = 24 / columns;\n    const rows = [];\n    let currentRow = [];\n    let currentRowSpan = 0;\n    for (let i = 0; i < children.length; i++) {\n      const key = i.toString();\n      const childComponent = children[i];\n      const childColumnSpan = singleColumnSpan * childColumns[i];\n      if (currentRowSpan + childColumnSpan > 24) {\n        rows.push(currentRow);\n        currentRowSpan = 0;\n        currentRow = [];\n      }\n      currentRowSpan += childColumnSpan;\n      currentRow.push(\n        <Col\n          {...props}\n          key={key}\n          span={childColumnSpan}>\n          {childComponent}\n        </Col>\n      )\n    }\n    if (currentRow.length > 0) {\n      rows.push(currentRow);\n    }\n    const paddingBottom = props.gutter || 0;\n    return rows.map((row, i) => (\n      <Row\n        {...props}\n        key={i.toString()}\n        style={{paddingBottom}}>\n        {row}\n      </Row>\n    ));\n  }\n}\n\nexport default Grid;\n","import React, {Component} from 'react';\n\nclass Text extends Component {\n  render() {\n    const {data} = this.props.text;\n    const {text} = data;\n    const lines = (text || '').split('\\n');\n    return (\n      <div>\n        {lines.map((line, i) => {\n          if (line) {\n            return <div key={i.toString()}>{line}</div>;\n          } else {\n            return <br key={i.toString()}/>\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Text;\n","import lodash from 'lodash';\nimport React, {Component} from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\n\n\nfunction callback(chart) {\n  const {movingWindow} = chart.userOptions.callbackOptions;\n  if (movingWindow) {\n    const fn = (e, init) => {\n      const xAxis = chart.xAxis[0];\n      const currentExtremes = xAxis.getExtremes();\n      const {dataMax} = currentExtremes;\n      const range = xAxis.minRange;\n      xAxis.setExtremes(dataMax - range, dataMax + 8 * 1000, init);\n    };\n    fn(null, true);\n    Highcharts.addEvent(chart, 'update', fn);\n  }\n}\n\n\nclass Chart extends Component {\n  render() {\n    const {chart} = this.props;\n    const {data, options, movingWindow} = chart.data;\n    const charts = [];\n    for (const config of Object.values(data)) {\n      const {series, title, type} = config;\n      const defaultOptions = {\n        callbackOptions: {\n          movingWindow\n        },\n        chart: {\n          type,\n          height: 300\n        },\n        title: {text: title},\n        plotOptions: {\n          [type]: {\n            marker: {\n              enabled: false,\n              symbol: 'circle'\n            }\n          }\n        },\n        time: {\n          useUTC: false,\n        },\n        xAxis: {\n          minRange: movingWindow ? movingWindow * 1000 : undefined,\n          type: 'datetime',\n        },\n        yAxis: {\n          title: {text: ''},\n          tickPixelInterval: 36\n        }\n      };\n      let finalOptions;\n      if (Object.keys(options || {}).length > 0) {\n        lodash.defaultsDeep(options, [defaultOptions]);\n        finalOptions = options;\n      } else {\n        finalOptions = defaultOptions;\n      }\n      finalOptions.series = series;\n      charts.push(finalOptions);\n    }\n\n    return (\n      <div>\n        {charts.map((chart, i) => (\n          <HighchartsReact\n            callback={callback}\n            key={i.toString()}\n            highcharts={Highcharts}\n            options={chart}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Chart;\n","let instance = null;\n\nclass Pages {\n  constructor({processor, host, port}) {\n    this.processor = processor;\n    this.finishedInitialFetch = false;\n    this.pendingActions = [];\n    this.ws = new WebSocket(`ws://${host}:${port}`);\n    this.ws.onmessage = this.onMessage.bind(this);\n    this.ws.onerror = (error) => console.error('ws error', error);\n    Pages.fetchInitialState().then((initialState) => {\n      this.processor.processInitialState(initialState);\n      const {version} = initialState;\n      for (const pendingAction of this.pendingActions) {\n        if (pendingAction.version > version) {\n          this.processor.dispatch(pendingAction);\n        }\n      }\n      this.pendingActions = [];\n      this.finishedInitialFetch = true;\n    });\n  }\n\n  static start({processor, host = '127.0.0.1', port = 9000}) {\n    instance = new Pages({processor, host, port});\n    return instance;\n  }\n\n  static async fetchInitialState() {\n    return await (await fetch('/initial-state')).json();\n  }\n\n  call(functionId, kwargs) {\n    this.sendMessage({type: 'call', functionId, kwargs})\n  }\n\n  updateVariable(variableId, value) {\n    this.sendMessage({type: 'updateVariable', variableId, value})\n  }\n\n  sendMessage(message) {\n    this.ws.send(JSON.stringify(message));\n  }\n\n  onMessage(message) {\n    const action = JSON.parse(message.data);\n    if (!this.finishedInitialFetch) {\n      this.pendingActions.push(action);\n    } else {\n      this.processor.dispatch(action);\n    }\n  };\n\n}\n\nexport default Pages;\nexport {instance};\n","import React from 'react';\nimport Card from 'antd/lib/card';\nimport Divider from 'antd/lib/divider';\nimport Tabs from 'antd/lib/tabs';\nimport Button from 'antd/lib/button';\nimport Input from 'antd/lib/input';\nimport Table from './Table';\nimport Grid from './Grid';\nimport Text from './Text'\nimport Chart from './Chart';\nimport {instance} from '../Pages';\n\nconst nativeComponents = {\n  div: div => (\n    <div\n      {...div.props}>\n      {div.children}\n    </div>\n  )\n};\n\nconst connectedComponents = {\n  Text: text => (\n    <Text\n      {...text.props}\n      text={text}\n    />\n  ),\n  Card: card => (\n    <Card\n      {...card.props}>\n      {card.children.length > 0 ? card.children : card.data.text}\n    </Card>\n  ),\n  Table: table => (\n    <Table\n      {...table.props}\n      table={table}\n    />\n  ),\n  Grid: grid => (\n    <Grid\n      {...grid.props}\n      grid={grid}\n    />\n  ),\n  Divider: divider => (\n    <Divider\n      {...divider.props}\n    />\n  ),\n  Tab: tab => (\n    <Tabs.TabPane\n      {...tab.props}>\n      {tab.children}\n    </Tabs.TabPane>\n  ),\n  Tabs: tabs => (\n    <Tabs\n      {...tabs.props}>\n      {tabs.children || <div/>}\n    </Tabs>\n  ),\n  Button: button => (\n    <Button\n      {...button.props}\n      onClick={() => instance.call(button.id)}>\n      {button.data.text}\n    </Button>\n  ),\n  Input: input => (\n    <Input\n      {...input.props}\n      value={input.variables[input.id].value}\n      onChange={(e) => input.updateVariable(input.id, e.target.value)}\n      onPressEnter={() => input.data.enter ? instance.call(input.id) : null}\n    />\n  ),\n  Chart: chart => (\n    <Chart\n      {...chart.props}\n      chart={chart}\n    />\n  )\n};\n\nconst components = Object.assign({}, nativeComponents, connectedComponents);\nexport default components;\n","import {Component} from 'react';\nimport {connect} from 'react-redux';\nimport components from './components';\nimport {instance} from './Pages';\nimport './App.css';\n\nfunction processElement(element) {\n  element.children = element.children.map(processElement);\n  return components[element.elementType](element);\n}\n\nclass App extends Component {\n  render() {\n    const {elements, variables, style, updateVariable} = this.props;\n    const sortedElements = Object.values(elements).sort((a, b) => a.index - b.index);\n    const rootElement = {elementType: 'div', children: [], props: {style}};\n    for (const element of sortedElements) {\n      element.variables = variables;\n      element.updateVariable = updateVariable;\n      const parentElement = elements[element.parentId] || rootElement;\n      parentElement.children.push(element);\n    }\n    return processElement(rootElement);\n  }\n}\n\nexport default connect(\n  state => state.toJS(),\n  dispatch => ({\n    updateVariable: (id, value) => {\n      dispatch({type: 'updateVariable', id, value});\n      instance.updateVariable(id, value);\n    }\n  })\n)(App);\n","class Processor {\n  constructor(store) {\n    this.store = store;\n  }\n\n  processInitialState(initialState) {\n    const {variables, children, style} = initialState;\n    this.processStyle(style);\n    for (const variable of Object.values(variables)) {\n      this.processVariable(variable);\n    }\n    for (const child of children) {\n      this.processElement(child);\n    }\n  }\n\n  processStyle(style) {\n    this.dispatch({type: 'setStyle', style})\n  }\n\n  processVariable(variable) {\n    const {id, value, version} = variable;\n    this.dispatch({type: 'newVariable', id, value, version})\n  }\n\n  processElement(element) {\n    const {children, data, elementType, index, id, parentId, props} = element;\n    this.dispatch({type: 'newElement', id, elementType, index, data, parentId, props});\n    if (children) {\n      for (const child of children) {\n        child.parentId = id;\n        this.processElement(child);\n      }\n    }\n  }\n\n  dispatch(action) {\n    this.store.dispatch(action);\n  }\n}\n\nexport default Processor;\n","import {fromJS} from 'immutable';\nimport {createStore} from 'redux';\n\nconst initialState = fromJS({elements: {}, variables: {}, style: {}});\n\nfunction addChartData(data) {\n  return (existingData) => {\n    return existingData.withMutations(map => {\n      for (const config of data.values()) {\n        const title = config.get('title');\n        const newSeriesObject = {};\n        for (const singleSeries of config.get('series').values()) {\n          newSeriesObject[singleSeries.get('name')] = singleSeries.get('data');\n        }\n        const seriesPath = [title, 'series'];\n        let existingSeries = map.getIn(seriesPath);\n        for (const [index, singleSeries] of existingSeries.entries()) {\n          const existingData = singleSeries.get('data');\n          const newData = newSeriesObject[singleSeries.get('name')];\n          const newExistingData = existingData.concat(newData);\n          existingSeries = existingSeries.set(index, singleSeries.set('data', newExistingData));\n          map = map.setIn(seriesPath, existingSeries);\n        }\n      }\n      return map;\n    });\n  };\n}\n\n\nconst updateElementActions = {\n  append: data => list => list.push(data),\n  prepend: data => list => list.unshift(data),\n  addChartData\n};\n\nfunction setStyle(state, {style}) {\n  return state.set('style', style);\n}\n\nfunction newElement(state, {id, index, data, parentId, elementType, props = {}}) {\n  return state.setIn(['elements', id], fromJS({index, id, parentId, data, elementType, props, children: []}));\n}\n\nfunction newVariable(state, {id, value, version}) {\n  return state.setIn(['variables', id], fromJS({id, value, version}));\n}\n\nfunction updateVariable(state, {id, value, version = -1}) {\n  const internal = version === -1;\n  const currentVersion = state.getIn(['variables', id, 'version']);\n  if (!internal && currentVersion >= version) {\n    return state;\n  }\n  const update = {value};\n  if (!internal) {\n    update.version = version;\n  }\n  return state.mergeIn(['variables', id], fromJS(update));\n}\n\nfunction updatePath(prefix) {\n  return (state, {id, updateData}) => {\n    const {path = [], action, data} = updateData;\n    const fullPath = [prefix, id].concat(path);\n    if (action === 'set') {\n      return state.setIn(fullPath, fromJS(data));\n    } else {\n      return state.updateIn(fullPath, updateElementActions[action](fromJS(data)));\n    }\n  }\n}\n\nconst reducers = {\n  setStyle,\n  newElement,\n  newVariable,\n  updateElement: updatePath('elements'),\n  updateVariable\n};\n\nfunction reducer(state = initialState, action) {\n  const actionReducer = reducers[action.type];\n  return actionReducer ? actionReducer(state, action) : state;\n}\n\nexport default createStore(reducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport App from './App';\nimport Pages from './Pages';\nimport Processor from './Processor';\nimport store from './store';\n\nPages.start({processor: new Processor(store)});\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}