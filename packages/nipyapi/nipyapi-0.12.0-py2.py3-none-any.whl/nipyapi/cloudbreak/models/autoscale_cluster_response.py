# coding: utf-8

"""
    Cloudbreak API

    Cloudbreak is a powerful left surf that breaks over a coral reef, a mile off southwest the island of Tavarua, Fiji. Cloudbreak is a cloud agnostic Hadoop as a Service API. Abstracts the provisioning and ease management and monitoring of on-demand clusters. SequenceIQ's Cloudbreak is a RESTful application development platform with the goal of helping developers to build solutions for deploying Hadoop YARN clusters in different environments. Once it is deployed in your favourite servlet container it exposes a REST API allowing to span up Hadoop clusters of arbitary sizes and cloud providers. Provisioning Hadoop has never been easier. Cloudbreak is built on the foundation of cloud providers API (Amazon AWS, Microsoft Azure, Google Cloud Platform, Openstack), Apache Ambari, Docker lightweight containers, Swarm and Consul. For further product documentation follow the link: <a href=\"http://hortonworks.com/apache/cloudbreak/\">http://hortonworks.com/apache/cloudbreak/</a>

    OpenAPI spec version: 2.7.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class AutoscaleClusterResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'status': 'str',
        'hours_up': 'int',
        'minutes_up': 'int',
        'cluster': 'str',
        'blueprint_id': 'int',
        'blueprint': 'BlueprintResponse',
        'description': 'str',
        'status_reason': 'str',
        'ambari_server_ip': 'str',
        'ambari_server_url': 'str',
        'user_name': 'str',
        'secure': 'bool',
        'host_groups': 'list[HostGroupResponse]',
        'rds_config_ids': 'list[int]',
        'rds_configs': 'list[RDSConfigResponse]',
        'proxy_name': 'str',
        'cluster_exposed_services_for_topologies': 'dict(str, list[ClusterExposedServiceResponse])',
        'config_strategy': 'str',
        'ldap_config_id': 'int',
        'ldap_config': 'LdapConfigResponse',
        'attributes': 'dict(str, object)',
        'blueprint_inputs': 'list[BlueprintInput]',
        'blueprint_custom_properties': 'str',
        'executor_type': 'str',
        'gateway': 'GatewayJson',
        'custom_containers': 'CustomContainerResponse',
        'ambari_stack_details': 'AmbariStackDetailsResponse',
        'ambari_repo_details_json': 'AmbariRepoDetails',
        'ambari_database_details': 'AmbariDatabaseDetails',
        'custom_queue': 'str',
        'creation_finished': 'int',
        'kerberos_response': 'KerberosResponse',
        'uptime': 'int',
        'extended_blueprint_text': 'str',
        'shared_service_response': 'SharedServiceResponse',
        'file_system_response': 'FileSystemResponse',
        'password': 'str'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'status': 'status',
        'hours_up': 'hoursUp',
        'minutes_up': 'minutesUp',
        'cluster': 'cluster',
        'blueprint_id': 'blueprintId',
        'blueprint': 'blueprint',
        'description': 'description',
        'status_reason': 'statusReason',
        'ambari_server_ip': 'ambariServerIp',
        'ambari_server_url': 'ambariServerUrl',
        'user_name': 'userName',
        'secure': 'secure',
        'host_groups': 'hostGroups',
        'rds_config_ids': 'rdsConfigIds',
        'rds_configs': 'rdsConfigs',
        'proxy_name': 'proxyName',
        'cluster_exposed_services_for_topologies': 'clusterExposedServicesForTopologies',
        'config_strategy': 'configStrategy',
        'ldap_config_id': 'ldapConfigId',
        'ldap_config': 'ldapConfig',
        'attributes': 'attributes',
        'blueprint_inputs': 'blueprintInputs',
        'blueprint_custom_properties': 'blueprintCustomProperties',
        'executor_type': 'executorType',
        'gateway': 'gateway',
        'custom_containers': 'customContainers',
        'ambari_stack_details': 'ambariStackDetails',
        'ambari_repo_details_json': 'ambariRepoDetailsJson',
        'ambari_database_details': 'ambariDatabaseDetails',
        'custom_queue': 'customQueue',
        'creation_finished': 'creationFinished',
        'kerberos_response': 'kerberosResponse',
        'uptime': 'uptime',
        'extended_blueprint_text': 'extendedBlueprintText',
        'shared_service_response': 'sharedServiceResponse',
        'file_system_response': 'fileSystemResponse',
        'password': 'password'
    }

    def __init__(self, id=None, name=None, status=None, hours_up=None, minutes_up=None, cluster=None, blueprint_id=None, blueprint=None, description=None, status_reason=None, ambari_server_ip=None, ambari_server_url=None, user_name=None, secure=False, host_groups=None, rds_config_ids=None, rds_configs=None, proxy_name=None, cluster_exposed_services_for_topologies=None, config_strategy=None, ldap_config_id=None, ldap_config=None, attributes=None, blueprint_inputs=None, blueprint_custom_properties=None, executor_type=None, gateway=None, custom_containers=None, ambari_stack_details=None, ambari_repo_details_json=None, ambari_database_details=None, custom_queue=None, creation_finished=None, kerberos_response=None, uptime=None, extended_blueprint_text=None, shared_service_response=None, file_system_response=None, password=None):
        """
        AutoscaleClusterResponse - a model defined in Swagger
        """

        self._id = None
        self._name = None
        self._status = None
        self._hours_up = None
        self._minutes_up = None
        self._cluster = None
        self._blueprint_id = None
        self._blueprint = None
        self._description = None
        self._status_reason = None
        self._ambari_server_ip = None
        self._ambari_server_url = None
        self._user_name = None
        self._secure = None
        self._host_groups = None
        self._rds_config_ids = None
        self._rds_configs = None
        self._proxy_name = None
        self._cluster_exposed_services_for_topologies = None
        self._config_strategy = None
        self._ldap_config_id = None
        self._ldap_config = None
        self._attributes = None
        self._blueprint_inputs = None
        self._blueprint_custom_properties = None
        self._executor_type = None
        self._gateway = None
        self._custom_containers = None
        self._ambari_stack_details = None
        self._ambari_repo_details_json = None
        self._ambari_database_details = None
        self._custom_queue = None
        self._creation_finished = None
        self._kerberos_response = None
        self._uptime = None
        self._extended_blueprint_text = None
        self._shared_service_response = None
        self._file_system_response = None
        self._password = None

        if id is not None:
          self.id = id
        if name is not None:
          self.name = name
        if status is not None:
          self.status = status
        if hours_up is not None:
          self.hours_up = hours_up
        if minutes_up is not None:
          self.minutes_up = minutes_up
        if cluster is not None:
          self.cluster = cluster
        if blueprint_id is not None:
          self.blueprint_id = blueprint_id
        if blueprint is not None:
          self.blueprint = blueprint
        if description is not None:
          self.description = description
        if status_reason is not None:
          self.status_reason = status_reason
        if ambari_server_ip is not None:
          self.ambari_server_ip = ambari_server_ip
        if ambari_server_url is not None:
          self.ambari_server_url = ambari_server_url
        if user_name is not None:
          self.user_name = user_name
        if secure is not None:
          self.secure = secure
        if host_groups is not None:
          self.host_groups = host_groups
        if rds_config_ids is not None:
          self.rds_config_ids = rds_config_ids
        if rds_configs is not None:
          self.rds_configs = rds_configs
        if proxy_name is not None:
          self.proxy_name = proxy_name
        if cluster_exposed_services_for_topologies is not None:
          self.cluster_exposed_services_for_topologies = cluster_exposed_services_for_topologies
        if config_strategy is not None:
          self.config_strategy = config_strategy
        if ldap_config_id is not None:
          self.ldap_config_id = ldap_config_id
        if ldap_config is not None:
          self.ldap_config = ldap_config
        if attributes is not None:
          self.attributes = attributes
        if blueprint_inputs is not None:
          self.blueprint_inputs = blueprint_inputs
        if blueprint_custom_properties is not None:
          self.blueprint_custom_properties = blueprint_custom_properties
        if executor_type is not None:
          self.executor_type = executor_type
        if gateway is not None:
          self.gateway = gateway
        if custom_containers is not None:
          self.custom_containers = custom_containers
        if ambari_stack_details is not None:
          self.ambari_stack_details = ambari_stack_details
        if ambari_repo_details_json is not None:
          self.ambari_repo_details_json = ambari_repo_details_json
        if ambari_database_details is not None:
          self.ambari_database_details = ambari_database_details
        if custom_queue is not None:
          self.custom_queue = custom_queue
        if creation_finished is not None:
          self.creation_finished = creation_finished
        if kerberos_response is not None:
          self.kerberos_response = kerberos_response
        if uptime is not None:
          self.uptime = uptime
        if extended_blueprint_text is not None:
          self.extended_blueprint_text = extended_blueprint_text
        if shared_service_response is not None:
          self.shared_service_response = shared_service_response
        if file_system_response is not None:
          self.file_system_response = file_system_response
        if password is not None:
          self.password = password

    @property
    def id(self):
        """
        Gets the id of this AutoscaleClusterResponse.
        id of the resource

        :return: The id of this AutoscaleClusterResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this AutoscaleClusterResponse.
        id of the resource

        :param id: The id of this AutoscaleClusterResponse.
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """
        Gets the name of this AutoscaleClusterResponse.
        name of the resource

        :return: The name of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this AutoscaleClusterResponse.
        name of the resource

        :param name: The name of this AutoscaleClusterResponse.
        :type: str
        """

        self._name = name

    @property
    def status(self):
        """
        Gets the status of this AutoscaleClusterResponse.
        status of the cluster

        :return: The status of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """
        Sets the status of this AutoscaleClusterResponse.
        status of the cluster

        :param status: The status of this AutoscaleClusterResponse.
        :type: str
        """
        allowed_values = ["REQUESTED", "CREATE_IN_PROGRESS", "AVAILABLE", "UPDATE_IN_PROGRESS", "UPDATE_REQUESTED", "UPDATE_FAILED", "CREATE_FAILED", "ENABLE_SECURITY_FAILED", "PRE_DELETE_IN_PROGRESS", "DELETE_IN_PROGRESS", "DELETE_FAILED", "DELETE_COMPLETED", "STOPPED", "STOP_REQUESTED", "START_REQUESTED", "STOP_IN_PROGRESS", "START_IN_PROGRESS", "START_FAILED", "STOP_FAILED", "WAIT_FOR_SYNC"]
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def hours_up(self):
        """
        Gets the hours_up of this AutoscaleClusterResponse.
        duration - how long the cluster is running in hours

        :return: The hours_up of this AutoscaleClusterResponse.
        :rtype: int
        """
        return self._hours_up

    @hours_up.setter
    def hours_up(self, hours_up):
        """
        Sets the hours_up of this AutoscaleClusterResponse.
        duration - how long the cluster is running in hours

        :param hours_up: The hours_up of this AutoscaleClusterResponse.
        :type: int
        """

        self._hours_up = hours_up

    @property
    def minutes_up(self):
        """
        Gets the minutes_up of this AutoscaleClusterResponse.
        duration - how long the cluster is running in minutes (minus hours)

        :return: The minutes_up of this AutoscaleClusterResponse.
        :rtype: int
        """
        return self._minutes_up

    @minutes_up.setter
    def minutes_up(self, minutes_up):
        """
        Sets the minutes_up of this AutoscaleClusterResponse.
        duration - how long the cluster is running in minutes (minus hours)

        :param minutes_up: The minutes_up of this AutoscaleClusterResponse.
        :type: int
        """

        self._minutes_up = minutes_up

    @property
    def cluster(self):
        """
        Gets the cluster of this AutoscaleClusterResponse.
        name of the cluster

        :return: The cluster of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """
        Sets the cluster of this AutoscaleClusterResponse.
        name of the cluster

        :param cluster: The cluster of this AutoscaleClusterResponse.
        :type: str
        """

        self._cluster = cluster

    @property
    def blueprint_id(self):
        """
        Gets the blueprint_id of this AutoscaleClusterResponse.
        blueprint id for the cluster

        :return: The blueprint_id of this AutoscaleClusterResponse.
        :rtype: int
        """
        return self._blueprint_id

    @blueprint_id.setter
    def blueprint_id(self, blueprint_id):
        """
        Sets the blueprint_id of this AutoscaleClusterResponse.
        blueprint id for the cluster

        :param blueprint_id: The blueprint_id of this AutoscaleClusterResponse.
        :type: int
        """

        self._blueprint_id = blueprint_id

    @property
    def blueprint(self):
        """
        Gets the blueprint of this AutoscaleClusterResponse.
        blueprint for the cluster

        :return: The blueprint of this AutoscaleClusterResponse.
        :rtype: BlueprintResponse
        """
        return self._blueprint

    @blueprint.setter
    def blueprint(self, blueprint):
        """
        Sets the blueprint of this AutoscaleClusterResponse.
        blueprint for the cluster

        :param blueprint: The blueprint of this AutoscaleClusterResponse.
        :type: BlueprintResponse
        """

        self._blueprint = blueprint

    @property
    def description(self):
        """
        Gets the description of this AutoscaleClusterResponse.
        description of the resource

        :return: The description of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this AutoscaleClusterResponse.
        description of the resource

        :param description: The description of this AutoscaleClusterResponse.
        :type: str
        """

        self._description = description

    @property
    def status_reason(self):
        """
        Gets the status_reason of this AutoscaleClusterResponse.
        status message of the cluster

        :return: The status_reason of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._status_reason

    @status_reason.setter
    def status_reason(self, status_reason):
        """
        Sets the status_reason of this AutoscaleClusterResponse.
        status message of the cluster

        :param status_reason: The status_reason of this AutoscaleClusterResponse.
        :type: str
        """

        self._status_reason = status_reason

    @property
    def ambari_server_ip(self):
        """
        Gets the ambari_server_ip of this AutoscaleClusterResponse.
        public ambari ip of the stack

        :return: The ambari_server_ip of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._ambari_server_ip

    @ambari_server_ip.setter
    def ambari_server_ip(self, ambari_server_ip):
        """
        Sets the ambari_server_ip of this AutoscaleClusterResponse.
        public ambari ip of the stack

        :param ambari_server_ip: The ambari_server_ip of this AutoscaleClusterResponse.
        :type: str
        """

        self._ambari_server_ip = ambari_server_ip

    @property
    def ambari_server_url(self):
        """
        Gets the ambari_server_url of this AutoscaleClusterResponse.
        public ambari url

        :return: The ambari_server_url of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._ambari_server_url

    @ambari_server_url.setter
    def ambari_server_url(self, ambari_server_url):
        """
        Sets the ambari_server_url of this AutoscaleClusterResponse.
        public ambari url

        :param ambari_server_url: The ambari_server_url of this AutoscaleClusterResponse.
        :type: str
        """

        self._ambari_server_url = ambari_server_url

    @property
    def user_name(self):
        """
        Gets the user_name of this AutoscaleClusterResponse.
        ambari username

        :return: The user_name of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """
        Sets the user_name of this AutoscaleClusterResponse.
        ambari username

        :param user_name: The user_name of this AutoscaleClusterResponse.
        :type: str
        """

        self._user_name = user_name

    @property
    def secure(self):
        """
        Gets the secure of this AutoscaleClusterResponse.

        :return: The secure of this AutoscaleClusterResponse.
        :rtype: bool
        """
        return self._secure

    @secure.setter
    def secure(self, secure):
        """
        Sets the secure of this AutoscaleClusterResponse.

        :param secure: The secure of this AutoscaleClusterResponse.
        :type: bool
        """

        self._secure = secure

    @property
    def host_groups(self):
        """
        Gets the host_groups of this AutoscaleClusterResponse.

        :return: The host_groups of this AutoscaleClusterResponse.
        :rtype: list[HostGroupResponse]
        """
        return self._host_groups

    @host_groups.setter
    def host_groups(self, host_groups):
        """
        Sets the host_groups of this AutoscaleClusterResponse.

        :param host_groups: The host_groups of this AutoscaleClusterResponse.
        :type: list[HostGroupResponse]
        """

        self._host_groups = host_groups

    @property
    def rds_config_ids(self):
        """
        Gets the rds_config_ids of this AutoscaleClusterResponse.
        RDS configuration names for the cluster

        :return: The rds_config_ids of this AutoscaleClusterResponse.
        :rtype: list[int]
        """
        return self._rds_config_ids

    @rds_config_ids.setter
    def rds_config_ids(self, rds_config_ids):
        """
        Sets the rds_config_ids of this AutoscaleClusterResponse.
        RDS configuration names for the cluster

        :param rds_config_ids: The rds_config_ids of this AutoscaleClusterResponse.
        :type: list[int]
        """

        self._rds_config_ids = rds_config_ids

    @property
    def rds_configs(self):
        """
        Gets the rds_configs of this AutoscaleClusterResponse.
        RDS configurations for the cluster

        :return: The rds_configs of this AutoscaleClusterResponse.
        :rtype: list[RDSConfigResponse]
        """
        return self._rds_configs

    @rds_configs.setter
    def rds_configs(self, rds_configs):
        """
        Sets the rds_configs of this AutoscaleClusterResponse.
        RDS configurations for the cluster

        :param rds_configs: The rds_configs of this AutoscaleClusterResponse.
        :type: list[RDSConfigResponse]
        """

        self._rds_configs = rds_configs

    @property
    def proxy_name(self):
        """
        Gets the proxy_name of this AutoscaleClusterResponse.
        proxy configuration name for the cluster

        :return: The proxy_name of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._proxy_name

    @proxy_name.setter
    def proxy_name(self, proxy_name):
        """
        Sets the proxy_name of this AutoscaleClusterResponse.
        proxy configuration name for the cluster

        :param proxy_name: The proxy_name of this AutoscaleClusterResponse.
        :type: str
        """

        self._proxy_name = proxy_name

    @property
    def cluster_exposed_services_for_topologies(self):
        """
        Gets the cluster_exposed_services_for_topologies of this AutoscaleClusterResponse.
        cluster exposed services for topologies

        :return: The cluster_exposed_services_for_topologies of this AutoscaleClusterResponse.
        :rtype: dict(str, list[ClusterExposedServiceResponse])
        """
        return self._cluster_exposed_services_for_topologies

    @cluster_exposed_services_for_topologies.setter
    def cluster_exposed_services_for_topologies(self, cluster_exposed_services_for_topologies):
        """
        Sets the cluster_exposed_services_for_topologies of this AutoscaleClusterResponse.
        cluster exposed services for topologies

        :param cluster_exposed_services_for_topologies: The cluster_exposed_services_for_topologies of this AutoscaleClusterResponse.
        :type: dict(str, list[ClusterExposedServiceResponse])
        """

        self._cluster_exposed_services_for_topologies = cluster_exposed_services_for_topologies

    @property
    def config_strategy(self):
        """
        Gets the config_strategy of this AutoscaleClusterResponse.
        config recommendation strategy

        :return: The config_strategy of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._config_strategy

    @config_strategy.setter
    def config_strategy(self, config_strategy):
        """
        Sets the config_strategy of this AutoscaleClusterResponse.
        config recommendation strategy

        :param config_strategy: The config_strategy of this AutoscaleClusterResponse.
        :type: str
        """
        allowed_values = ["NEVER_APPLY", "ONLY_STACK_DEFAULTS_APPLY", "ALWAYS_APPLY", "ALWAYS_APPLY_DONT_OVERRIDE_CUSTOM_VALUES"]
        if config_strategy not in allowed_values:
            raise ValueError(
                "Invalid value for `config_strategy` ({0}), must be one of {1}"
                .format(config_strategy, allowed_values)
            )

        self._config_strategy = config_strategy

    @property
    def ldap_config_id(self):
        """
        Gets the ldap_config_id of this AutoscaleClusterResponse.
        LDAP config id for the cluster

        :return: The ldap_config_id of this AutoscaleClusterResponse.
        :rtype: int
        """
        return self._ldap_config_id

    @ldap_config_id.setter
    def ldap_config_id(self, ldap_config_id):
        """
        Sets the ldap_config_id of this AutoscaleClusterResponse.
        LDAP config id for the cluster

        :param ldap_config_id: The ldap_config_id of this AutoscaleClusterResponse.
        :type: int
        """

        self._ldap_config_id = ldap_config_id

    @property
    def ldap_config(self):
        """
        Gets the ldap_config of this AutoscaleClusterResponse.
        LDAP config for the cluster

        :return: The ldap_config of this AutoscaleClusterResponse.
        :rtype: LdapConfigResponse
        """
        return self._ldap_config

    @ldap_config.setter
    def ldap_config(self, ldap_config):
        """
        Sets the ldap_config of this AutoscaleClusterResponse.
        LDAP config for the cluster

        :param ldap_config: The ldap_config of this AutoscaleClusterResponse.
        :type: LdapConfigResponse
        """

        self._ldap_config = ldap_config

    @property
    def attributes(self):
        """
        Gets the attributes of this AutoscaleClusterResponse.
        Additional information for ambari cluster

        :return: The attributes of this AutoscaleClusterResponse.
        :rtype: dict(str, object)
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """
        Sets the attributes of this AutoscaleClusterResponse.
        Additional information for ambari cluster

        :param attributes: The attributes of this AutoscaleClusterResponse.
        :type: dict(str, object)
        """

        self._attributes = attributes

    @property
    def blueprint_inputs(self):
        """
        Gets the blueprint_inputs of this AutoscaleClusterResponse.
        blueprint inputs in the cluster

        :return: The blueprint_inputs of this AutoscaleClusterResponse.
        :rtype: list[BlueprintInput]
        """
        return self._blueprint_inputs

    @blueprint_inputs.setter
    def blueprint_inputs(self, blueprint_inputs):
        """
        Sets the blueprint_inputs of this AutoscaleClusterResponse.
        blueprint inputs in the cluster

        :param blueprint_inputs: The blueprint_inputs of this AutoscaleClusterResponse.
        :type: list[BlueprintInput]
        """

        self._blueprint_inputs = blueprint_inputs

    @property
    def blueprint_custom_properties(self):
        """
        Gets the blueprint_custom_properties of this AutoscaleClusterResponse.
        blueprint custom properties

        :return: The blueprint_custom_properties of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._blueprint_custom_properties

    @blueprint_custom_properties.setter
    def blueprint_custom_properties(self, blueprint_custom_properties):
        """
        Sets the blueprint_custom_properties of this AutoscaleClusterResponse.
        blueprint custom properties

        :param blueprint_custom_properties: The blueprint_custom_properties of this AutoscaleClusterResponse.
        :type: str
        """

        self._blueprint_custom_properties = blueprint_custom_properties

    @property
    def executor_type(self):
        """
        Gets the executor_type of this AutoscaleClusterResponse.
        executor type of cluster

        :return: The executor_type of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._executor_type

    @executor_type.setter
    def executor_type(self, executor_type):
        """
        Sets the executor_type of this AutoscaleClusterResponse.
        executor type of cluster

        :param executor_type: The executor_type of this AutoscaleClusterResponse.
        :type: str
        """
        allowed_values = ["CONTAINER", "DEFAULT"]
        if executor_type not in allowed_values:
            raise ValueError(
                "Invalid value for `executor_type` ({0}), must be one of {1}"
                .format(executor_type, allowed_values)
            )

        self._executor_type = executor_type

    @property
    def gateway(self):
        """
        Gets the gateway of this AutoscaleClusterResponse.

        :return: The gateway of this AutoscaleClusterResponse.
        :rtype: GatewayJson
        """
        return self._gateway

    @gateway.setter
    def gateway(self, gateway):
        """
        Sets the gateway of this AutoscaleClusterResponse.

        :param gateway: The gateway of this AutoscaleClusterResponse.
        :type: GatewayJson
        """

        self._gateway = gateway

    @property
    def custom_containers(self):
        """
        Gets the custom_containers of this AutoscaleClusterResponse.
        custom containers

        :return: The custom_containers of this AutoscaleClusterResponse.
        :rtype: CustomContainerResponse
        """
        return self._custom_containers

    @custom_containers.setter
    def custom_containers(self, custom_containers):
        """
        Sets the custom_containers of this AutoscaleClusterResponse.
        custom containers

        :param custom_containers: The custom_containers of this AutoscaleClusterResponse.
        :type: CustomContainerResponse
        """

        self._custom_containers = custom_containers

    @property
    def ambari_stack_details(self):
        """
        Gets the ambari_stack_details of this AutoscaleClusterResponse.
        details of the Ambari stack

        :return: The ambari_stack_details of this AutoscaleClusterResponse.
        :rtype: AmbariStackDetailsResponse
        """
        return self._ambari_stack_details

    @ambari_stack_details.setter
    def ambari_stack_details(self, ambari_stack_details):
        """
        Sets the ambari_stack_details of this AutoscaleClusterResponse.
        details of the Ambari stack

        :param ambari_stack_details: The ambari_stack_details of this AutoscaleClusterResponse.
        :type: AmbariStackDetailsResponse
        """

        self._ambari_stack_details = ambari_stack_details

    @property
    def ambari_repo_details_json(self):
        """
        Gets the ambari_repo_details_json of this AutoscaleClusterResponse.
        details of the Ambari package repository

        :return: The ambari_repo_details_json of this AutoscaleClusterResponse.
        :rtype: AmbariRepoDetails
        """
        return self._ambari_repo_details_json

    @ambari_repo_details_json.setter
    def ambari_repo_details_json(self, ambari_repo_details_json):
        """
        Sets the ambari_repo_details_json of this AutoscaleClusterResponse.
        details of the Ambari package repository

        :param ambari_repo_details_json: The ambari_repo_details_json of this AutoscaleClusterResponse.
        :type: AmbariRepoDetails
        """

        self._ambari_repo_details_json = ambari_repo_details_json

    @property
    def ambari_database_details(self):
        """
        Gets the ambari_database_details of this AutoscaleClusterResponse.
        [DEPRECATED] use RdsConfig instead! details of the external Ambari database

        :return: The ambari_database_details of this AutoscaleClusterResponse.
        :rtype: AmbariDatabaseDetails
        """
        return self._ambari_database_details

    @ambari_database_details.setter
    def ambari_database_details(self, ambari_database_details):
        """
        Sets the ambari_database_details of this AutoscaleClusterResponse.
        [DEPRECATED] use RdsConfig instead! details of the external Ambari database

        :param ambari_database_details: The ambari_database_details of this AutoscaleClusterResponse.
        :type: AmbariDatabaseDetails
        """

        self._ambari_database_details = ambari_database_details

    @property
    def custom_queue(self):
        """
        Gets the custom_queue of this AutoscaleClusterResponse.
        custom queue for yarn orchestrator

        :return: The custom_queue of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._custom_queue

    @custom_queue.setter
    def custom_queue(self, custom_queue):
        """
        Sets the custom_queue of this AutoscaleClusterResponse.
        custom queue for yarn orchestrator

        :param custom_queue: The custom_queue of this AutoscaleClusterResponse.
        :type: str
        """

        self._custom_queue = custom_queue

    @property
    def creation_finished(self):
        """
        Gets the creation_finished of this AutoscaleClusterResponse.
        Epoch time of cluster creation finish

        :return: The creation_finished of this AutoscaleClusterResponse.
        :rtype: int
        """
        return self._creation_finished

    @creation_finished.setter
    def creation_finished(self, creation_finished):
        """
        Sets the creation_finished of this AutoscaleClusterResponse.
        Epoch time of cluster creation finish

        :param creation_finished: The creation_finished of this AutoscaleClusterResponse.
        :type: int
        """

        self._creation_finished = creation_finished

    @property
    def kerberos_response(self):
        """
        Gets the kerberos_response of this AutoscaleClusterResponse.

        :return: The kerberos_response of this AutoscaleClusterResponse.
        :rtype: KerberosResponse
        """
        return self._kerberos_response

    @kerberos_response.setter
    def kerberos_response(self, kerberos_response):
        """
        Sets the kerberos_response of this AutoscaleClusterResponse.

        :param kerberos_response: The kerberos_response of this AutoscaleClusterResponse.
        :type: KerberosResponse
        """

        self._kerberos_response = kerberos_response

    @property
    def uptime(self):
        """
        Gets the uptime of this AutoscaleClusterResponse.
        duration - how long the cluster is running in milliseconds

        :return: The uptime of this AutoscaleClusterResponse.
        :rtype: int
        """
        return self._uptime

    @uptime.setter
    def uptime(self, uptime):
        """
        Sets the uptime of this AutoscaleClusterResponse.
        duration - how long the cluster is running in milliseconds

        :param uptime: The uptime of this AutoscaleClusterResponse.
        :type: int
        """

        self._uptime = uptime

    @property
    def extended_blueprint_text(self):
        """
        Gets the extended_blueprint_text of this AutoscaleClusterResponse.
        ambari blueprint JSON, set this or the url field

        :return: The extended_blueprint_text of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._extended_blueprint_text

    @extended_blueprint_text.setter
    def extended_blueprint_text(self, extended_blueprint_text):
        """
        Sets the extended_blueprint_text of this AutoscaleClusterResponse.
        ambari blueprint JSON, set this or the url field

        :param extended_blueprint_text: The extended_blueprint_text of this AutoscaleClusterResponse.
        :type: str
        """

        self._extended_blueprint_text = extended_blueprint_text

    @property
    def shared_service_response(self):
        """
        Gets the shared_service_response of this AutoscaleClusterResponse.
        shared service for a specific stack

        :return: The shared_service_response of this AutoscaleClusterResponse.
        :rtype: SharedServiceResponse
        """
        return self._shared_service_response

    @shared_service_response.setter
    def shared_service_response(self, shared_service_response):
        """
        Sets the shared_service_response of this AutoscaleClusterResponse.
        shared service for a specific stack

        :param shared_service_response: The shared_service_response of this AutoscaleClusterResponse.
        :type: SharedServiceResponse
        """

        self._shared_service_response = shared_service_response

    @property
    def file_system_response(self):
        """
        Gets the file_system_response of this AutoscaleClusterResponse.
        filesystem for a specific stack

        :return: The file_system_response of this AutoscaleClusterResponse.
        :rtype: FileSystemResponse
        """
        return self._file_system_response

    @file_system_response.setter
    def file_system_response(self, file_system_response):
        """
        Sets the file_system_response of this AutoscaleClusterResponse.
        filesystem for a specific stack

        :param file_system_response: The file_system_response of this AutoscaleClusterResponse.
        :type: FileSystemResponse
        """

        self._file_system_response = file_system_response

    @property
    def password(self):
        """
        Gets the password of this AutoscaleClusterResponse.
        ambari password

        :return: The password of this AutoscaleClusterResponse.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """
        Sets the password of this AutoscaleClusterResponse.
        ambari password

        :param password: The password of this AutoscaleClusterResponse.
        :type: str
        """

        self._password = password

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, AutoscaleClusterResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
