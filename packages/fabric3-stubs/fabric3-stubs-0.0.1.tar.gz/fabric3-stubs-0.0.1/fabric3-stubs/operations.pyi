# Stubs for fabric.operations (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from fabric.context_managers import quiet as quiet_manager, warn_only as warn_only_manager

class _AttributeString(str):
    def __init__(self, str: str) -> None:
        self.return_code = ... # type: int
    @property
    def stdout(self): ...

class _AttributeList(list): ...

def require(*keys, **kwargs): ...

def prompt(text, key: Optional[Any] = ..., default: str = ..., validate: Optional[Any] = ...): ...

def put(local_path: Optional[Any] = ..., remote_path: Optional[Any] = ..., use_sudo: bool = ..., mirror_local_mode: bool = ..., mode: Optional[Any] = ..., use_glob: bool = ..., temp_dir: str = ...): ...

def get(remote_path, local_path: Optional[Any] = ..., use_sudo: bool = ..., temp_dir: str = ...): ...

def open_shell(command: Optional[Any] = ...): ...

def run(command, shell: bool = ..., pty: bool = ..., combine_stderr: Optional[Any] = ..., quiet: bool = ..., warn_only: bool = ..., stdout: Optional[Any] = ..., stderr: Optional[Any] = ..., timeout: Optional[Any] = ..., shell_escape: Optional[Any] = ..., capture_buffer_size: Optional[Any] = ...) -> _AttributeString : ...

def sudo(command, shell: bool = ..., pty: bool = ..., combine_stderr: Optional[Any] = ..., user: Optional[Any] = ..., quiet: bool = ..., warn_only: bool = ..., stdout: Optional[Any] = ..., stderr: Optional[Any] = ..., group: Optional[Any] = ..., timeout: Optional[Any] = ..., shell_escape: Optional[Any] = ..., capture_buffer_size: Optional[Any] = ...): ...

def local(command, capture: bool = ..., shell: Optional[Any] = ...): ...

def reboot(wait: int = ..., command: str = ..., use_sudo: bool = ...): ...
