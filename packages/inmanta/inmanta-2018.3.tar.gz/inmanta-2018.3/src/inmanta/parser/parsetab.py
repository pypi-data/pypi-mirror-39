
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightMLSrightMLS_ENDAND AS CID CMP_OP DEFINED DICT END ENTITY EXTENDS FALSE FLOAT FOR ID IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS MLS_END NOT NULL OR PARENTS PEQ REGEX REL SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : top_stmttop_stmt : mls\n                | entity_def\n                | implement_def\n                | implementation_def\n                | relation\n                | statement\n                | typedef\n                | index\n                | import import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n                | constructor\n                | function_call\n                | forstmt_list : statement stmt_liststmt_list : statementassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_type : ns_refattr_type : ns_ref \'?\'attr : attr_type IDattr : attr_type ID \'=\' constant\n           | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr_type_multi : ns_ref \'[\' \']\'attr_type_multi : ns_ref \'[\' \']\' \'?\'attr : attr_type_multi IDattr : attr_type_multi ID \'=\' constant_listattr : attr_type_multi ID \'=\' UNDEFattr : attr_type_multi ID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_def : IMPLEMENT class_ref USING PARENTSimplement_def : IMPLEMENT class_ref USING ns_listimplement_def : IMPLEMENT class_ref USING ns_list WHEN conditionimplement_def : IMPLEMENT class_ref USING ns_list mlsimplement_def : IMPLEMENT class_ref USING PARENTS mlsimplement_def : IMPLEMENT class_ref USING ns_list WHEN condition mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDblock : ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relationnew mlsrelation : relationnewrelationnew : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi REL class_refrelationnew : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING REGEX\n                | TYPEDEF ID AS ns_ref MATCHING conditiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' condition : \'(\' condition \')\'condition : operand CMP_OP operand\n                | operand IN list_def\n                | operand IN var_ref\n                | condition AND condition\n                | condition OR condition condition : function_call\n                | var_refcondition : NOT conditioncondition : var_ref \'.\' ID IS DEFINEDcondition : ID IS DEFINEDcondition : TRUE\n                | FALSE operand : constant\n              | function_call\n              | constructor\n              | list_def\n              | map_def\n              | var_ref\n              | index_lookup\n              | map_lookup map_lookup : attr_ref \'[\' operand \']\'\n                   | local_var \'[\' operand \']\'\n                   | map_lookup \'[\' operand \']\' constructor : class_ref \'(\' param_list \')\'  function_call : ns_ref \'(\' operand_list \')\' list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_listpair_list : STRING \':\' operandpair_list :  map_def : \'{\' pair_list \'}\' map_def : \'{\' \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' constant : mls  constant : INT\n    | FLOAT\n     constant : NULL\n     constant : REGEX\n     constant : TRUE\n     constant : FALSE\n     constant : STRING  constant_list : \'[\' constants \']\' constants : constantconstants : constants : constant \',\' constantsparam_list : ID \'=\' operand \',\' param_listparam_list : ID \'=\' operandparam_list : operand_list : operand \',\' operand_listoperand_list : operandoperand_list :ns_list : ns_ref \',\' ns_listns_list : ns_refvar_ref : attr_refattr_ref : var_ref \'.\' IDlocal_var : ns_refvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'INT':([45,46,49,64,68,78,124,126,127,129,130,131,138,160,165,166,179,184,191,197,203,208,209,235,240,242,244,249,274,],[69,69,69,123,69,69,167,69,69,69,69,69,69,69,-70,207,69,69,69,69,69,-71,-73,69,69,69,69,-72,69,]),'IMPORT':([0,1,2,5,6,7,9,10,12,13,14,16,19,20,23,24,25,26,27,31,32,33,38,40,48,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,135,139,141,152,156,158,161,162,165,177,178,182,186,193,194,195,196,198,200,201,202,204,208,209,211,212,214,217,218,219,220,221,223,224,226,227,239,243,248,249,254,256,261,262,263,264,265,266,267,268,269,270,277,278,280,],[3,-4,-8,-17,-138,-6,-14,-65,-5,-74,-15,-3,-134,-11,-145,3,-9,-16,-148,-10,-7,-12,-64,-75,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,-51,-133,-52,-104,-111,-105,-78,-28,-30,-55,-54,-79,-70,-106,-110,-57,-25,-27,-26,-132,-91,-86,-92,-53,-87,-145,-71,-73,-69,-67,-22,-61,-113,-101,-103,-102,-112,-59,-76,-77,-88,-56,-62,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-68,-66,-89,]),'IS':([204,267,],[247,276,]),'UNDEF':([191,192,],[232,236,]),'WHEN':([23,97,118,119,195,],[-145,-144,-133,160,-132,]),'ENTITY':([0,1,2,5,6,7,9,10,12,13,14,16,19,20,23,24,25,26,27,31,32,33,38,40,48,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,135,139,141,152,156,158,161,162,165,177,178,182,186,193,194,195,196,198,200,201,202,204,208,209,211,212,214,217,218,219,220,221,223,224,226,227,239,243,248,249,254,256,261,262,263,264,265,266,267,268,269,270,277,278,280,],[4,-4,-8,-17,-138,-6,-14,-65,-5,-74,-15,-3,-134,-11,-145,4,-9,-16,-148,-10,-7,-12,-64,-75,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,-51,-133,-52,-104,-111,-105,-78,-28,-30,-55,-54,-79,-70,-106,-110,-57,-25,-27,-26,-132,-91,-86,-92,-53,-87,-145,-71,-73,-69,-67,-22,-61,-113,-101,-103,-102,-112,-59,-76,-77,-88,-56,-62,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-68,-66,-89,]),'AND':([19,23,27,48,69,70,71,72,74,75,76,77,79,81,82,83,84,85,87,88,90,91,93,97,125,135,139,177,178,196,198,200,201,202,204,218,219,220,221,223,227,239,246,261,262,263,264,265,266,267,268,269,280,],[-134,-145,-148,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-117,-95,-114,-118,-135,-144,-104,-111,-105,-106,-110,-91,-86,-92,244,-87,-145,-113,-101,-103,-102,-112,244,-88,244,-81,-83,-82,-137,244,-84,-135,-80,-90,-89,]),'CID':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,16,19,20,23,24,25,26,27,30,31,32,33,38,40,45,46,48,49,50,57,59,68,69,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,88,90,91,92,93,94,96,97,98,99,101,109,114,116,117,118,119,125,126,127,129,130,131,133,135,138,139,141,144,146,152,156,158,160,161,162,164,165,169,170,171,177,178,179,181,182,183,184,186,193,194,195,196,197,198,200,201,202,203,204,208,209,211,212,213,214,217,218,219,220,221,223,224,225,226,227,239,240,242,243,244,248,249,254,256,261,262,263,264,265,266,267,268,269,270,277,278,280,],[6,-4,-8,34,-17,-138,-6,6,-14,-65,6,-5,-74,-15,-3,-134,-11,-145,6,-9,-16,-148,53,-10,-7,-12,-64,-75,6,6,-149,6,96,6,6,6,-115,-120,-134,-100,-99,-97,-119,-96,6,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-130,-139,-144,6,6,-13,-23,-29,-24,-51,-133,-52,-104,6,6,6,6,6,96,-111,6,-105,-78,6,6,-28,-30,-55,6,-54,-79,6,-70,6,6,6,-106,-110,6,-129,-57,6,6,-25,-27,-26,-132,-91,6,-86,-92,-53,-87,6,-145,-71,-73,-69,-67,6,-22,-61,-113,-101,-103,-102,-112,-59,6,-76,-77,-88,6,6,-56,6,-62,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-68,-66,-89,]),'TRUE':([45,46,49,68,78,126,127,129,130,131,138,160,165,179,184,191,197,203,208,209,235,240,242,244,249,274,],[76,76,76,76,76,76,76,76,76,76,76,196,-70,76,196,76,196,196,-71,-73,76,76,196,196,-72,76,]),'DICT':([27,48,58,60,69,70,76,81,84,87,90,91,108,110,113,135,145,147,151,153,154,155,157,178,189,228,229,232,233,234,236,237,238,257,258,275,],[-148,-149,106,106,-115,-120,-119,-121,-116,-117,-114,-118,-32,106,106,-111,106,-45,-31,-35,-41,106,106,-110,-48,-47,-46,-38,-36,-37,-43,-44,-42,-50,-49,-122,]),',':([6,19,23,27,48,69,70,71,72,74,75,76,77,79,81,82,83,84,85,87,88,90,91,93,94,96,97,102,104,105,118,121,125,135,139,168,177,178,218,219,220,221,222,223,259,],[-138,-134,-145,-148,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-117,-95,-114,-118,-135,138,-139,-144,144,-137,146,159,163,-104,-111,-105,210,-106,-110,-113,-101,-103,-102,255,-112,274,]),'MATCHING':([23,97,143,],[-145,-144,184,]),'[':([6,23,41,45,46,49,67,68,71,72,73,78,79,89,93,96,97,107,122,126,127,129,130,131,138,160,165,172,179,184,191,192,197,203,204,208,209,219,220,221,240,241,242,244,249,267,271,272,],[-138,-145,64,78,78,78,64,78,129,130,131,78,-136,137,-135,-139,-144,149,64,78,78,78,78,78,78,78,-70,-145,78,78,235,235,78,78,-145,-71,-73,-101,-103,-102,78,78,78,78,-72,-135,64,64,]),'?':([23,97,106,107,190,],[-145,-144,148,150,231,]),'USING':([6,37,96,],[-138,61,-139,]),'.':([6,15,18,19,22,23,71,79,82,93,96,97,102,104,172,202,204,211,212,215,262,264,267,],[-138,43,47,-134,-137,-145,-134,-137,47,-135,-139,-144,47,-137,-145,245,-145,251,252,-137,47,-137,-135,]),'NOT':([160,184,197,203,242,244,],[197,197,197,197,197,197,]),'INDEX':([0,1,2,5,6,7,9,10,12,13,14,16,19,20,23,24,25,26,27,31,32,33,38,40,48,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,135,139,141,152,156,158,161,162,165,177,178,182,186,193,194,195,196,198,200,201,202,204,208,209,211,212,214,217,218,219,220,221,223,224,226,227,239,243,248,249,254,256,261,262,263,264,265,266,267,268,269,270,277,278,280,],[11,-4,-8,-17,-138,-6,-14,-65,-5,-74,-15,-3,-134,-11,-145,11,-9,-16,-148,-10,-7,-12,-64,-75,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,-51,-133,-52,-104,-111,-105,-78,-28,-30,-55,-54,-79,-70,-106,-110,-57,-25,-27,-26,-132,-91,-86,-92,-53,-87,-145,-71,-73,-69,-67,-22,-61,-113,-101,-103,-102,-112,-59,-76,-77,-88,-56,-62,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-68,-66,-89,]),'IMPLEMENT':([0,1,2,5,6,7,9,10,12,13,14,16,19,20,23,24,25,26,27,31,32,33,38,40,48,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,135,139,141,152,156,158,161,162,165,177,178,182,186,193,194,195,196,198,200,201,202,204,208,209,211,212,214,217,218,219,220,221,223,224,226,227,239,243,248,249,254,256,261,262,263,264,265,266,267,268,269,270,277,278,280,],[8,-4,-8,-17,-138,-6,-14,-65,-5,-74,-15,-3,-134,-11,-145,8,-9,-16,-148,-10,-7,-12,-64,-75,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,-51,-133,-52,-104,-111,-105,-78,-28,-30,-55,-54,-79,-70,-106,-110,-57,-25,-27,-26,-132,-91,-86,-92,-53,-87,-145,-71,-73,-69,-67,-22,-61,-113,-101,-103,-102,-112,-59,-76,-77,-88,-56,-62,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-68,-66,-89,]),'REGEX':([45,46,49,68,78,126,127,129,130,131,138,160,165,179,184,191,197,203,208,209,235,240,242,244,249,274,],[91,91,91,91,91,91,91,91,91,91,91,91,-70,91,226,91,91,91,-71,-73,91,91,91,91,-72,91,]),'SEP':([22,23,33,36,79,97,104,107,118,143,172,204,215,264,],[50,-145,55,50,133,-144,50,55,55,55,-145,-145,50,55,]),'DEFINED':([247,276,],[269,280,]),'IN':([27,44,48,69,71,72,74,75,77,79,81,84,85,87,88,90,91,97,125,135,139,177,178,196,198,199,200,202,204,218,219,220,221,223,226,267,],[-148,68,-149,-115,-134,-100,-99,-97,-96,-137,-121,-116,-93,-117,-95,-114,-118,-144,-104,-111,-105,-106,-110,-119,-94,241,-120,-98,-145,-113,-101,-103,-102,-112,-118,-135,]),'REL':([63,127,165,208,209,249,],[122,170,-70,-71,-73,-72,]),'END':([5,9,14,23,26,27,48,58,60,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,91,92,93,97,108,110,113,125,135,139,145,147,151,153,154,155,157,171,177,178,183,189,213,214,216,217,218,219,220,221,223,225,228,229,232,233,234,236,237,238,253,254,257,258,275,],[-17,-14,-15,-145,-16,-148,-149,114,114,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-144,-32,152,156,-104,-111,-105,114,-45,-31,-35,-41,193,114,217,-106,-110,217,-48,-19,-22,254,-61,-113,-101,-103,-102,-112,217,-47,-46,-38,-36,-37,-43,-44,-42,-18,-60,-50,-49,-122,]),'CMP_OP':([27,48,69,71,72,74,75,77,79,81,84,85,87,88,90,91,97,125,135,139,177,178,196,198,199,200,202,204,218,219,220,221,223,226,267,],[-148,-149,-115,-134,-100,-99,-97,-96,-137,-121,-116,-93,-117,-95,-114,-118,-144,-104,-111,-105,-106,-110,-119,-94,240,-120,-98,-145,-113,-101,-103,-102,-112,-118,-135,]),'=':([18,19,22,23,66,93,97,147,153,154,172,189,215,],[46,-134,-137,-145,126,-135,-144,188,191,192,126,230,-137,]),'AS':([23,33,53,54,97,],[-145,56,99,100,-144,]),'FALSE':([45,46,49,68,78,126,127,129,130,131,138,160,165,179,184,191,197,203,208,209,235,240,242,244,249,274,],[70,70,70,70,70,70,70,70,70,70,70,200,-70,70,200,70,200,200,-71,-73,70,70,200,200,-72,70,]),'FOR':([0,1,2,5,6,7,9,10,12,13,14,16,19,20,23,24,25,26,27,31,32,33,38,40,48,52,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,135,139,141,152,156,158,161,162,165,171,177,178,182,183,186,193,194,195,196,198,200,201,202,204,208,209,211,212,213,214,217,218,219,220,221,223,224,225,226,227,239,243,248,249,254,256,261,262,263,264,265,266,267,268,269,270,277,278,280,],[17,-4,-8,-17,-138,-6,-14,-65,-5,-74,-15,-3,-134,-11,-145,17,-9,-16,-148,-10,-7,-12,-64,-75,-149,98,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,-51,-133,-52,-104,-111,-105,-78,-28,-30,-55,-54,-79,-70,17,-106,-110,-57,17,-25,-27,-26,-132,-91,-86,-92,-53,-87,-145,-71,-73,-69,-67,17,-22,-61,-113,-101,-103,-102,-112,-59,17,-76,-77,-88,-56,-62,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-68,-66,-89,]),'OR':([19,23,27,48,69,70,71,72,74,75,76,77,79,81,82,83,84,85,87,88,90,91,93,97,125,135,139,177,178,196,198,200,201,202,204,218,219,220,221,223,227,239,246,261,262,263,264,265,266,267,268,269,280,],[-134,-145,-148,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-117,-95,-114,-118,-135,-144,-104,-111,-105,-106,-110,-91,-86,-92,242,-87,-145,-113,-101,-103,-102,-112,242,-88,242,-81,-83,-82,-137,-85,-84,-135,-80,-90,-89,]),'(':([6,15,22,23,39,79,89,96,97,142,160,172,184,197,203,204,215,242,244,],[-138,42,49,-145,62,49,42,-139,-144,42,203,-145,203,203,203,-145,49,203,203,]),'TYPEDEF':([0,1,2,5,6,7,9,10,12,13,14,16,19,20,23,24,25,26,27,31,32,33,38,40,48,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,135,139,141,152,156,158,161,162,165,177,178,182,186,193,194,195,196,198,200,201,202,204,208,209,211,212,214,217,218,219,220,221,223,224,226,227,239,243,248,249,254,256,261,262,263,264,265,266,267,268,269,270,277,278,280,],[30,-4,-8,-17,-138,-6,-14,-65,-5,-74,-15,-3,-134,-11,-145,30,-9,-16,-148,-10,-7,-12,-64,-75,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,-51,-133,-52,-104,-111,-105,-78,-28,-30,-55,-54,-79,-70,-106,-110,-57,-25,-27,-26,-132,-91,-86,-92,-53,-87,-145,-71,-73,-69,-67,-22,-61,-113,-101,-103,-102,-112,-59,-76,-77,-88,-56,-62,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-68,-66,-89,]),'MLS':([0,1,2,5,6,7,9,10,12,13,14,16,19,20,21,23,24,25,26,27,31,32,33,38,40,45,46,48,49,58,60,68,69,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,126,127,129,130,131,135,138,139,141,145,152,156,157,158,160,161,162,165,177,178,179,182,183,184,186,191,193,194,195,196,197,198,200,201,202,203,204,208,209,211,212,214,217,218,219,220,221,223,224,226,227,235,239,240,242,243,244,248,249,254,256,261,262,263,264,265,266,267,268,269,270,274,277,278,280,],[21,-4,-8,-17,-138,-6,-14,21,-5,21,-15,-3,-134,-11,21,-145,21,-9,-16,-148,-10,-7,-12,-64,-75,21,21,-149,21,21,21,21,-115,-120,-134,-100,-99,-97,-119,-96,21,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,21,-133,21,-104,21,21,21,21,21,-111,21,-105,-78,21,-28,-30,21,-55,21,-54,-79,-70,-106,-110,21,-57,21,21,-25,21,-27,-26,-132,-91,21,-86,-92,21,-87,21,-145,-71,-73,-69,-67,-22,-61,-113,-101,-103,-102,-112,-59,-76,-77,21,-88,21,21,-56,21,21,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,21,-68,-66,-89,]),'PEQ':([18,19,22,23,93,97,215,],[45,-134,-137,-145,-135,-144,-137,]),'ID':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,29,30,31,32,33,38,40,42,43,45,46,47,48,49,50,55,56,57,58,59,60,61,62,68,69,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,88,90,91,92,93,94,96,97,98,99,100,101,106,107,108,109,110,111,112,113,114,116,117,118,119,125,126,127,129,130,131,133,135,137,138,139,141,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,169,170,171,177,178,179,181,182,183,184,186,189,190,193,194,195,196,197,198,200,201,202,203,204,206,208,209,210,211,212,213,214,217,218,219,220,221,223,224,225,226,227,228,229,231,232,233,234,236,237,238,239,240,241,242,243,244,245,248,249,251,252,254,256,257,258,261,262,263,264,265,266,267,268,269,270,275,277,278,280,],[23,-4,-8,23,35,-17,-138,-6,23,-14,-65,23,-5,-74,-15,41,-3,44,-134,-11,-145,23,-9,-16,-148,52,54,-10,-7,-12,-64,-75,66,67,23,23,93,-149,23,97,97,101,23,23,23,23,23,121,23,-115,-120,-134,-100,-99,-97,-119,-96,23,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-130,-139,-144,23,23,23,-13,147,-33,-32,-23,23,153,154,23,-29,-24,-51,-133,-52,-104,23,23,172,23,23,97,-111,66,23,-105,-78,23,23,23,-45,189,-34,-31,-28,-35,-41,23,-30,23,-55,23,204,-54,-79,121,23,-70,23,23,23,-106,-110,23,-129,-57,23,204,-25,-48,-39,-27,-26,-132,-91,204,-86,-92,-53,-87,204,-145,248,-71,-73,66,-69,-67,23,-22,-61,-113,-101,-103,-102,-112,-59,23,-76,-77,-47,-46,-40,-38,-36,-37,-43,-44,-42,-88,23,23,204,-56,204,267,-62,-72,271,272,-60,-58,-50,-49,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-122,-68,-66,-89,]),'EXTENDS':([34,35,],[57,59,]),'PARENTS':([61,],[117,]),')':([19,23,27,42,48,49,65,69,70,71,72,74,75,76,77,79,81,82,83,84,85,87,88,90,91,93,94,95,97,120,121,125,135,138,139,168,177,178,181,196,198,200,202,204,205,210,218,219,220,221,223,239,246,250,261,262,263,264,265,266,267,268,269,280,],[-134,-145,-148,-128,-149,-131,125,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-117,-95,-114,-118,-135,-130,139,-144,162,-147,-104,-111,-131,-105,-127,-106,-110,-129,-91,-86,-92,-87,-145,-146,-128,-113,-101,-103,-102,-112,-88,268,-126,-81,-83,-82,-137,-85,-84,-135,-80,-90,-89,]),']':([23,27,48,69,70,71,72,74,75,76,77,78,79,81,82,83,84,85,87,88,90,91,93,94,97,123,125,129,132,135,137,138,139,149,166,167,168,172,173,174,175,176,177,178,180,181,207,210,218,219,220,221,223,235,250,259,260,274,279,],[-145,-148,-149,-115,-120,-134,-100,-99,-97,-119,-96,-131,-137,-121,-98,-94,-116,-93,-117,-95,-114,-118,-135,-130,-144,165,-104,-128,177,-111,-128,-131,-105,190,208,209,-127,-145,218,219,220,221,-106,-110,223,-129,249,-128,-113,-101,-103,-102,-112,-124,-126,-123,275,-124,-125,]),'STRING':([45,46,49,68,78,80,126,127,129,130,131,138,160,165,179,184,191,197,203,208,209,235,240,242,244,249,255,274,],[81,81,81,81,81,136,81,81,81,81,81,81,81,-70,81,81,81,81,81,-71,-73,81,81,81,81,-72,136,81,]),':':([6,19,23,27,34,35,48,64,69,70,71,72,74,75,76,77,79,81,82,83,84,85,87,88,90,91,93,96,97,102,103,104,105,115,123,125,128,135,136,139,140,177,178,185,187,218,219,220,221,223,],[-138,-134,-145,-148,58,60,-149,124,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-117,-95,-114,-118,-135,-139,-144,-143,145,-137,-142,157,166,-104,171,-111,179,-105,183,-106,-110,-141,-140,-113,-101,-103,-102,-112,]),'MLS_END':([0,1,2,5,6,7,9,10,12,13,14,16,19,20,21,23,24,25,26,27,31,32,33,38,40,45,46,48,49,58,60,68,69,70,71,72,74,75,76,77,78,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,126,127,129,130,131,135,138,139,141,145,152,156,157,158,160,161,162,165,177,178,179,182,183,184,186,191,193,194,195,196,197,198,200,201,202,203,204,208,209,211,212,214,217,218,219,220,221,223,224,226,227,235,239,240,242,243,244,248,249,254,256,261,262,263,264,265,266,267,268,269,270,274,277,278,280,],[27,-4,-8,-17,-138,-6,-14,27,-5,27,-15,-3,-134,-11,27,-145,27,-9,-16,-148,-10,-7,-12,-64,-75,27,27,-149,27,27,27,27,-115,-120,-134,-100,-99,-97,-119,-96,27,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,27,-133,27,-104,27,27,27,27,27,-111,27,-105,-78,27,-28,-30,27,-55,27,-54,-79,-70,-106,-110,27,-57,27,27,-25,27,-27,-26,-132,-91,27,-86,-92,27,-87,27,-145,-71,-73,-69,-67,-22,-61,-113,-101,-103,-102,-112,-59,-76,-77,27,-88,27,27,-56,27,27,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,27,-68,-66,-89,]),'$end':([1,2,5,6,7,9,10,12,13,14,16,19,20,23,24,25,26,27,28,31,32,33,38,40,48,51,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,135,139,141,152,156,158,161,162,165,177,178,182,186,193,194,195,196,198,200,201,202,204,208,209,211,212,214,217,218,219,220,221,223,224,226,227,239,243,248,249,254,256,261,262,263,264,265,266,267,268,269,270,277,278,280,],[-4,-8,-17,-138,-6,-14,-65,-5,-74,-15,-3,-134,-11,-145,-2,-9,-16,-148,0,-10,-7,-12,-64,-75,-149,-1,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,-51,-133,-52,-104,-111,-105,-78,-28,-30,-55,-54,-79,-70,-106,-110,-57,-25,-27,-26,-132,-91,-86,-92,-53,-87,-145,-71,-73,-69,-67,-22,-61,-113,-101,-103,-102,-112,-59,-76,-77,-88,-56,-62,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-68,-66,-89,]),'{':([45,46,49,68,78,126,127,129,130,131,138,160,165,179,184,188,197,203,208,209,230,240,242,244,249,],[80,80,80,80,80,80,80,80,80,80,80,80,-70,80,80,80,80,80,-71,-73,80,80,80,80,-72,]),'IMPLEMENTATION':([0,1,2,5,6,7,9,10,12,13,14,16,19,20,23,24,25,26,27,31,32,33,38,40,48,69,70,71,72,74,75,76,77,79,81,82,83,84,85,86,87,88,90,91,92,93,96,97,101,109,114,116,117,118,119,125,135,139,141,152,156,158,161,162,165,177,178,182,186,193,194,195,196,198,200,201,202,204,208,209,211,212,214,217,218,219,220,221,223,224,226,227,239,243,248,249,254,256,261,262,263,264,265,266,267,268,269,270,277,278,280,],[29,-4,-8,-17,-138,-6,-14,-65,-5,-74,-15,-3,-134,-11,-145,29,-9,-16,-148,-10,-7,-12,-64,-75,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,-121,-98,-94,-116,-93,-21,-117,-95,-114,-118,-20,-135,-139,-144,-13,-23,-29,-24,-51,-133,-52,-104,-111,-105,-78,-28,-30,-55,-54,-79,-70,-106,-110,-57,-25,-27,-26,-132,-91,-86,-92,-53,-87,-145,-71,-73,-69,-67,-22,-61,-113,-101,-103,-102,-112,-59,-76,-77,-88,-56,-62,-72,-60,-58,-81,-83,-82,-137,-85,-84,-135,-80,-90,-63,-68,-66,-89,]),'NULL':([45,46,49,68,78,126,127,129,130,131,138,160,165,179,184,188,191,192,197,203,208,209,230,235,240,242,244,249,274,],[87,87,87,87,87,87,87,87,87,87,87,87,-70,87,87,228,87,237,87,87,-71,-73,257,87,87,87,87,-72,87,]),'FLOAT':([45,46,49,68,78,126,127,129,130,131,138,160,165,179,184,191,197,203,208,209,235,240,242,244,249,274,],[84,84,84,84,84,84,84,84,84,84,84,84,-70,84,84,84,84,84,-71,-73,84,84,84,84,-72,84,]),'}':([23,27,48,69,70,71,72,74,75,76,77,79,80,81,82,83,84,85,87,88,90,91,93,97,125,134,135,139,177,178,218,219,220,221,222,223,255,273,],[-145,-148,-149,-115,-120,-134,-100,-99,-97,-119,-96,-137,135,-121,-98,-94,-116,-93,-117,-95,-114,-118,-135,-144,-104,178,-111,-105,-106,-110,-113,-101,-103,-102,-108,-112,-109,-107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'entity_def':([0,24,],[1,1,]),'statement':([0,24,171,183,213,225,],[2,2,213,213,213,213,]),'local_var':([45,46,49,68,78,126,127,129,130,131,138,160,179,184,197,203,240,242,244,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'for':([0,24,171,183,213,225,],[5,5,5,5,5,5,]),'multi':([41,67,122,271,272,],[63,127,164,277,278,]),'list_def':([45,46,49,68,78,126,127,129,130,131,138,160,179,184,197,203,240,241,242,244,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,263,77,77,]),'implementation_def':([0,24,],[7,7,]),'assign':([0,24,171,183,213,225,],[9,9,9,9,9,9,]),'ns_list':([61,159,],[119,195,]),'var_ref':([0,24,45,46,49,57,59,68,78,126,127,129,130,131,138,144,146,160,171,179,183,184,197,203,213,225,240,241,242,244,],[18,18,82,82,82,102,102,82,82,82,82,82,82,82,82,102,102,202,18,82,18,202,202,202,18,18,82,262,202,202,]),'relationnew':([0,24,],[10,10,]),'function_call':([0,24,45,46,49,68,78,126,127,129,130,131,138,160,171,179,183,184,197,203,213,225,240,242,244,],[26,26,83,83,83,83,83,83,83,83,83,83,83,198,26,83,26,198,198,198,26,26,83,198,198,]),'implement_def':([0,24,],[12,12,]),'stmt_list':([171,183,213,225,],[216,216,253,216,]),'constant':([45,46,49,68,78,126,127,129,130,131,138,160,179,184,191,197,203,235,240,242,244,274,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,233,85,85,259,85,85,85,259,]),'pair_list':([80,255,],[134,273,]),'typedef_inner':([0,24,],[13,13,]),'map_lookup':([45,46,49,68,78,126,127,129,130,131,138,160,179,184,197,203,240,242,244,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'constructor':([0,24,45,46,49,68,78,99,126,127,129,130,131,138,160,171,179,183,184,197,203,213,225,240,242,244,],[14,14,88,88,88,88,88,141,88,88,88,88,88,88,88,14,88,14,88,88,88,14,14,88,88,88,]),'class_ref':([0,8,11,24,45,46,49,57,59,68,78,98,99,126,127,129,130,131,138,144,146,160,164,169,170,171,179,183,184,197,203,213,225,240,242,244,],[15,37,39,15,89,89,89,105,105,89,89,140,142,89,89,89,89,89,89,105,105,89,206,211,212,142,89,142,89,89,89,142,142,89,89,89,]),'mls':([0,10,13,21,24,45,46,49,58,60,68,78,117,119,126,127,129,130,131,138,145,157,160,179,183,184,191,197,201,203,235,240,242,244,248,274,],[16,38,40,48,16,90,90,90,113,113,90,90,158,161,90,90,90,90,90,90,113,113,90,90,225,90,90,90,243,90,90,90,90,90,270,90,]),'operand':([45,46,49,68,78,126,127,129,130,131,138,160,179,184,197,203,240,242,244,],[86,92,94,128,94,168,94,174,175,176,94,199,222,199,199,199,261,199,199,]),'entity_body_outer':([58,60,145,157,],[109,116,186,194,]),'attr_type_multi':([58,60,110,113,145,155,157,],[112,112,112,112,112,112,112,]),'condition':([160,184,197,203,242,244,],[201,227,239,246,265,266,]),'typedef':([0,24,],[25,25,]),'map_def':([45,46,49,68,78,126,127,129,130,131,138,160,179,184,188,197,203,230,240,242,244,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,229,75,75,258,75,75,75,]),'constant_list':([191,192,],[234,238,]),'block':([171,183,225,],[214,224,256,]),'import':([0,24,],[20,20,]),'param_list':([42,129,137,210,],[65,173,180,250,]),'constants':([235,274,],[260,279,]),'relation':([0,24,],[32,32,]),'ns_ref':([0,3,8,11,24,45,46,49,57,58,59,60,61,68,78,98,99,100,110,113,126,127,129,130,131,138,144,145,146,155,157,159,160,164,169,170,171,179,183,184,197,203,213,225,240,241,242,244,],[22,33,36,36,22,79,79,79,104,107,104,107,118,79,79,36,36,143,107,107,79,79,79,79,79,79,104,107,104,107,107,118,79,36,36,36,215,79,215,79,79,79,215,215,79,264,79,79,]),'attr_ref':([0,24,45,46,49,57,59,68,78,126,127,129,130,131,138,144,146,160,171,179,183,184,197,203,213,225,240,241,242,244,],[19,19,71,71,71,19,19,71,71,71,71,71,71,71,71,19,19,71,19,71,19,71,71,71,19,19,71,19,71,71,]),'attr':([58,60,110,113,145,155,157,],[108,108,151,108,108,151,108,]),'top_stmt':([0,24,],[24,24,]),'index_lookup':([45,46,49,68,78,126,127,129,130,131,138,160,179,184,197,203,240,242,244,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'id_list':([62,163,],[120,205,]),'class_ref_list':([57,59,144,146,],[103,115,185,187,]),'main':([0,24,],[28,51,]),'entity_body':([58,60,113,145,157,],[110,110,155,110,110,]),'implementation':([140,],[182,]),'index':([0,24,],[31,31,]),'attr_type':([58,60,110,113,145,155,157,],[111,111,111,111,111,111,111,]),'operand_list':([49,78,127,138,],[95,132,169,181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',89),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',96),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',101),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',102),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',103),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',104),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',105),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',106),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',107),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',108),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',109),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',118),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',124),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',133),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',134),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',135),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',136),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',150),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',157),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',162),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',168),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',174),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',183),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',189),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',194),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',200),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',205),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',210),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',215),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',220),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',225),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',231),
  ('attr_type -> ns_ref','attr_type',1,'p_attribute_type','plyInmantaParser.py',236),
  ('attr_type -> ns_ref ?','attr_type',2,'p_attribute_type_opt','plyInmantaParser.py',241),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',246),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',253),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',254),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',261),
  ('attr_type_multi -> ns_ref [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',268),
  ('attr_type_multi -> ns_ref [ ] ?','attr_type_multi',4,'p_attribute_type_multi_opt','plyInmantaParser.py',273),
  ('attr -> attr_type_multi ID','attr',2,'p_attr_list','plyInmantaParser.py',278),
  ('attr -> attr_type_multi ID = constant_list','attr',4,'p_attr_list_cte','plyInmantaParser.py',285),
  ('attr -> attr_type_multi ID = UNDEF','attr',4,'p_attr_list_undef','plyInmantaParser.py',292),
  ('attr -> attr_type_multi ID = NULL','attr',4,'p_attr_list_null','plyInmantaParser.py',299),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',306),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',312),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',318),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',323),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',329),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',335),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS','implement_def',4,'p_implement_inh','plyInmantaParser.py',342),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',348),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',354),
  ('implement_def -> IMPLEMENT class_ref USING ns_list mls','implement_def',5,'p_implement_comment','plyInmantaParser.py',360),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS mls','implement_def',5,'p_implement_inh_comment','plyInmantaParser.py',366),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition mls','implement_def',7,'p_implement_when_comment','plyInmantaParser.py',372),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',381),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',393),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',398),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',403),
  ('block -> END','block',1,'p_block_empty','plyInmantaParser.py',408),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',415),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_comment','plyInmantaParser.py',424),
  ('relation -> relationnew mls','relation',2,'p_relation_new_outer_comment','plyInmantaParser.py',435),
  ('relation -> relationnew','relation',1,'p_relation_new_outer','plyInmantaParser.py',442),
  ('relationnew -> class_ref . ID multi REL class_ref . ID multi','relationnew',9,'p_relation_new','plyInmantaParser.py',447),
  ('relationnew -> class_ref . ID multi REL class_ref','relationnew',6,'p_relation_new_unidir','plyInmantaParser.py',453),
  ('relationnew -> class_ref . ID multi operand_list class_ref . ID multi','relationnew',9,'p_relation_new_annotated','plyInmantaParser.py',459),
  ('relationnew -> class_ref . ID multi operand_list class_ref','relationnew',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',465),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',471),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',476),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',481),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',486),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',493),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',498),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',505),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING condition','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',506),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',512),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',519),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',528),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',533),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',534),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',535),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',536),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',537),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',544),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',545),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',550),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',556),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',562),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',570),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',571),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',581),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',582),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',583),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',584),
  ('operand -> map_def','operand',1,'p_operand','plyInmantaParser.py',585),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',586),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',587),
  ('operand -> map_lookup','operand',1,'p_operand','plyInmantaParser.py',588),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',593),
  ('map_lookup -> local_var [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',594),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',595),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',600),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',605),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',611),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',617),
  ('pair_list -> STRING : operand','pair_list',3,'p_pair_list_term','plyInmantaParser.py',623),
  ('pair_list -> <empty>','pair_list',0,'p_pair_list_term_2','plyInmantaParser.py',628),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',633),
  ('map_def -> { }','map_def',2,'p_map_def_empty','plyInmantaParser.py',639),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',645),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',651),
  ('constant -> mls','constant',1,'p_constant_mls','plyInmantaParser.py',660),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',666),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',667),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',674),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',681),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',688),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',695),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',706),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',741),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',747),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',752),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',757),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',763),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',769),
  ('param_list -> <empty>','param_list',0,'p_param_list_term_2','plyInmantaParser.py',774),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',779),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',785),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',790),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',795),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',801),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',806),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',811),
  ('local_var -> ns_ref','local_var',1,'p_local_var','plyInmantaParser.py',817),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',823),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',829),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',840),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',852),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',858),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',863),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',868),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',874),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',880),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',885),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',891),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',896),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',901),
]
