#
# Benchmarking Suite
# Copyright 2014-2018 Engineering Ingegneria Informatica S.p.A.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Developed in the ARTIST EU project (www.artist-project.eu) and in the
# CloudPerfect EU project (https://cloudperfect.eu/)

[DEFAULT]
tool_name = Web Framework Benchmarking
class = benchsuite.stdlib.benchmark.vm_benchmark.BashCommandBenchmark
parser = benchsuite.stdlib.benchmark.parsers.WebFrameworksBenchmarksParser


#categories_common = Database, Relational Database, MySQL Database


install_ubuntu =
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt-get update
    sudo DEBIAN_FRONTEND=noninteractive apt-get -yq install docker-ce unzip
    %(install_all)s

install_all =
    # download FrameworkBenchmarks from master
    test ! -f /tmp/frameworkBenchmarks.zip && wget https://codeload.github.com/TechEmpower/FrameworkBenchmarks/zip/master -O /tmp/frameworkBenchmarks.zip || echo "File already exist. Do not download"
    unzip /tmp/frameworkBenchmarks.zip
    mv FrameworkBenchmarks-master tool

    # remove the interactive option from the docker invocation, otherwise it will fail
    # when launched from the Benchmarking Suite
    sed -i 's/exec\ docker\(.*\)-it/exec\ docker\1/' tool/tfb

execute =

    # if there is < 2GB available, try to prune Docker objects to get more space
    test `df -k --output=avail / |tail -1` -lt 2000000 && sudo docker system prune -af

    cd tool
    sudo ./tfb --test %(framework)s --type %(test)s | tee output && echo -e "@@@ results.json content @@@\n" && cat `find results -name results.json` && echo -e "\n@@@@@@"

    # kill all containers (if test fails, some containers might remain running)
    test `sudo docker ps -q | wc -l` -ne "0" && sudo docker kill $(sudo docker ps -q)

    # since the tfb command does not exist with a status !=0 in case of failures, we store the output and search for "NO RESULTS" string
    ! grep "NO RESULTS" output



framework =
test =

# Workloads
# - cached_query test is not done because it is not implemented for the vast majority of frameworks
# - "go" framework has been removed because it does not collect performance metrics during the execution


categories_common = Memory Intensive, Network Intensive

[django-query]
categories =  %(categories_common)s
framework = django
test = query

[django-plaintext]
categories =  %(categories_common)s
framework = django
test = plaintext

[django-json]
categories =  %(categories_common)s
framework = django
test = json

[django-fortune]
categories =  %(categories_common)s
framework = django
test = fortune

[django-db]
categories =  %(categories_common)s
framework = django
test = db

[django-update]
categories =  %(categories_common)s
framework = django
test = update

[spring-query]
categories =  %(categories_common)s
framework = spring
test = query

[spring-plaintext]
categories =  %(categories_common)s
framework = spring
test = plaintext

[spring-json]
categories =  %(categories_common)s
framework = spring
test = json

[spring-fortune]
categories =  %(categories_common)s
framework = spring
test = fortune

[spring-db]
categories =  %(categories_common)s
framework = spring
test = db

[spring-update]
categories =  %(categories_common)s
framework = spring
test = update

[cakephp-query]
categories =  %(categories_common)s
framework = cakephp
test = query

[cakephp-plaintext]
categories =  %(categories_common)s
framework = cakephp
test = plaintext

[cakephp-json]
categories =  %(categories_common)s
framework = cakephp
test = json

[cakephp-fortune]
categories =  %(categories_common)s
framework = cakephp
test = fortune

[cakephp-db]
categories =  %(categories_common)s
framework = cakephp
test = db

[cakephp-update]
categories =  %(categories_common)s
framework = cakephp
test = update

[flask-query]
categories =  %(categories_common)s
framework = flask
test = query

[flask-plaintext]
categories =  %(categories_common)s
framework = flask
test = plaintext

[flask-json]
categories =  %(categories_common)s
framework = flask
test = json

[flask-fortune]
categories =  %(categories_common)s
framework = flask
test = fortune

[flask-db]
categories =  %(categories_common)s
framework = flask
test = db

[flask-update]
categories =  %(categories_common)s
framework = flask
test = update

[fasthttp-query]
categories =  %(categories_common)s
framework = fasthttp
test = query

[fasthttp-plaintext]
categories =  %(categories_common)s
framework = fasthttp
test = plaintext

[fasthttp-json]
categories =  %(categories_common)s
framework = fasthttp
test = json

[fasthttp-fortune]
categories =  %(categories_common)s
framework = fasthttp
test = fortune

[fasthttp-db]
categories =  %(categories_common)s
framework = fasthttp
test = db

[fasthttp-update]
categories =  %(categories_common)s
framework = fasthttp
test = update

[nodejs-query]
categories =  %(categories_common)s
framework = nodejs
test = query

[nodejs-plaintext]
categories =  %(categories_common)s
framework = nodejs
test = plaintext

[nodejs-json]
categories =  %(categories_common)s
framework = nodejs
test = json

[nodejs-fortune]
categories =  %(categories_common)s
framework = nodejs
test = fortune

[nodejs-db]
categories =  %(categories_common)s
framework = nodejs
test = db

[nodejs-update]
categories =  %(categories_common)s
framework = nodejs
test = update

#[php-query]
#categories =  %(categories_common)s
#framework = php
#test = query
#
#[php-plaintext]
#categories =  %(categories_common)s
#framework = php
#test = plaintext
#
#[php-json]
#categories =  %(categories_common)s
#framework = php
#test = json
#
## not implemented
## [php-fortune]
## framework = php
## test = fortune
#
#[php-db]
#categories =  %(categories_common)s
#framework = php
#test = db
#
# not implemented
# [php-update]
# framework = php
# test = update

