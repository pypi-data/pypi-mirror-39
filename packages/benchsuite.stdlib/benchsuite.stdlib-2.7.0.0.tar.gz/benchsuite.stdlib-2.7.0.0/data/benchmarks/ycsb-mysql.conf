# Benchmarking Suite
# Copyright 2014-2018 Engineering Ingegneria Informatica S.p.A.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Developed in the ARTIST EU project (www.artist-project.eu) and in the
# CloudPerfect EU project (https://cloudperfect.eu/)

[DEFAULT]
tool_name = YCSB MySQL
class = benchsuite.stdlib.benchmark.vm_benchmark.BashCommandBenchmark
parser = benchsuite.stdlib.benchmark.parsers.YCSBResultParser


categories_common = Disk Intensive, Database, Relational Database, MySQL Database

install_ubuntu_14 =
    sudo apt-get update
    sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password root'
    sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password root'
    sudo DEBIAN_FRONTEND=noninteractive apt-get -yq install mysql-server openjdk-7-jre-headless libmysql-java python
    %(install_all)s

install_ubuntu_16 =
    sudo apt-get update
    sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password root'
    sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password root'
    sudo DEBIAN_FRONTEND=noninteractive apt-get -yq install mysql-server openjdk-8-jre-headless libmysql-java python
    %(install_all)s


install_centos =
    sudo yum -y install java-1.7.0-openjdk mariadb-server mysql-connector-java
    sudo systemctl start mariadb
    # try to change the password. Return code 0 even if it is not successful (e.g. because already changed in a previous execution)
    echo "SET PASSWORD = PASSWORD('root');" | mysql -uroot | echo ""
    %(install_all)s

install_centos_6 =
    sudo yum -y install java-1.7.0-openjdk mysql-server mysql-connector-java
    sudo service mysqld start
    # try to change the password. Return code 0 even if it is not successful (e.g. because already changed in a previous execution)
    echo "SET PASSWORD = PASSWORD('root');" | mysql -uroot | echo ""
    %(install_all)s

install_all =

    test ! -f /tmp/ycsb-jdbc.tar.gz && wget  https://github.com/brianfrankcooper/YCSB/releases/download/0.12.0/ycsb-jdbc-binding-0.12.0.tar.gz -O /tmp/ycsb-jdbc.tar.gz || echo "File already exist. Do not download"
    tar xzvf /tmp/ycsb-jdbc.tar.gz
    mv ycsb-jdbc-binding-0.12.0 ycsb
    echo "
        drop database if exists benchmark;
        create database benchmark;
        use benchmark;
            CREATE TABLE usertable (
                YCSB_KEY VARCHAR(255) PRIMARY KEY,
                FIELD0 TEXT, FIELD1 TEXT,
                FIELD2 TEXT, FIELD3 TEXT,
                FIELD4 TEXT, FIELD5 TEXT,
                FIELD6 TEXT, FIELD7 TEXT,
                FIELD8 TEXT, FIELD9 TEXT
            );
    " | mysql -uroot -proot
    cd ycsb
    echo "%(workload)s" > workload.txt
    bin/ycsb load jdbc -P workload.txt -p db.url=jdbc:mysql://127.0.0.1:3306/benchmark -p db.user=root -p db.passwd=root -p db.batchsize=10000 -p jdbc.batchupdateapi=true -p jdbc.autocommit=false -cp /usr/share/java/mysql-connector-java.jar | tee output
    # since the ycsb commands do not exit with an exit status !=0 if the load or run contain errors, we search for the FAILED word in the output
    ! grep FAILED output

execute =
    cd ycsb
    bin/ycsb run jdbc -P workload.txt -p db.url=jdbc:mysql://127.0.0.1:3306/benchmark -p db.user=root -p db.passwd=root -cp /usr/share/java/mysql-connector-java.jar | tee output
    # since the ycsb commands do not exit with an exit status !=0 if the load or run contain errors, we search for the FAILED word in the output
    ! grep FAILED output

workload =

default_ops_count= 100000
long_ops_count = 1000000

[workloada]
categories = %(categories_common)s, Read/Update ratio 50/50
description = The application has read/update operations ratio of 50/50. Example: session store recording recent actions
workload =
    recordcount=%(default_ops_count)s
    operationcount=%(default_ops_count)s
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0.5
    updateproportion=0.5
    scanproportion=0
    insertproportion=0
    requestdistribution=zipfian

[workloadb]
categories = %(categories_common)s, Read/Update ratio 95/5
description = The application has read/update operations ratio of 95/5. Example: photo tagging; add a tag is an update, but most operations are to read tags
workload =
    recordcount=%(default_ops_count)s
    operationcount=%(default_ops_count)s
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0.95
    updateproportion=0.05
    scanproportion=0
    insertproportion=0
    requestdistribution=zipfian

[workloadc]
categories = %(categories_common)s, Only Reads
description = The application has 100%% of read operations. Example: user profile cache, where profiles are constructed elsewhere (e.g., Hadoop)
workload =
    recordcount=%(default_ops_count)s
    operationcount=%(default_ops_count)s
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=1
    updateproportion=0
    scanproportion=0
    insertproportion=0
    requestdistribution=zipfian

[workloadd]
categories = %(categories_common)s, Read/Insert ratio 95/5
description = The application has read/insert operations ratio of 95/5. Example: user status updates; people want to read the latest
workload =
    recordcount=%(default_ops_count)s
    operationcount=%(default_ops_count)s
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0.95
    updateproportion=0
    scanproportion=0
    insertproportion=0.05
    requestdistribution=latest

[workloade]
categories = %(categories_common)s, Scan/Insert ratio 95/5
description = The application has scan/insert operations ratio of 95/5. Example: threaded conversations, where each scan is for the posts in a given thread (assumed to be clustered by thread id)
workload =
    recordcount=%(default_ops_count)s
    operationcount=%(default_ops_count)s
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0
    updateproportion=0
    scanproportion=0.95
    insertproportion=0.05
    requestdistribution=zipfian
    maxscanlength=100
    scanlengthdistribution=uniform

[workloadf]
categories = %(categories_common)s, Read/read-modify-write ratio 50/50
description = The application has a Read/read-modify-write operations ratio of 50/50. Example: user database, where user records are read and modified by the user or to record user activity
workload =
    recordcount=%(default_ops_count)s
    operationcount=%(default_ops_count)s
    workload=com.yahoo.ycsb.workloads.CoreWorkload
    readallfields=true
    readproportion=0.5
    updateproportion=0
    scanproportion=0
    insertproportion=0
    readmodifywriteproportion=0.5
    requestdistribution=zipfian

#[workloada_long]
#categories = %(categories_common)s, Read/Update ratio 50/50
#description = The application has read/update operations ratio of 50/50. Example: session store recording recent actions
#workload =
#    recordcount=%(long_ops_count)s
#    operationcount=%(long_ops_count)s
#    workload=com.yahoo.ycsb.workloads.CoreWorkload
#    readallfields=true
#    readproportion=0.5
#    updateproportion=0.5
#    scanproportion=0
#    insertproportion=0
#    requestdistribution=zipfian

