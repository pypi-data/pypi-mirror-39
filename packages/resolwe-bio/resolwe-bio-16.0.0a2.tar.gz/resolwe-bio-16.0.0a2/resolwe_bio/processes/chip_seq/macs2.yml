# ===================
# ChIP-Seq - MACS 2.0
# ===================
---

- slug: macs2-callpeak
  name: MACS 2.0
  requirements:
    expression-engine: jinja
    executor:
      docker:
        image: resolwebio/chipseq:3.1.0
  data_name: "{{ case|sample_name|default('?') }}"
  version: 3.1.0
  type: data:chipseq:callpeak:macs2
  entity:
    type: sample
    input: case
  category: ChIP-Seq:Call Peaks
  persistence: CACHED
  description: >
    Model-based Analysis of ChIP-Seq (MACS 2.0), is used to identify transcript
    factor binding sites. MACS 2.0 captures the influence of genome complexity
    to evaluate the significance of enriched ChIP regions, and MACS improves
    the spatial resolution of binding sites through combining the information
    of both sequencing tag position and orientation. It has also an option to
    link nearby peaks together in order to call broad peaks. See
    [here](https://github.com/taoliu/MACS/) for more information.
  input:
    - name: case
      label: Case (treatment)
      type: data:alignment:bam
    - name: control
      label: Control
      type: data:alignment:bam
      required: false
    - name: case_prepeak
      label: Case prepeak QC
      type: data:prepeakqc
      required: false
      description: >
        If provided MACS2 will use the input's fragment length estimation and filtered tagAlign
        file as case/treatment.
    - name: control_prepeak
      label: Control prepeak QC
      type: data:prepeakqc
      required: false
      description: >
        If provided MACS2 will use the input's filtered tagAlign file as control.
    - name: promoter
      label: Promoter regions BED file
      type: data:bed
      required: false
      description: >
        BED file containing promoter regions (TSS+-1000bp for example). Needed to get the number
        of peaks and reads mapped to promoter regions.
    - name: settings
      label: Settings
      group:
        - name: duplicates
          label: Number of duplicates
          type: basic:string
          hidden: "case_prepeak"
          required: false
          choices:
            - label: "1"
              value: "1"
            - label: "auto"
              value: "auto"
            - label: "all"
              value: "all"
          description: >
            It controls the MACS behavior towards duplicate tags at the exact same location -- the
            same coordination and the same strand. The 'auto' option makes MACS calculate the
            maximum tags at the exact same location based on binomal distribution using 1e-5 as
            pvalue cutoff and the 'all' option keeps all the tags. If an integer is given, at most
            this number of tags will be kept at the same location. The default is to keep one tag
            at the same location.
        - name: duplicates_prepeak
          label: Number of duplicates
          type: basic:string
          hidden: "!case_prepeak"
          default: "all"
          choices:
            - label: "1"
              value: "1"
            - label: "auto"
              value: "auto"
            - label: "all"
              value: "all"
          description: >
            It controls the MACS behavior towards duplicate tags at the exact same location -- the
            same coordination and the same strand. The 'auto' option makes MACS calculate the
            maximum tags at the exact same location based on binomal distribution using 1e-5 as
            pvalue cutoff and the 'all' option keeps all the tags. If an integer is given, at most
            this number of tags will be kept at the same location.
        - name: qvalue
          label: Q-value cutoff
          type: basic:decimal
          required: false
          disabled: "settings.pvalue"
          disabled: "settings.pvalue_prepeak && case_prepeak"
          description: >
            The qvalue (minimum FDR) cutoff to call significant regions. Default is 0.05. Q-values
            are calculated from p-values using Benjamini-Hochberg procedure.
        - name: pvalue
          label: P-value cutoff
          type: basic:decimal
          required: false
          disabled: "settings.qvalue"
          hidden: "case_prepeak"
          description: >
            The pvalue cutoff. If -p is specified, MACS2 will use pvalue instead of qvalue.
        - name: pvalue_prepeak
          label: P-value cutoff
          type: basic:decimal
          disabled: "settings.qvalue"
          hidden: "!case_prepeak"
          required: false
          default: 0.00001
          description: >
            The pvalue cutoff. If -p is specified, MACS2 will use pvalue instead of qvalue.
        - name: cap_num
          label: Cap number of peaks by taking top N peaks
          type: basic:integer
          default: 500000
          disabled: "settings.broad"
          description: >
            To keep all peaks set value to 0.
        - name: mfold_lower
          label: MFOLD range (lower limit)
          type: basic:integer
          required: false
          description: >
            This parameter is used to select the regions within MFOLD range of high-confidence
            enrichment ratio against background to build model. The regions must be lower than
            upper limit, and higher than the lower limit of fold enrichment. DEFAULT:10,30 means
            using all regions not too low (>10) and not too high (<30) to build paired-peaks
            model. If MACS can not find more than 100 regions to build model, it will use the
            --extsize parameter to continue the peak detection ONLY if --fix-bimodal is set.
        - name: mfold_upper
          label: MFOLD range (upper limit)
          type: basic:integer
          required: false
          description: >
            This parameter is used to select the regions within MFOLD range of high-confidence
            enrichment ratio against background to build model. The regions must be lower than
            upper limit, and higher than the lower limit of fold enrichment. DEFAULT:10,30 means
            using all regions not too low (>10) and not too high (<30) to build paired-peaks
            model. If MACS can not find more than 100 regions to build model, it will use the
            --extsize parameter to continue the peak detection ONLY if --fix-bimodal is set.
        - name: slocal
          label: Small local region
          type: basic:integer
          required: false
          description: >
            Slocal and llocal parameters control which two levels of regions will be checked
            around the peak regions to calculate the maximum lambda as local lambda. By default,
            MACS considers 1000bp for small local region (--slocal), and 10000bps for large local
            region (--llocal) which captures the bias from a long range effect like an open
            chromatin domain. You can tweak these according to your project. Remember that if the
            region is set too small, a sharp spike in the input data may kill the significant
            peak.
        - name: llocal
          label: Large local region
          type: basic:integer
          required: false
          description: >
            Slocal and llocal parameters control which two levels of regions will be checked
            around the peak regions to calculate the maximum lambda as local lambda. By default,
            MACS considers 1000bp for small local region (--slocal), and 10000bps for large local
            region (--llocal) which captures the bias from a long range effect like an open
            chromatin domain. You can tweak these according to your project. Remember that if the
            region is set too small, a sharp spike in the input data may kill the significant
            peak.
        - name: extsize
          label: extsize
          type: basic:integer
          required: false
          description: >
            While '--nomodel' is set, MACS uses this parameter to extend reads in 5'->3' direction
            to fix-sized fragments. For example, if the size of binding region for your
            transcription factor is 200 bp, and you want to bypass the model building by MACS,
            this parameter can be set as 200. This option is only valid when --nomodel is set or
            when MACS fails to build model and --fix-bimodal is on.
        - name: shift
          label: Shift
          type: basic:integer
          required: false
          description: >
            Note, this is NOT the legacy --shiftsize option which is replaced by --extsize! You
            can set an arbitrary shift in bp here. Please Use discretion while setting it other
            than default value (0). When --nomodel is set, MACS will use this value to move
            cutting ends (5') then apply --extsize from 5' to 3' direction to extend them to
            fragments. When this value is negative, ends will be moved toward 3'->5' direction,
            otherwise 5'->3' direction. Recommended to keep it as default 0 for ChIP-Seq datasets,
            or -1 * half of EXTSIZE together with --extsize option for detecting enriched cutting
            loci such as certain DNAseI-Seq datasets. Note, you can't set values other than 0 if
            format is BAMPE for paired-end data. Default is 0.
        - name: band_width
          label: Band width
          type: basic:integer
          required: false
          description: >
            The band width which is used to scan the genome ONLY for model building. You can set
            this parameter as the sonication fragment size expected from wet experiment. The
            previous side effect on the peak detection process has been removed. So this parameter
            only affects the model building.
        - name: nolambda
          label: Use backgroud lambda as local lambda
          type: basic:boolean
          default: false
          required: false
          description: >
            With this flag on, MACS will use the background lambda as local lambda. This means
            MACS will not consider the local bias at peak candidate regions.
        - name: fix_bimodal
          label: Turn on the auto paired-peak model process
          type: basic:boolean
          default: false
          required: false
          description: >
            Whether turn on the auto paired-peak model process. If it's set, when MACS failed
            to build paired model, it will use the nomodel settings, the '--extsize' parameter
            to extend each tags. If set, MACS will be terminated if paired-peak model is failed.
        - name: nomodel
          label: Bypass building the shifting model
          type: basic:boolean
          default: false
          required: false
          hidden: "case_prepeak"
          description: >
            While on, MACS will bypass building the shifting model.
        - name: nomodel_prepeak
          label: Bypass building the shifting model
          type: basic:boolean
          default: true
          required: false
          hidden: "!case_prepeak"
          description: >
            While on, MACS will bypass building the shifting model.
        - name: down_sample
          label: Down-sample
          type: basic:boolean
          default: false
          required: false
          description: >
            When set, random sampling method will scale down the bigger sample. By default, MACS
            uses linear scaling. This option will make the results unstable and irreproducible
            since each time, random reads would be selected, especially the numbers (pileup,
            pvalue, qvalue) would change. Consider to use 'randsample' script before MACS2 runs
            instead.
        - name: bedgraph
          label: Save fragment pileup and control lambda
          type: basic:boolean
          default: true
          required: false
          description: >
            If this flag is on, MACS will store the fragment pileup, control lambda, -log10pvalue
            and -log10qvalue scores in bedGraph files. The bedGraph files will be stored in
            current directory named NAME+'_treat_pileup.bdg' for treatment data,
            NAME+'_control_lambda.bdg' for local lambda values from control,
            NAME+'_treat_pvalue.bdg' for Poisson pvalue scores (in -log10(pvalue) form), and
            NAME+'_treat_qvalue.bdg' for q-value scores from Benjamini-Hochberg-Yekutieli
            procedure.
        - name: spmr
          label: Save signal per million reads for fragment pileup profiles
          type: basic:boolean
          default: true
          required: false
          disabled: "settings.bedgraph === false"
        - name: call_summits
          label: Call summits
          type: basic:boolean
          default: false
          required: false
          description: >
            MACS will now reanalyze the shape of signal profile (p or q-score depending on cutoff
            setting) to deconvolve subpeaks within each peak called from general procedure. It's
            highly recommended to detect adjacent binding events. While used, the output subpeaks
            of a big peak region will have the same peak boundaries, and different scores and peak
            summit positions.
        - name: broad
          label: Composite broad regions
          type: basic:boolean
          default: false
          required: false
          disabled: "settings.call_summits === true"
          description: >
            When this flag is on, MACS will try to composite broad regions in BED12 (a
            gene-model-like format) by putting nearby highly enriched regions into a broad region
            with loose cutoff. The broad region is controlled by another cutoff through
            --broad-cutoff. The maximum length of broad region length is 4 times of d from MACS.
        - name: broad_cutoff
          label: Broad cutoff
          type: basic:decimal
          required: false
          disabled: "settings.call_summits === true"
          disabled: "settings.broad !== true"
          description: >
            Cutoff for broad region. This option is not available unless --broad is set. If -p is
            set, this is a pvalue cutoff, otherwise, it's a qvalue cutoff. DEFAULT = 0.1
  output:
    - name: called_peaks
      label: Called peaks
      type: basic:file
    - name: narrow_peaks
      label: Narrow peaks
      type: basic:file
      required: false
    - name: chip_qc
      label: QC report
      type: basic:file
      required: false
    - name: narrow_peaks_bigbed_igv_ucsc
      label: Narrow peaks (BigBed)
      type: basic:file
      required: false
    - name: summits
      label: Peak summits
      type: basic:file
      required: false
    - name: summits_tbi_jbrowse
      label: Peak summits tbi index for JBrowse
      type: basic:file
      required: false
    - name: summits_bigbed_igv_ucsc
      label: Summits (bigBed)
      type: basic:file
      required: false
    - name: broad_peaks
      label: Broad peaks
      type: basic:file
      required: false
    - name: gappedPeak
      label: Broad peaks (bed12/gappedPeak)
      type: basic:file
      required: false
    - name: treat_pileup
      label: Treatment pileup (bedGraph)
      type: basic:file
      required: false
    - name: treat_pileup_bigwig
      label: Treatment pileup (bigWig)
      type: basic:file
      required: false
    - name: control_lambda
      label: Control lambda (bedGraph)
      type: basic:file
      required: false
    - name: control_lambda_bigwig
      label: Control lambda (bigwig)
      type: basic:file
      required: false
    - name: model
      label: Model
      type: basic:file
      required: false
    - name: species
      label: Species
      type: basic:string
    - name: build
      label: Build
      type: basic:string
  run:
    runtime: polyglot
    language: bash
    program: |
      NAME=`basename {{ case.bam.file }} .bam`

      {% if settings.broad and settings.call_summits %}
        re-error "--broad can't be combined with --call-summits!"
      {% endif %}

      {% if case_prepeak and control and not control_prepeak %}
        re-error "Case tagAlign file cannot be combined with a control BAM file."
      {% endif %}

      {% if control and case.build != control.build %}
        re-error \
          {{ ('All BAM files must share the same genome build information. ' ~
             'BAM %s has %s while %s has %s build information.')
             |format(case|name, case.build, control|name, control.build) }}
      {% elif control and case.species != control.species %}
        re-error \
          {{ ('All BAM files must share the same species information. ' ~
             'BAM %s has %s while %s has %s species information.')
             |format(case|name, case.species, control|name, control.species) }}
      {% elif case_prepeak and case.build != case_prepeak.build %}
        re-error \
          {{ ('All BAM files must share the same genome build information. ' ~
             'BAM %s has %s while %s has %s build information.')
             |format(case|name, case.build, case_prepeak|name, case_prepeak.build) }}
      {% elif case_prepeak and case.species != case_prepeak.species %}
        re-error \
          {{ ('All BAM files must share the same species information. ' ~
             'BAM %s has %s while %s has %s species information.')
             |format(case|name, case.species, case_prepeak|name, case_prepeak.species) }}
      {% elif control_prepeak and case.build != control_prepeak.build %}
        re-error \
          {{ ('All BAM files must share the same genome build information. ' ~
             'BAM %s has %s while %s has %s build information.')
             |format(case|name, case.build, control_prepeak|name, control_prepeak.build) }}
      {% elif control_prepeak and case.species != control_prepeak.species %}
        re-error \
          {{ ('All BAM files must share the same species information. ' ~
             'BAM %s has %s while %s has %s species information.')
             |format(case|name, case.species, control_prepeak|name, control_prepeak.species) }}
      {% elif promoter and promoter.species != case.species %}
        re-error
          {{ ('All input files must share the same species information. ' ~
             'Case BAM %s has %s while promoter BED %s has %s species information.')
             |format(case|name, case.species, promoter|name, promoter.species) }}
      {% elif promoter and promoter.build != case.build %}
        re-error
          {{ ('All input files must share the same genome build information. ' ~
             'Case BAM %s has %s while promoter BED %s has %s build information.')
             |format(case|name, case.build, promoter|name, promoter.build) }}
      {% endif %}

      {% set qc_header = [
        "FRiP",
        "NUMBER_OF_PEAKS",
        "NUMBER_OF_READS_IN_PROMOTERS",
        "FRACTION_OF_READS_IN_PROMOTERS",
        "NUMBER_OF_PEAKS_IN_PROMOTERS",
        "FRACTION_OF_PEAKS_IN_PROMOTERS",
        ] | join('\t')
      %}

      {% set species_to_gsize = {
        'Homo sapiens': '2.7e9',
        'Mus musculus': '1.87e9',
        'Dictyostelium discoideum': '3.4e7',
        'Drosophila melanogaster': '1.2e8',
        'Caenorhabditis elegans': '9e7',
        'Rattus norvegicus': '2e9',
        }
      %}

      {% set gsize = species_to_gsize[case.species] %}
      {% if not gsize %}
        re-error "Species {{ case.species }} is not supported by the MACS 2.0 process. Supported species are: {{ species_to_gsize.keys() | join(', ') }}"
      {% endif %}

      re-progress 0.1

      BROAD_CUTOFF='{% if settings.broad_cutoff %}--broad-cutoff {{settings.broad_cutoff}}{% endif %}'

      macs2 callpeak \
        -t {{ case_prepeak.tagalign.file or case.bam.file }} \
        {% if control or control_prepeak %}-c {{ control_prepeak.tagalign.file or control.bam.file }}{% endif %} \
        -f {{ "BED" if case_prepeak else "BAM" }} \
        -n "${NAME}" \
        --gsize {{ gsize }} \
        {% if settings.duplicates or case_prepeak %}--keep-dup {{ settings.duplicates or settings.duplicates_prepeak }}{% endif %} \
        {% if settings.qvalue %}-q {{ settings.qvalue }}{% endif %} \
        {% if settings.pvalue or settings.pvalue_prepeak and not setting.qvalue %}-p {{ settings.pvalue or settings.pvalue_prepeak }}{% endif %} \
        {% if settings.mfold_lower %}-m {{ settings.mfold_lower }} {{ settings.mfold_upper }}{% endif %} \
        {% if settings.nolambda %}--nolambda{% endif %} \
        {% if settings.slocal %}--slocal {{ settings.slocal }}{% endif %} \
        {% if settings.llocal %}--llocal {{ settings.llocal }}{% endif %} \
        {% if settings.fix_bimodal %}--fix-bimodal{% endif %} \
        {% if settings.nomodel or (settings.nomodel_prepeak and case_prepeak) %}--nomodel{% endif %} \
        {% if settings.extsize or case_prepeak %}--extsize {{ settings.extsize or case_prepeak.fraglen }}{% endif %} \
        {% if settings.shift %}--shift {{ settings.shift }}{% endif %} \
        {% if settings.band_width %}--bw {{ settings.band_width }}{% endif %} \
        {% if settings.broad %}--broad ${BROAD_CUTOFF}{% endif %} \
        {% if settings.down_sample %}--down-sample{% endif %} \
        {% if settings.bedgraph %}-B{% endif %} \
        {% if settings.call_summits %}--call-summits{% endif %} \
        {% if settings.spmr and settings.bedgraph %}--SPMR{% endif %} \
        --outdir . 2>err.txt

      re-checkrc "MACS2 processing failed"
      re-progress 0.7

      cat err.txt
      WARNING=$(grep "WARNING" err.txt | sed -e :a -e '$!N; s/\n/ /; ta')
      if [ $(echo -n "${WARNING}" | wc -c) -ne 0 ]; then
        re-warning "`grep "WARNING" err.txt | sed -e :a -e '$!N; s/\n/ /; ta'`"
      fi

      if [ -f "${NAME}_model.r" ]
      then
        Rscript "${NAME}_model.r"
        re-checkrc
        re-save-file model "${NAME}_model.pdf"
      fi
      re-progress 0.8

      re-save-file called_peaks "${NAME}_peaks.xls"

      # Get chormosome sizes file for bed to BigBed transformation
      samtools idxstats {{ case.bam.file }} | cut -f -2 | head -n -1 > chrom.sizes

      {% if settings.broad and not settings.call_summits %}
        re-save-file broad_peaks "${NAME}_peaks.broadPeak"
        re-save-file gappedPeak "${NAME}_peaks.gappedPeak"
      {% else %}
        # Maximize 5th column of narrowPeak and summits files to 1000.
        bed_file_corrections_genome_browsers.py -f "${NAME}_peaks.narrowPeak"
        re-checkrc "Peaks Bed file corrections for Genome Browsers failed."
        bed_file_corrections_genome_browsers.py -f "${NAME}_summits.bed"
        re-checkrc "Summits Bed file corrections for Genome Browsers failed."

        # Create BigBed for IGV and UCSC genome browsers from narrowPeak file
        bedToBigBed as=/opt/kent/bedToBigBed/narrowPeak.as -type=bed6+4 "corrected_${NAME}_peaks.narrowPeak" chrom.sizes "${NAME}_peaks_narrowPeak.bb"
        re-checkrc "Creating BigBed from narrowPeak file failed."

        # Create BigBed for IGV and UCSC genome browsers from summits file
        bedToBigBed "corrected_${NAME}_summits.bed" chrom.sizes "${NAME}_summits.bb"
        re-checkrc "Creating bigBed from summits.bed file failed."

        # Create tabix index for summits.bed file for JBrowse
        bgzip -c "${NAME}_summits.bed" > "${NAME}_summits.bed.gz"
        tabix -p bed "${NAME}_summits.bed.gz"
        re-checkrc "Summits.bed tabix processing for JBrowse failed."

        re-save-file narrow_peaks_bigbed_igv_ucsc "${NAME}_peaks_narrowPeak.bb"
        re-save-file summits "${NAME}_summits.bed.gz"
        re-save-file summits_tbi_jbrowse "${NAME}_summits.bed.gz.tbi"
        re-save-file summits_bigbed_igv_ucsc "${NAME}_summits.bb"
      {% endif %}

      {% if settings.bedgraph %}
        bedtools slop -i "${NAME}_treat_pileup.bdg" -g chrom.sizes -b 0 | bedClip stdin chrom.sizes "${NAME}_treat_pileup_clip.bdg"
        re-checkrc "Preventing the extension of intervals beyond chromosome boundaries for treat_pileup.bgd bedGraph failed."
        # case sensitive sorting
        LC_COLLATE=C sort -k 1,1 -k 2,2n "${NAME}_treat_pileup_clip.bdg" > "${NAME}_treat_pileup_sorted.bdg"
        # Create BigWig file for IGV and UCSC genome browsers
        bedGraphToBigWig "${NAME}_treat_pileup_sorted.bdg" chrom.sizes "${NAME}_treat_pileup.bw"
        re-checkrc "Creating bigWig from treat_pileup.bgd bedGraph failed."
        re-save-file treat_pileup "${NAME}_treat_pileup.bdg"
        re-save-file treat_pileup_bigwig "${NAME}_treat_pileup.bw"

        bedtools slop -i "${NAME}_control_lambda.bdg" -g chrom.sizes -b 0 | bedClip stdin chrom.sizes "${NAME}_control_lambda_clip.bdg"
        re-checkrc "Preventing the extension of intervals beyond chromosome boundaries for control_lambda.bgd bedGraph failed."
        # case sensitive sorting
        LC_COLLATE=C sort -k 1,1 -k 2,2n "${NAME}_control_lambda_clip.bdg" > "${NAME}_control_lambda_sorted.bdg"
        # Create BigWig file for IGV and UCSC genome browsers
        bedGraphToBigWig "${NAME}_control_lambda_sorted.bdg" chrom.sizes "${NAME}_control_lambda.bw"
        re-checkrc "Creating bigWig from control_lambda.bgd bedGraph failed."
        re-save-file control_lambda "${NAME}_control_lambda.bdg"
        re-save-file control_lambda_bigwig "${NAME}_control_lambda.bw"
      {% endif %}

      # Get post-peakcall QC metrics
      {% if not settings.broad %}
        # Sort narrowPeak by p values
        LC_COLLATE=C sort -k 8gr,8gr "${NAME}_peaks.narrowPeak" | \
        awk 'BEGIN{OFS="\t"}{$4="Peak_"NR; if ($2<0) $2=0; if ($3<0) $3=0; print $0}' > "${NAME}_peaks_tmp.narrowPeak"

        # Cap number of peaks
        head -n {{ settings.cap_num or -0 }} "${NAME}_peaks_tmp.narrowPeak" > "${NAME}_peaks.narrowPeak"

        {% if case_prepeak %}
          cp {{ case_prepeak.tagalign.file }} "${NAME}.tagAlign"
        {% else %}
          # Transform case bam file to tagAlign for either single-end or paired-end reads
          if [ $(samtools view -c -f 1 {{ case.bam.file }}) -eq 0 ]; then
            bedtools bamtobed -i {{ case.bam.file }} | \
            awk 'BEGIN{OFS="\t"}{$4="N";$5="1000";print $0}' > "${NAME}.tagAlign"
            re-checkrc "Conversion to tagAlign failed"
          else
            samtools sort -n {{ case.bam.file }} "${NAME}_sorted"
            samtools fixmate -r "${NAME}_sorted.bam" "${NAME}.bam"
            samtools view -b -f 2 "${NAME}.bam" | \
            bedtools bamtobed -bedpe -mate1 -i - | \
            awk 'BEGIN{OFS="\t"}{printf "%s\t%s\t%s\tN\t1000\t%s\n%s\t%s\t%s\tN\t1000\t%s\n",$1,$2,$3,$9,$4,$5,$6,$10}' > "${NAME}.tagAlign"
            re-checkrc "Conversion to tagAlign failed"
          fi
        {% endif %}

        # Get fragment length
        {% if settings.extsize %}
          FRAGLEN={{ settings.extsize }}
        {% elif case_prepeak %}
          FRAGLEN={{ case_prepeak.fraglen }}
        {% else %}
          FRAGLEN=$(macs2 predictd -i {{ case.bam.file }} 2>&1 >/dev/null | grep -e 'predicted fragment length' | rev | cut -d ' ' -f 3 | rev)
          re-checkrc "Error while estimating fragment size"
        {% endif %}

        # Shift reads on both strands for half of the fragment length in opposite directions
        bedtools slop -i "${NAME}.tagAlign" -g chrom.sizes -s -l $((-${FRAGLEN} / 2)) -r $((${FRAGLEN} / 2)) | \
        awk '{if ($2>=0 && $3>=0 && $2<=$3) print $0}' > "${NAME}_shifted.tagAlign"

        echo -e {{ qc_header }} > "${NAME}_postpeak_qc_report.txt"

        # Calculate post-peakcall QC metrics
        N_READS_PEAKS=$(bedtools intersect -a "${NAME}_shifted.tagAlign" -b "${NAME}_peaks.narrowPeak" -wa -u | wc -l)
        N_READS=$(cat "${NAME}_shifted.tagAlign" | wc -l)
        N_PEAKS=$(cat "${NAME}_peaks.narrowPeak" | wc -l)
        FRIP=$(awk 'BEGIN{printf "%.3f\n", ('${N_READS_PEAKS}' / '${N_READS}')}')
        {% if promoter %}
          N_READS_PROM=$(bedtools intersect -a "${NAME}_shifted.tagAlign" -b {{ promoter.bed.file }} -wa -u | wc -l)
          N_PEAKS_PROM=$(bedtools intersect -a "${NAME}_peaks.narrowPeak" -b {{ promoter.bed.file }} -wa -u | wc -l)
          FRAC_READS=$(awk 'BEGIN{printf "%.3f\n", ('${N_READS_PROM}' / '${N_READS}')}')
          FRAC_PEAKS=$(awk 'BEGIN{printf "%.3f\n", ('${N_PEAKS_PROM}' / '${N_PEAKS}')}')
          echo -e "${FRIP}\t${N_PEAKS}\t${N_READS_PROM}\t${FRAC_READS}\t${N_PEAKS_PROM}\t${FRAC_PEAKS}" >> "${NAME}_postpeak_qc_report.txt"
        {% else %}
          echo -e "${FRIP}\t${N_PEAKS}\tN/A\tN/A\tN/A\nN/A" >> "${NAME}_postpeak_qc_report.txt"
        {% endif %}

        gzip "${NAME}_peaks.narrowPeak"

        re-save-file narrow_peaks "${NAME}_peaks.narrowPeak.gz"
        re-save-file chip_qc "${NAME}_postpeak_qc_report.txt"

      {% endif %}

      re-save build {{ case.build }}
      re-save species {{ case.species }}
