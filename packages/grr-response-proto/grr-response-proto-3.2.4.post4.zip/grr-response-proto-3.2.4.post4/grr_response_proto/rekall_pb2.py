# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grr_response_proto/rekall.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from grr_response_proto import semantic_pb2 as grr__response__proto_dot_semantic__pb2
from grr_response_proto import jobs_pb2 as grr__response__proto_dot_jobs__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='grr_response_proto/rekall.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\x1fgrr_response_proto/rekall.proto\x1a!grr_response_proto/semantic.proto\x1a\x1dgrr_response_proto/jobs.proto\"\x82\x01\n\x11MemoryInformation\x12\x19\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32\t.PathSpec\x12\x1e\n\x04runs\x18\x02 \x03(\x0b\x32\x10.BufferReference\x12\x0b\n\x03\x63r3\x18\x03 \x01(\x04:%\xda\xfc\xe3\xc4\x01\x1f\n\x1d\x44\x65scribe the memory geometry.\"v\n\rPluginRequest\x12/\n\x06plugin\x18\x02 \x01(\tB\x1f\xe2\xfc\xe3\xc4\x01\x19\x12\x17The plugin name to run.\x12\x34\n\x04\x61rgs\x18\x03 \x01(\x0b\x32\x05.DictB\x1f\xe2\xfc\xe3\xc4\x01\x19\x12\x17The args to the plugin.\"\xd1\x03\n\rRekallRequest\x12%\n\x08iterator\x18\x01 \x01(\x0b\x32\t.IteratorB\x08\xe2\xfc\xe3\xc4\x01\x02\x18\x02\x12\xa6\x01\n\x07plugins\x18\x02 \x03(\x0b\x32\x0e.PluginRequestB\x84\x01\xe2\xfc\xe3\xc4\x01~\x12|We can execute multiple plugins in the same session. This can take advantage of caching in the session to be more efficient.\x12\x39\n\x06\x64\x65vice\x18\x04 \x01(\x0b\x32\t.PathSpecB\x1e\xe2\xfc\xe3\xc4\x01\x18\x12\x16The raw device to use.\x12T\n\x07session\x18\x06 \x01(\x0b\x32\x05.DictB<\xe2\xfc\xe3\xc4\x01\x36\x12\x34These parameters are used to initialize the session.\x12_\n\x08profiles\x18\t \x03(\x0b\x32\x0e.RekallProfileB=\xe2\xfc\xe3\xc4\x01\x37\x12\x33Profiles sent by the server to store on the client.\x18\x02\"\xdb\x03\n\x0eRekallResponse\x12\x15\n\rjson_messages\x18\x01 \x01(\t\x12\x39\n\x18\x63ompressed_json_messages\x18\x07 \x01(\x0c\x42\x17\xe2\xfc\xe3\xc4\x01\x11\n\x0fZippedJSONBytes\x12\x1d\n\x15json_context_messages\x18\x05 \x01(\t\x12\x0e\n\x06plugin\x18\x02 \x01(\t\x12K\n\nclient_urn\x18\x03 \x01(\tB7\xe2\xfc\xe3\xc4\x01\x31\n\tClientURN\x12$The client this response comes from.\x12[\n\x0fmissing_profile\x18\x04 \x01(\tBB\xe2\xfc\xe3\xc4\x01<\x12:Missing profiles that should be retrieved from the server.\x12W\n\x12repository_version\x18\x06 \x01(\t:\x04v1.0B5\xe2\xfc\xe3\xc4\x01/\x12-The version of the repository we want to use.\x12\x45\n\x10\x64ownloaded_files\x18\x08 \x03(\tB+\xe2\xfc\xe3\xc4\x01%\n\x06RDFURN\x12\x1b\x41 list of downloaded files.\"\xc1\x02\n\rRekallProfile\x12/\n\x04name\x18\x01 \x01(\tB!\xe2\xfc\xe3\xc4\x01\x1b\x12\x19The name of this profile.\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x42(\xe2\xfc\xe3\xc4\x01\"\x12 A Rekall profile as a data blob.\x12\x35\n\x07version\x18\x03 \x01(\tB$\xe2\xfc\xe3\xc4\x01\x1e\x12\x1cThe version of this profile.\x12m\n\x0b\x63ompression\x18\x04 \x01(\x0e\x32\x1a.RekallProfile.Compression:\x04GZIPB6\xe2\xfc\xe3\xc4\x01\x30\x12.Type of compression carried in the data field.\"!\n\x0b\x43ompression\x12\x08\n\x04NONE\x10\x00\x12\x08\n\x04GZIP\x10\x01\"\x93\x03\n\x17\x41nalyzeClientMemoryArgs\x12U\n\x07request\x18\x02 \x01(\x0b\x32\x0e.RekallRequestB4\xe2\xfc\xe3\xc4\x01.\x12,A request for the client\'s Rekall subsystem.\x12N\n\rdebug_logging\x18\x04 \x01(\x08:\x05\x66\x61lseB0\xe2\xfc\xe3\xc4\x01*\x12\x18Use DEBUG level logging.\"\x0e\x44\x45\x42UG logging.\x12\x82\x01\n\x16max_file_size_download\x18\x05 \x01(\x04:\x0b\x33\x35\x34\x33\x33\x34\x38\x30\x31\x39\x32\x42U\xe2\xfc\xe3\xc4\x01O\x12MObtain at most max_file_size_download bytes of each file outputted by Rekall.\x12L\n\x11\x63omponent_version\x18\x06 \x01(\t:\x05\x31.6.0B*\xe2\xfc\xe3\xc4\x01$\x12 The version of component to use.\x18\x01')
  ,
  dependencies=[grr__response__proto_dot_semantic__pb2.DESCRIPTOR,grr__response__proto_dot_jobs__pb2.DESCRIPTOR,])



_REKALLPROFILE_COMPRESSION = _descriptor.EnumDescriptor(
  name='Compression',
  full_name='RekallProfile.Compression',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GZIP', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1589,
  serialized_end=1622,
)
_sym_db.RegisterEnumDescriptor(_REKALLPROFILE_COMPRESSION)


_MEMORYINFORMATION = _descriptor.Descriptor(
  name='MemoryInformation',
  full_name='MemoryInformation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='MemoryInformation.device', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='runs', full_name='MemoryInformation.runs', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cr3', full_name='MemoryInformation.cr3', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\332\374\343\304\001\037\n\035Describe the memory geometry.')),
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=232,
)


_PLUGINREQUEST = _descriptor.Descriptor(
  name='PluginRequest',
  full_name='PluginRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='plugin', full_name='PluginRequest.plugin', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\031\022\027The plugin name to run.'))),
    _descriptor.FieldDescriptor(
      name='args', full_name='PluginRequest.args', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\031\022\027The args to the plugin.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=234,
  serialized_end=352,
)


_REKALLREQUEST = _descriptor.Descriptor(
  name='RekallRequest',
  full_name='RekallRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='iterator', full_name='RekallRequest.iterator', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\002\030\002'))),
    _descriptor.FieldDescriptor(
      name='plugins', full_name='RekallRequest.plugins', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001~\022|We can execute multiple plugins in the same session. This can take advantage of caching in the session to be more efficient.'))),
    _descriptor.FieldDescriptor(
      name='device', full_name='RekallRequest.device', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\030\022\026The raw device to use.'))),
    _descriptor.FieldDescriptor(
      name='session', full_name='RekallRequest.session', index=3,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0016\0224These parameters are used to initialize the session.'))),
    _descriptor.FieldDescriptor(
      name='profiles', full_name='RekallRequest.profiles', index=4,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0017\0223Profiles sent by the server to store on the client.\030\002'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=355,
  serialized_end=820,
)


_REKALLRESPONSE = _descriptor.Descriptor(
  name='RekallResponse',
  full_name='RekallResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='json_messages', full_name='RekallResponse.json_messages', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='compressed_json_messages', full_name='RekallResponse.compressed_json_messages', index=1,
      number=7, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\021\n\017ZippedJSONBytes'))),
    _descriptor.FieldDescriptor(
      name='json_context_messages', full_name='RekallResponse.json_context_messages', index=2,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='plugin', full_name='RekallResponse.plugin', index=3,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_urn', full_name='RekallResponse.client_urn', index=4,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0011\n\tClientURN\022$The client this response comes from.'))),
    _descriptor.FieldDescriptor(
      name='missing_profile', full_name='RekallResponse.missing_profile', index=5,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001<\022:Missing profiles that should be retrieved from the server.'))),
    _descriptor.FieldDescriptor(
      name='repository_version', full_name='RekallResponse.repository_version', index=6,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("v1.0").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001/\022-The version of the repository we want to use.'))),
    _descriptor.FieldDescriptor(
      name='downloaded_files', full_name='RekallResponse.downloaded_files', index=7,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001%\n\006RDFURN\022\033A list of downloaded files.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=823,
  serialized_end=1298,
)


_REKALLPROFILE = _descriptor.Descriptor(
  name='RekallProfile',
  full_name='RekallProfile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='RekallProfile.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\033\022\031The name of this profile.'))),
    _descriptor.FieldDescriptor(
      name='data', full_name='RekallProfile.data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\"\022 A Rekall profile as a data blob.'))),
    _descriptor.FieldDescriptor(
      name='version', full_name='RekallProfile.version', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\036\022\034The version of this profile.'))),
    _descriptor.FieldDescriptor(
      name='compression', full_name='RekallProfile.compression', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=True, default_value=1,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0010\022.Type of compression carried in the data field.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _REKALLPROFILE_COMPRESSION,
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1301,
  serialized_end=1622,
)


_ANALYZECLIENTMEMORYARGS = _descriptor.Descriptor(
  name='AnalyzeClientMemoryArgs',
  full_name='AnalyzeClientMemoryArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request', full_name='AnalyzeClientMemoryArgs.request', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001.\022,A request for the client\'s Rekall subsystem.'))),
    _descriptor.FieldDescriptor(
      name='debug_logging', full_name='AnalyzeClientMemoryArgs.debug_logging', index=1,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=True, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001*\022\030Use DEBUG level logging.\"\016DEBUG logging.'))),
    _descriptor.FieldDescriptor(
      name='max_file_size_download', full_name='AnalyzeClientMemoryArgs.max_file_size_download', index=2,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=True, default_value=35433480192,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001O\022MObtain at most max_file_size_download bytes of each file outputted by Rekall.'))),
    _descriptor.FieldDescriptor(
      name='component_version', full_name='AnalyzeClientMemoryArgs.component_version', index=3,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=True, default_value=_b("1.6.0").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001$\022 The version of component to use.\030\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1625,
  serialized_end=2028,
)

_MEMORYINFORMATION.fields_by_name['device'].message_type = grr__response__proto_dot_jobs__pb2._PATHSPEC
_MEMORYINFORMATION.fields_by_name['runs'].message_type = grr__response__proto_dot_jobs__pb2._BUFFERREFERENCE
_PLUGINREQUEST.fields_by_name['args'].message_type = grr__response__proto_dot_jobs__pb2._DICT
_REKALLREQUEST.fields_by_name['iterator'].message_type = grr__response__proto_dot_jobs__pb2._ITERATOR
_REKALLREQUEST.fields_by_name['plugins'].message_type = _PLUGINREQUEST
_REKALLREQUEST.fields_by_name['device'].message_type = grr__response__proto_dot_jobs__pb2._PATHSPEC
_REKALLREQUEST.fields_by_name['session'].message_type = grr__response__proto_dot_jobs__pb2._DICT
_REKALLREQUEST.fields_by_name['profiles'].message_type = _REKALLPROFILE
_REKALLPROFILE.fields_by_name['compression'].enum_type = _REKALLPROFILE_COMPRESSION
_REKALLPROFILE_COMPRESSION.containing_type = _REKALLPROFILE
_ANALYZECLIENTMEMORYARGS.fields_by_name['request'].message_type = _REKALLREQUEST
DESCRIPTOR.message_types_by_name['MemoryInformation'] = _MEMORYINFORMATION
DESCRIPTOR.message_types_by_name['PluginRequest'] = _PLUGINREQUEST
DESCRIPTOR.message_types_by_name['RekallRequest'] = _REKALLREQUEST
DESCRIPTOR.message_types_by_name['RekallResponse'] = _REKALLRESPONSE
DESCRIPTOR.message_types_by_name['RekallProfile'] = _REKALLPROFILE
DESCRIPTOR.message_types_by_name['AnalyzeClientMemoryArgs'] = _ANALYZECLIENTMEMORYARGS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

MemoryInformation = _reflection.GeneratedProtocolMessageType('MemoryInformation', (_message.Message,), dict(
  DESCRIPTOR = _MEMORYINFORMATION,
  __module__ = 'grr_response_proto.rekall_pb2'
  # @@protoc_insertion_point(class_scope:MemoryInformation)
  ))
_sym_db.RegisterMessage(MemoryInformation)

PluginRequest = _reflection.GeneratedProtocolMessageType('PluginRequest', (_message.Message,), dict(
  DESCRIPTOR = _PLUGINREQUEST,
  __module__ = 'grr_response_proto.rekall_pb2'
  # @@protoc_insertion_point(class_scope:PluginRequest)
  ))
_sym_db.RegisterMessage(PluginRequest)

RekallRequest = _reflection.GeneratedProtocolMessageType('RekallRequest', (_message.Message,), dict(
  DESCRIPTOR = _REKALLREQUEST,
  __module__ = 'grr_response_proto.rekall_pb2'
  # @@protoc_insertion_point(class_scope:RekallRequest)
  ))
_sym_db.RegisterMessage(RekallRequest)

RekallResponse = _reflection.GeneratedProtocolMessageType('RekallResponse', (_message.Message,), dict(
  DESCRIPTOR = _REKALLRESPONSE,
  __module__ = 'grr_response_proto.rekall_pb2'
  # @@protoc_insertion_point(class_scope:RekallResponse)
  ))
_sym_db.RegisterMessage(RekallResponse)

RekallProfile = _reflection.GeneratedProtocolMessageType('RekallProfile', (_message.Message,), dict(
  DESCRIPTOR = _REKALLPROFILE,
  __module__ = 'grr_response_proto.rekall_pb2'
  # @@protoc_insertion_point(class_scope:RekallProfile)
  ))
_sym_db.RegisterMessage(RekallProfile)

AnalyzeClientMemoryArgs = _reflection.GeneratedProtocolMessageType('AnalyzeClientMemoryArgs', (_message.Message,), dict(
  DESCRIPTOR = _ANALYZECLIENTMEMORYARGS,
  __module__ = 'grr_response_proto.rekall_pb2'
  # @@protoc_insertion_point(class_scope:AnalyzeClientMemoryArgs)
  ))
_sym_db.RegisterMessage(AnalyzeClientMemoryArgs)


_MEMORYINFORMATION.has_options = True
_MEMORYINFORMATION._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\332\374\343\304\001\037\n\035Describe the memory geometry.'))
_PLUGINREQUEST.fields_by_name['plugin'].has_options = True
_PLUGINREQUEST.fields_by_name['plugin']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\031\022\027The plugin name to run.'))
_PLUGINREQUEST.fields_by_name['args'].has_options = True
_PLUGINREQUEST.fields_by_name['args']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\031\022\027The args to the plugin.'))
_REKALLREQUEST.fields_by_name['iterator'].has_options = True
_REKALLREQUEST.fields_by_name['iterator']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\002\030\002'))
_REKALLREQUEST.fields_by_name['plugins'].has_options = True
_REKALLREQUEST.fields_by_name['plugins']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001~\022|We can execute multiple plugins in the same session. This can take advantage of caching in the session to be more efficient.'))
_REKALLREQUEST.fields_by_name['device'].has_options = True
_REKALLREQUEST.fields_by_name['device']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\030\022\026The raw device to use.'))
_REKALLREQUEST.fields_by_name['session'].has_options = True
_REKALLREQUEST.fields_by_name['session']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0016\0224These parameters are used to initialize the session.'))
_REKALLREQUEST.fields_by_name['profiles'].has_options = True
_REKALLREQUEST.fields_by_name['profiles']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0017\0223Profiles sent by the server to store on the client.\030\002'))
_REKALLRESPONSE.fields_by_name['compressed_json_messages'].has_options = True
_REKALLRESPONSE.fields_by_name['compressed_json_messages']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\021\n\017ZippedJSONBytes'))
_REKALLRESPONSE.fields_by_name['client_urn'].has_options = True
_REKALLRESPONSE.fields_by_name['client_urn']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0011\n\tClientURN\022$The client this response comes from.'))
_REKALLRESPONSE.fields_by_name['missing_profile'].has_options = True
_REKALLRESPONSE.fields_by_name['missing_profile']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001<\022:Missing profiles that should be retrieved from the server.'))
_REKALLRESPONSE.fields_by_name['repository_version'].has_options = True
_REKALLRESPONSE.fields_by_name['repository_version']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001/\022-The version of the repository we want to use.'))
_REKALLRESPONSE.fields_by_name['downloaded_files'].has_options = True
_REKALLRESPONSE.fields_by_name['downloaded_files']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001%\n\006RDFURN\022\033A list of downloaded files.'))
_REKALLPROFILE.fields_by_name['name'].has_options = True
_REKALLPROFILE.fields_by_name['name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\033\022\031The name of this profile.'))
_REKALLPROFILE.fields_by_name['data'].has_options = True
_REKALLPROFILE.fields_by_name['data']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\"\022 A Rekall profile as a data blob.'))
_REKALLPROFILE.fields_by_name['version'].has_options = True
_REKALLPROFILE.fields_by_name['version']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\036\022\034The version of this profile.'))
_REKALLPROFILE.fields_by_name['compression'].has_options = True
_REKALLPROFILE.fields_by_name['compression']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0010\022.Type of compression carried in the data field.'))
_ANALYZECLIENTMEMORYARGS.fields_by_name['request'].has_options = True
_ANALYZECLIENTMEMORYARGS.fields_by_name['request']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001.\022,A request for the client\'s Rekall subsystem.'))
_ANALYZECLIENTMEMORYARGS.fields_by_name['debug_logging'].has_options = True
_ANALYZECLIENTMEMORYARGS.fields_by_name['debug_logging']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001*\022\030Use DEBUG level logging.\"\016DEBUG logging.'))
_ANALYZECLIENTMEMORYARGS.fields_by_name['max_file_size_download'].has_options = True
_ANALYZECLIENTMEMORYARGS.fields_by_name['max_file_size_download']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001O\022MObtain at most max_file_size_download bytes of each file outputted by Rekall.'))
_ANALYZECLIENTMEMORYARGS.fields_by_name['component_version'].has_options = True
_ANALYZECLIENTMEMORYARGS.fields_by_name['component_version']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001$\022 The version of component to use.\030\001'))
# @@protoc_insertion_point(module_scope)
