# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grr_response_proto/api/cron.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from grr_response_proto import api_utils_pb2 as grr__response__proto_dot_api__utils__pb2
from grr_response_proto import flows_pb2 as grr__response__proto_dot_flows__pb2
from grr_response_proto import semantic_pb2 as grr__response__proto_dot_semantic__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='grr_response_proto/api/cron.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n!grr_response_proto/api/cron.proto\x1a\x19google/protobuf/any.proto\x1a\"grr_response_proto/api_utils.proto\x1a\x1egrr_response_proto/flows.proto\x1a!grr_response_proto/semantic.proto\"\xa4\x07\n\nApiCronJob\x12\x37\n\x0b\x63ron_job_id\x18\x01 \x01(\tB\"\xe2\xfc\xe3\xc4\x01\x1c\n\x0c\x41piCronJobId\x12\x0c\x43ron job ID.\x12\x1c\n\x04\x61rgs\x18\x02 \x01(\x0b\x32\x0e.CronJobAction\x12\'\n\ncreated_at\x18\x03 \x01(\x04\x42\x13\xe2\xfc\xe3\xc4\x01\r\n\x0bRDFDatetime\x12\x16\n\x0e\x63urrent_run_id\x18\x04 \x01(\t\x12\x0f\n\x07\x65nabled\x18\x05 \x01(\x08\x12\x35\n\x0flast_run_status\x18\x06 \x01(\x0e\x32\x1c.CronJobRun.CronJobRunStatus\x12M\n\rlast_run_time\x18\x07 \x01(\x04\x42\x36\xe2\xfc\xe3\xc4\x01\x30\n\x0bRDFDatetime\x12!Last time when this cron job ran.\x12\x39\n\x05state\x18\x08 \x01(\x0b\x32\x0e.ApiDataObjectB\x1a\xe2\xfc\xe3\xc4\x01\x14\x12\x12\x43urrent job state.\x12@\n\tfrequency\x18\t \x01(\x04\x42-\xe2\xfc\xe3\xc4\x01\'\n\x08\x44uration\x12\x1bInterval between cron runs.\x12\x9a\x02\n\x08lifetime\x18\n \x01(\x04\x42\x87\x02\xe2\xfc\xe3\xc4\x01\x80\x02\n\x08\x44uration\x12\xf3\x01How long each run of the cron should be allowed to run. Runs that exceed lifetime will be killed. This is complimentary but different to periodicity e.g. it allows us to run jobs weekly that should be killed if they take more than a few hours.\x12Y\n\x0e\x61llow_overruns\x18\x0b \x01(\x08\x42\x41\xe2\xfc\xe3\xc4\x01;\x12\x37If true, don\'t kill the previous run if new one starts.\x18\x01\x12\x1c\n\x14\x66orced_run_requested\x18\x0c \x01(\x08\x12?\n\nis_failing\x18\r \x01(\x08\x42+\xe2\xfc\xe3\xc4\x01%\x12#Is this cron job currently failing?\x12\x13\n\x0b\x64\x65scription\x18\x0e \x01(\t\"\x9a\x02\n\rApiCronJobRun\x12\'\n\x06run_id\x18\x01 \x01(\tB\x17\xe2\xfc\xe3\xc4\x01\x11\n\x0f\x41piCronJobRunId\x12\x37\n\x0b\x63ron_job_id\x18\x02 \x01(\tB\"\xe2\xfc\xe3\xc4\x01\x1c\n\x0c\x41piCronJobId\x12\x0c\x43ron job ID.\x12\'\n\nstarted_at\x18\x03 \x01(\x04\x42\x13\xe2\xfc\xe3\xc4\x01\r\n\x0bRDFDatetime\x12(\n\x0b\x66inished_at\x18\x04 \x01(\x04\x42\x13\xe2\xfc\xe3\xc4\x01\r\n\x0bRDFDatetime\x12,\n\x06status\x18\x05 \x01(\x0e\x32\x1c.CronJobRun.CronJobRunStatus\x12\x13\n\x0blog_message\x18\x06 \x01(\t\x12\x11\n\tbacktrace\x18\x07 \x01(\t\"\xd6\x05\n\x14\x41piCreateCronJobArgs\x12*\n\tflow_name\x18\x01 \x01(\tB\x17\xe2\xfc\xe3\xc4\x01\x11\x12\x0f\x43ron flow name.\x12W\n\tflow_args\x18\x02 \x01(\x0b\x32\x14.google.protobuf.AnyB.\xe2\xfc\xe3\xc4\x01(\x12\x14\x43ron flow arguments.*\x10GetFlowArgsClass\x12I\n\x10hunt_runner_args\x18\x03 \x01(\x0b\x32\x0f.HuntRunnerArgsB\x1e\xe2\xfc\xe3\xc4\x01\x18\x12\x16Hunt runner arguments.\x12\x32\n\x0b\x64\x65scription\x18\x04 \x01(\tB\x1d\xe2\xfc\xe3\xc4\x01\x17\x12\x15\x43ron job description.\x12\x42\n\x0bperiodicity\x18\x05 \x01(\x04\x42-\xe2\xfc\xe3\xc4\x01\'\n\x08\x44uration\x12\x1bInterval between cron runs.\x12\x9a\x02\n\x08lifetime\x18\x06 \x01(\x04\x42\x87\x02\xe2\xfc\xe3\xc4\x01\x80\x02\n\x08\x44uration\x12\xf3\x01How long each run of the cron should be allowed to run. Runs that exceed lifetime will be killed. This is complimentary but different to periodicity e.g. it allows us to run jobs weekly that should be killed if they take more than a few hours.\x12Y\n\x0e\x61llow_overruns\x18\x07 \x01(\x08\x42\x41\xe2\xfc\xe3\xc4\x01;\x12\x37If true, don\'t kill the previous run if new one starts.\x18\x01\"y\n\x13\x41piListCronJobsArgs\x12(\n\x06offset\x18\x01 \x01(\x03\x42\x18\xe2\xfc\xe3\xc4\x01\x12\x12\x10Starting offset.\x12\x38\n\x05\x63ount\x18\x02 \x01(\x03\x42)\xe2\xfc\xe3\xc4\x01#\x12!Max number of cron jobs to fetch.\"{\n\x15\x41piListCronJobsResult\x12.\n\x05items\x18\x01 \x03(\x0b\x32\x0b.ApiCronJobB\x12\xe2\xfc\xe3\xc4\x01\x0c\x12\nCron jobs.\x12\x32\n\x0btotal_count\x18\x02 \x01(\x03\x42\x1d\xe2\xfc\xe3\xc4\x01\x17\x12\x15Total count of items.\"L\n\x11\x41piGetCronJobArgs\x12\x37\n\x0b\x63ron_job_id\x18\x01 \x01(\tB\"\xe2\xfc\xe3\xc4\x01\x1c\n\x0c\x41piCronJobId\x12\x0c\x43ron job id.\"Q\n\x16\x41piForceRunCronJobArgs\x12\x37\n\x0b\x63ron_job_id\x18\x01 \x01(\tB\"\xe2\xfc\xe3\xc4\x01\x1c\n\x0c\x41piCronJobId\x12\x0c\x43ron job id.\"\x83\x01\n\x14\x41piModifyCronJobArgs\x12\x37\n\x0b\x63ron_job_id\x18\x01 \x01(\tB\"\xe2\xfc\xe3\xc4\x01\x1c\n\x0c\x41piCronJobId\x12\x0c\x43ron job id.\x12\x32\n\x07\x65nabled\x18\x02 \x01(\x08\x42!\xe2\xfc\xe3\xc4\x01\x1b\x12\x19New cron job state value.\"Z\n\x14\x41piDeleteCronJobArgs\x12\x42\n\x0b\x63ron_job_id\x18\x01 \x01(\tB-\xe2\xfc\xe3\xc4\x01\'\n\x0c\x41piCronJobId\x12\x17The id of the cron job.\"\xb1\x01\n\x16\x41piListCronJobRunsArgs\x12\x37\n\x0b\x63ron_job_id\x18\x01 \x01(\tB\"\xe2\xfc\xe3\xc4\x01\x1c\n\x0c\x41piCronJobId\x12\x0c\x43ron job id.\x12(\n\x06offset\x18\x02 \x01(\x03\x42\x18\xe2\xfc\xe3\xc4\x01\x12\x12\x10Starting offset.\x12\x34\n\x05\x63ount\x18\x03 \x01(\x03\x42%\xe2\xfc\xe3\xc4\x01\x1f\x12\x1dMax number of flows to fetch.\"9\n\x18\x41piListCronJobRunsResult\x12\x1d\n\x05items\x18\x01 \x03(\x0b\x32\x0e.ApiCronJobRun\"\x82\x01\n\x14\x41piGetCronJobRunArgs\x12\x37\n\x0b\x63ron_job_id\x18\x01 \x01(\tB\"\xe2\xfc\xe3\xc4\x01\x1c\n\x0c\x41piCronJobId\x12\x0c\x43ron job id.\x12\x31\n\x06run_id\x18\x02 \x01(\tB!\xe2\xfc\xe3\xc4\x01\x1b\n\x0f\x41piCronJobRunId\x12\x08\x46low id.')
  ,
  dependencies=[google_dot_protobuf_dot_any__pb2.DESCRIPTOR,grr__response__proto_dot_api__utils__pb2.DESCRIPTOR,grr__response__proto_dot_flows__pb2.DESCRIPTOR,grr__response__proto_dot_semantic__pb2.DESCRIPTOR,])




_APICRONJOB = _descriptor.Descriptor(
  name='ApiCronJob',
  full_name='ApiCronJob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cron_job_id', full_name='ApiCronJob.cron_job_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job ID.'))),
    _descriptor.FieldDescriptor(
      name='args', full_name='ApiCronJob.args', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='created_at', full_name='ApiCronJob.created_at', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\r\n\013RDFDatetime'))),
    _descriptor.FieldDescriptor(
      name='current_run_id', full_name='ApiCronJob.current_run_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='enabled', full_name='ApiCronJob.enabled', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_run_status', full_name='ApiCronJob.last_run_status', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_run_time', full_name='ApiCronJob.last_run_time', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0010\n\013RDFDatetime\022!Last time when this cron job ran.'))),
    _descriptor.FieldDescriptor(
      name='state', full_name='ApiCronJob.state', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\024\022\022Current job state.'))),
    _descriptor.FieldDescriptor(
      name='frequency', full_name='ApiCronJob.frequency', index=8,
      number=9, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\'\n\010Duration\022\033Interval between cron runs.'))),
    _descriptor.FieldDescriptor(
      name='lifetime', full_name='ApiCronJob.lifetime', index=9,
      number=10, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\200\002\n\010Duration\022\363\001How long each run of the cron should be allowed to run. Runs that exceed lifetime will be killed. This is complimentary but different to periodicity e.g. it allows us to run jobs weekly that should be killed if they take more than a few hours.'))),
    _descriptor.FieldDescriptor(
      name='allow_overruns', full_name='ApiCronJob.allow_overruns', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001;\0227If true, don\'t kill the previous run if new one starts.\030\001'))),
    _descriptor.FieldDescriptor(
      name='forced_run_requested', full_name='ApiCronJob.forced_run_requested', index=11,
      number=12, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_failing', full_name='ApiCronJob.is_failing', index=12,
      number=13, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001%\022#Is this cron job currently failing?'))),
    _descriptor.FieldDescriptor(
      name='description', full_name='ApiCronJob.description', index=13,
      number=14, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=168,
  serialized_end=1100,
)


_APICRONJOBRUN = _descriptor.Descriptor(
  name='ApiCronJobRun',
  full_name='ApiCronJobRun',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='run_id', full_name='ApiCronJobRun.run_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\021\n\017ApiCronJobRunId'))),
    _descriptor.FieldDescriptor(
      name='cron_job_id', full_name='ApiCronJobRun.cron_job_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job ID.'))),
    _descriptor.FieldDescriptor(
      name='started_at', full_name='ApiCronJobRun.started_at', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\r\n\013RDFDatetime'))),
    _descriptor.FieldDescriptor(
      name='finished_at', full_name='ApiCronJobRun.finished_at', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\r\n\013RDFDatetime'))),
    _descriptor.FieldDescriptor(
      name='status', full_name='ApiCronJobRun.status', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_message', full_name='ApiCronJobRun.log_message', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='backtrace', full_name='ApiCronJobRun.backtrace', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1103,
  serialized_end=1385,
)


_APICREATECRONJOBARGS = _descriptor.Descriptor(
  name='ApiCreateCronJobArgs',
  full_name='ApiCreateCronJobArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='flow_name', full_name='ApiCreateCronJobArgs.flow_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\021\022\017Cron flow name.'))),
    _descriptor.FieldDescriptor(
      name='flow_args', full_name='ApiCreateCronJobArgs.flow_args', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001(\022\024Cron flow arguments.*\020GetFlowArgsClass'))),
    _descriptor.FieldDescriptor(
      name='hunt_runner_args', full_name='ApiCreateCronJobArgs.hunt_runner_args', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\030\022\026Hunt runner arguments.'))),
    _descriptor.FieldDescriptor(
      name='description', full_name='ApiCreateCronJobArgs.description', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\027\022\025Cron job description.'))),
    _descriptor.FieldDescriptor(
      name='periodicity', full_name='ApiCreateCronJobArgs.periodicity', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\'\n\010Duration\022\033Interval between cron runs.'))),
    _descriptor.FieldDescriptor(
      name='lifetime', full_name='ApiCreateCronJobArgs.lifetime', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\200\002\n\010Duration\022\363\001How long each run of the cron should be allowed to run. Runs that exceed lifetime will be killed. This is complimentary but different to periodicity e.g. it allows us to run jobs weekly that should be killed if they take more than a few hours.'))),
    _descriptor.FieldDescriptor(
      name='allow_overruns', full_name='ApiCreateCronJobArgs.allow_overruns', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001;\0227If true, don\'t kill the previous run if new one starts.\030\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1388,
  serialized_end=2114,
)


_APILISTCRONJOBSARGS = _descriptor.Descriptor(
  name='ApiListCronJobsArgs',
  full_name='ApiListCronJobsArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offset', full_name='ApiListCronJobsArgs.offset', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\022\022\020Starting offset.'))),
    _descriptor.FieldDescriptor(
      name='count', full_name='ApiListCronJobsArgs.count', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001#\022!Max number of cron jobs to fetch.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2116,
  serialized_end=2237,
)


_APILISTCRONJOBSRESULT = _descriptor.Descriptor(
  name='ApiListCronJobsResult',
  full_name='ApiListCronJobsResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='ApiListCronJobsResult.items', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\014\022\nCron jobs.'))),
    _descriptor.FieldDescriptor(
      name='total_count', full_name='ApiListCronJobsResult.total_count', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\027\022\025Total count of items.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2239,
  serialized_end=2362,
)


_APIGETCRONJOBARGS = _descriptor.Descriptor(
  name='ApiGetCronJobArgs',
  full_name='ApiGetCronJobArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cron_job_id', full_name='ApiGetCronJobArgs.cron_job_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2364,
  serialized_end=2440,
)


_APIFORCERUNCRONJOBARGS = _descriptor.Descriptor(
  name='ApiForceRunCronJobArgs',
  full_name='ApiForceRunCronJobArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cron_job_id', full_name='ApiForceRunCronJobArgs.cron_job_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2442,
  serialized_end=2523,
)


_APIMODIFYCRONJOBARGS = _descriptor.Descriptor(
  name='ApiModifyCronJobArgs',
  full_name='ApiModifyCronJobArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cron_job_id', full_name='ApiModifyCronJobArgs.cron_job_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))),
    _descriptor.FieldDescriptor(
      name='enabled', full_name='ApiModifyCronJobArgs.enabled', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\033\022\031New cron job state value.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2526,
  serialized_end=2657,
)


_APIDELETECRONJOBARGS = _descriptor.Descriptor(
  name='ApiDeleteCronJobArgs',
  full_name='ApiDeleteCronJobArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cron_job_id', full_name='ApiDeleteCronJobArgs.cron_job_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\'\n\014ApiCronJobId\022\027The id of the cron job.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2659,
  serialized_end=2749,
)


_APILISTCRONJOBRUNSARGS = _descriptor.Descriptor(
  name='ApiListCronJobRunsArgs',
  full_name='ApiListCronJobRunsArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cron_job_id', full_name='ApiListCronJobRunsArgs.cron_job_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))),
    _descriptor.FieldDescriptor(
      name='offset', full_name='ApiListCronJobRunsArgs.offset', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\022\022\020Starting offset.'))),
    _descriptor.FieldDescriptor(
      name='count', full_name='ApiListCronJobRunsArgs.count', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\037\022\035Max number of flows to fetch.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2752,
  serialized_end=2929,
)


_APILISTCRONJOBRUNSRESULT = _descriptor.Descriptor(
  name='ApiListCronJobRunsResult',
  full_name='ApiListCronJobRunsResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='ApiListCronJobRunsResult.items', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2931,
  serialized_end=2988,
)


_APIGETCRONJOBRUNARGS = _descriptor.Descriptor(
  name='ApiGetCronJobRunArgs',
  full_name='ApiGetCronJobRunArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cron_job_id', full_name='ApiGetCronJobRunArgs.cron_job_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))),
    _descriptor.FieldDescriptor(
      name='run_id', full_name='ApiGetCronJobRunArgs.run_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\033\n\017ApiCronJobRunId\022\010Flow id.'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2991,
  serialized_end=3121,
)

_APICRONJOB.fields_by_name['args'].message_type = grr__response__proto_dot_flows__pb2._CRONJOBACTION
_APICRONJOB.fields_by_name['last_run_status'].enum_type = grr__response__proto_dot_flows__pb2._CRONJOBRUN_CRONJOBRUNSTATUS
_APICRONJOB.fields_by_name['state'].message_type = grr__response__proto_dot_api__utils__pb2._APIDATAOBJECT
_APICRONJOBRUN.fields_by_name['status'].enum_type = grr__response__proto_dot_flows__pb2._CRONJOBRUN_CRONJOBRUNSTATUS
_APICREATECRONJOBARGS.fields_by_name['flow_args'].message_type = google_dot_protobuf_dot_any__pb2._ANY
_APICREATECRONJOBARGS.fields_by_name['hunt_runner_args'].message_type = grr__response__proto_dot_flows__pb2._HUNTRUNNERARGS
_APILISTCRONJOBSRESULT.fields_by_name['items'].message_type = _APICRONJOB
_APILISTCRONJOBRUNSRESULT.fields_by_name['items'].message_type = _APICRONJOBRUN
DESCRIPTOR.message_types_by_name['ApiCronJob'] = _APICRONJOB
DESCRIPTOR.message_types_by_name['ApiCronJobRun'] = _APICRONJOBRUN
DESCRIPTOR.message_types_by_name['ApiCreateCronJobArgs'] = _APICREATECRONJOBARGS
DESCRIPTOR.message_types_by_name['ApiListCronJobsArgs'] = _APILISTCRONJOBSARGS
DESCRIPTOR.message_types_by_name['ApiListCronJobsResult'] = _APILISTCRONJOBSRESULT
DESCRIPTOR.message_types_by_name['ApiGetCronJobArgs'] = _APIGETCRONJOBARGS
DESCRIPTOR.message_types_by_name['ApiForceRunCronJobArgs'] = _APIFORCERUNCRONJOBARGS
DESCRIPTOR.message_types_by_name['ApiModifyCronJobArgs'] = _APIMODIFYCRONJOBARGS
DESCRIPTOR.message_types_by_name['ApiDeleteCronJobArgs'] = _APIDELETECRONJOBARGS
DESCRIPTOR.message_types_by_name['ApiListCronJobRunsArgs'] = _APILISTCRONJOBRUNSARGS
DESCRIPTOR.message_types_by_name['ApiListCronJobRunsResult'] = _APILISTCRONJOBRUNSRESULT
DESCRIPTOR.message_types_by_name['ApiGetCronJobRunArgs'] = _APIGETCRONJOBRUNARGS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ApiCronJob = _reflection.GeneratedProtocolMessageType('ApiCronJob', (_message.Message,), dict(
  DESCRIPTOR = _APICRONJOB,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiCronJob)
  ))
_sym_db.RegisterMessage(ApiCronJob)

ApiCronJobRun = _reflection.GeneratedProtocolMessageType('ApiCronJobRun', (_message.Message,), dict(
  DESCRIPTOR = _APICRONJOBRUN,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiCronJobRun)
  ))
_sym_db.RegisterMessage(ApiCronJobRun)

ApiCreateCronJobArgs = _reflection.GeneratedProtocolMessageType('ApiCreateCronJobArgs', (_message.Message,), dict(
  DESCRIPTOR = _APICREATECRONJOBARGS,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiCreateCronJobArgs)
  ))
_sym_db.RegisterMessage(ApiCreateCronJobArgs)

ApiListCronJobsArgs = _reflection.GeneratedProtocolMessageType('ApiListCronJobsArgs', (_message.Message,), dict(
  DESCRIPTOR = _APILISTCRONJOBSARGS,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiListCronJobsArgs)
  ))
_sym_db.RegisterMessage(ApiListCronJobsArgs)

ApiListCronJobsResult = _reflection.GeneratedProtocolMessageType('ApiListCronJobsResult', (_message.Message,), dict(
  DESCRIPTOR = _APILISTCRONJOBSRESULT,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiListCronJobsResult)
  ))
_sym_db.RegisterMessage(ApiListCronJobsResult)

ApiGetCronJobArgs = _reflection.GeneratedProtocolMessageType('ApiGetCronJobArgs', (_message.Message,), dict(
  DESCRIPTOR = _APIGETCRONJOBARGS,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiGetCronJobArgs)
  ))
_sym_db.RegisterMessage(ApiGetCronJobArgs)

ApiForceRunCronJobArgs = _reflection.GeneratedProtocolMessageType('ApiForceRunCronJobArgs', (_message.Message,), dict(
  DESCRIPTOR = _APIFORCERUNCRONJOBARGS,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiForceRunCronJobArgs)
  ))
_sym_db.RegisterMessage(ApiForceRunCronJobArgs)

ApiModifyCronJobArgs = _reflection.GeneratedProtocolMessageType('ApiModifyCronJobArgs', (_message.Message,), dict(
  DESCRIPTOR = _APIMODIFYCRONJOBARGS,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiModifyCronJobArgs)
  ))
_sym_db.RegisterMessage(ApiModifyCronJobArgs)

ApiDeleteCronJobArgs = _reflection.GeneratedProtocolMessageType('ApiDeleteCronJobArgs', (_message.Message,), dict(
  DESCRIPTOR = _APIDELETECRONJOBARGS,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiDeleteCronJobArgs)
  ))
_sym_db.RegisterMessage(ApiDeleteCronJobArgs)

ApiListCronJobRunsArgs = _reflection.GeneratedProtocolMessageType('ApiListCronJobRunsArgs', (_message.Message,), dict(
  DESCRIPTOR = _APILISTCRONJOBRUNSARGS,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiListCronJobRunsArgs)
  ))
_sym_db.RegisterMessage(ApiListCronJobRunsArgs)

ApiListCronJobRunsResult = _reflection.GeneratedProtocolMessageType('ApiListCronJobRunsResult', (_message.Message,), dict(
  DESCRIPTOR = _APILISTCRONJOBRUNSRESULT,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiListCronJobRunsResult)
  ))
_sym_db.RegisterMessage(ApiListCronJobRunsResult)

ApiGetCronJobRunArgs = _reflection.GeneratedProtocolMessageType('ApiGetCronJobRunArgs', (_message.Message,), dict(
  DESCRIPTOR = _APIGETCRONJOBRUNARGS,
  __module__ = 'grr_response_proto.api.cron_pb2'
  # @@protoc_insertion_point(class_scope:ApiGetCronJobRunArgs)
  ))
_sym_db.RegisterMessage(ApiGetCronJobRunArgs)


_APICRONJOB.fields_by_name['cron_job_id'].has_options = True
_APICRONJOB.fields_by_name['cron_job_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job ID.'))
_APICRONJOB.fields_by_name['created_at'].has_options = True
_APICRONJOB.fields_by_name['created_at']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\r\n\013RDFDatetime'))
_APICRONJOB.fields_by_name['last_run_time'].has_options = True
_APICRONJOB.fields_by_name['last_run_time']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\0010\n\013RDFDatetime\022!Last time when this cron job ran.'))
_APICRONJOB.fields_by_name['state'].has_options = True
_APICRONJOB.fields_by_name['state']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\024\022\022Current job state.'))
_APICRONJOB.fields_by_name['frequency'].has_options = True
_APICRONJOB.fields_by_name['frequency']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\'\n\010Duration\022\033Interval between cron runs.'))
_APICRONJOB.fields_by_name['lifetime'].has_options = True
_APICRONJOB.fields_by_name['lifetime']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\200\002\n\010Duration\022\363\001How long each run of the cron should be allowed to run. Runs that exceed lifetime will be killed. This is complimentary but different to periodicity e.g. it allows us to run jobs weekly that should be killed if they take more than a few hours.'))
_APICRONJOB.fields_by_name['allow_overruns'].has_options = True
_APICRONJOB.fields_by_name['allow_overruns']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001;\0227If true, don\'t kill the previous run if new one starts.\030\001'))
_APICRONJOB.fields_by_name['is_failing'].has_options = True
_APICRONJOB.fields_by_name['is_failing']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001%\022#Is this cron job currently failing?'))
_APICRONJOBRUN.fields_by_name['run_id'].has_options = True
_APICRONJOBRUN.fields_by_name['run_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\021\n\017ApiCronJobRunId'))
_APICRONJOBRUN.fields_by_name['cron_job_id'].has_options = True
_APICRONJOBRUN.fields_by_name['cron_job_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job ID.'))
_APICRONJOBRUN.fields_by_name['started_at'].has_options = True
_APICRONJOBRUN.fields_by_name['started_at']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\r\n\013RDFDatetime'))
_APICRONJOBRUN.fields_by_name['finished_at'].has_options = True
_APICRONJOBRUN.fields_by_name['finished_at']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\r\n\013RDFDatetime'))
_APICREATECRONJOBARGS.fields_by_name['flow_name'].has_options = True
_APICREATECRONJOBARGS.fields_by_name['flow_name']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\021\022\017Cron flow name.'))
_APICREATECRONJOBARGS.fields_by_name['flow_args'].has_options = True
_APICREATECRONJOBARGS.fields_by_name['flow_args']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001(\022\024Cron flow arguments.*\020GetFlowArgsClass'))
_APICREATECRONJOBARGS.fields_by_name['hunt_runner_args'].has_options = True
_APICREATECRONJOBARGS.fields_by_name['hunt_runner_args']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\030\022\026Hunt runner arguments.'))
_APICREATECRONJOBARGS.fields_by_name['description'].has_options = True
_APICREATECRONJOBARGS.fields_by_name['description']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\027\022\025Cron job description.'))
_APICREATECRONJOBARGS.fields_by_name['periodicity'].has_options = True
_APICREATECRONJOBARGS.fields_by_name['periodicity']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\'\n\010Duration\022\033Interval between cron runs.'))
_APICREATECRONJOBARGS.fields_by_name['lifetime'].has_options = True
_APICREATECRONJOBARGS.fields_by_name['lifetime']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\200\002\n\010Duration\022\363\001How long each run of the cron should be allowed to run. Runs that exceed lifetime will be killed. This is complimentary but different to periodicity e.g. it allows us to run jobs weekly that should be killed if they take more than a few hours.'))
_APICREATECRONJOBARGS.fields_by_name['allow_overruns'].has_options = True
_APICREATECRONJOBARGS.fields_by_name['allow_overruns']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001;\0227If true, don\'t kill the previous run if new one starts.\030\001'))
_APILISTCRONJOBSARGS.fields_by_name['offset'].has_options = True
_APILISTCRONJOBSARGS.fields_by_name['offset']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\022\022\020Starting offset.'))
_APILISTCRONJOBSARGS.fields_by_name['count'].has_options = True
_APILISTCRONJOBSARGS.fields_by_name['count']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001#\022!Max number of cron jobs to fetch.'))
_APILISTCRONJOBSRESULT.fields_by_name['items'].has_options = True
_APILISTCRONJOBSRESULT.fields_by_name['items']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\014\022\nCron jobs.'))
_APILISTCRONJOBSRESULT.fields_by_name['total_count'].has_options = True
_APILISTCRONJOBSRESULT.fields_by_name['total_count']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\027\022\025Total count of items.'))
_APIGETCRONJOBARGS.fields_by_name['cron_job_id'].has_options = True
_APIGETCRONJOBARGS.fields_by_name['cron_job_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))
_APIFORCERUNCRONJOBARGS.fields_by_name['cron_job_id'].has_options = True
_APIFORCERUNCRONJOBARGS.fields_by_name['cron_job_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))
_APIMODIFYCRONJOBARGS.fields_by_name['cron_job_id'].has_options = True
_APIMODIFYCRONJOBARGS.fields_by_name['cron_job_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))
_APIMODIFYCRONJOBARGS.fields_by_name['enabled'].has_options = True
_APIMODIFYCRONJOBARGS.fields_by_name['enabled']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\033\022\031New cron job state value.'))
_APIDELETECRONJOBARGS.fields_by_name['cron_job_id'].has_options = True
_APIDELETECRONJOBARGS.fields_by_name['cron_job_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\'\n\014ApiCronJobId\022\027The id of the cron job.'))
_APILISTCRONJOBRUNSARGS.fields_by_name['cron_job_id'].has_options = True
_APILISTCRONJOBRUNSARGS.fields_by_name['cron_job_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))
_APILISTCRONJOBRUNSARGS.fields_by_name['offset'].has_options = True
_APILISTCRONJOBRUNSARGS.fields_by_name['offset']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\022\022\020Starting offset.'))
_APILISTCRONJOBRUNSARGS.fields_by_name['count'].has_options = True
_APILISTCRONJOBRUNSARGS.fields_by_name['count']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\037\022\035Max number of flows to fetch.'))
_APIGETCRONJOBRUNARGS.fields_by_name['cron_job_id'].has_options = True
_APIGETCRONJOBRUNARGS.fields_by_name['cron_job_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\034\n\014ApiCronJobId\022\014Cron job id.'))
_APIGETCRONJOBRUNARGS.fields_by_name['run_id'].has_options = True
_APIGETCRONJOBRUNARGS.fields_by_name['run_id']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\342\374\343\304\001\033\n\017ApiCronJobRunId\022\010Flow id.'))
# @@protoc_insertion_point(module_scope)
