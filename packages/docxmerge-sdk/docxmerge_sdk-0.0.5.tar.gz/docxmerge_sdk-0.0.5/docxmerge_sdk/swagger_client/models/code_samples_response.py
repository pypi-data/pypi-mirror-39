# coding: utf-8

"""
    DocxMerge

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: v1
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class CodeSamplesResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'nodejs': 'str',
        'dotnet': 'str',
        'python': 'str',
        'php': 'str',
        'curl': 'str',
        'ruby': 'str'
    }

    attribute_map = {
        'nodejs': 'nodejs',
        'dotnet': 'dotnet',
        'python': 'python',
        'php': 'php',
        'curl': 'curl',
        'ruby': 'ruby'
    }

    def __init__(self, nodejs=None, dotnet=None, python=None, php=None, curl=None, ruby=None):  # noqa: E501
        """CodeSamplesResponse - a model defined in OpenAPI"""  # noqa: E501

        self._nodejs = None
        self._dotnet = None
        self._python = None
        self._php = None
        self._curl = None
        self._ruby = None
        self.discriminator = None

        if nodejs is not None:
            self.nodejs = nodejs
        if dotnet is not None:
            self.dotnet = dotnet
        if python is not None:
            self.python = python
        if php is not None:
            self.php = php
        if curl is not None:
            self.curl = curl
        if ruby is not None:
            self.ruby = ruby

    @property
    def nodejs(self):
        """Gets the nodejs of this CodeSamplesResponse.  # noqa: E501


        :return: The nodejs of this CodeSamplesResponse.  # noqa: E501
        :rtype: str
        """
        return self._nodejs

    @nodejs.setter
    def nodejs(self, nodejs):
        """Sets the nodejs of this CodeSamplesResponse.


        :param nodejs: The nodejs of this CodeSamplesResponse.  # noqa: E501
        :type: str
        """

        self._nodejs = nodejs

    @property
    def dotnet(self):
        """Gets the dotnet of this CodeSamplesResponse.  # noqa: E501


        :return: The dotnet of this CodeSamplesResponse.  # noqa: E501
        :rtype: str
        """
        return self._dotnet

    @dotnet.setter
    def dotnet(self, dotnet):
        """Sets the dotnet of this CodeSamplesResponse.


        :param dotnet: The dotnet of this CodeSamplesResponse.  # noqa: E501
        :type: str
        """

        self._dotnet = dotnet

    @property
    def python(self):
        """Gets the python of this CodeSamplesResponse.  # noqa: E501


        :return: The python of this CodeSamplesResponse.  # noqa: E501
        :rtype: str
        """
        return self._python

    @python.setter
    def python(self, python):
        """Sets the python of this CodeSamplesResponse.


        :param python: The python of this CodeSamplesResponse.  # noqa: E501
        :type: str
        """

        self._python = python

    @property
    def php(self):
        """Gets the php of this CodeSamplesResponse.  # noqa: E501


        :return: The php of this CodeSamplesResponse.  # noqa: E501
        :rtype: str
        """
        return self._php

    @php.setter
    def php(self, php):
        """Sets the php of this CodeSamplesResponse.


        :param php: The php of this CodeSamplesResponse.  # noqa: E501
        :type: str
        """

        self._php = php

    @property
    def curl(self):
        """Gets the curl of this CodeSamplesResponse.  # noqa: E501


        :return: The curl of this CodeSamplesResponse.  # noqa: E501
        :rtype: str
        """
        return self._curl

    @curl.setter
    def curl(self, curl):
        """Sets the curl of this CodeSamplesResponse.


        :param curl: The curl of this CodeSamplesResponse.  # noqa: E501
        :type: str
        """

        self._curl = curl

    @property
    def ruby(self):
        """Gets the ruby of this CodeSamplesResponse.  # noqa: E501


        :return: The ruby of this CodeSamplesResponse.  # noqa: E501
        :rtype: str
        """
        return self._ruby

    @ruby.setter
    def ruby(self, ruby):
        """Sets the ruby of this CodeSamplesResponse.


        :param ruby: The ruby of this CodeSamplesResponse.  # noqa: E501
        :type: str
        """

        self._ruby = ruby

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CodeSamplesResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
