#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade HG on Fri Jun 22 21:45:40 2012

import wx

import vespa.common.wx_gravy.util
from wx.lib.agw.floatspin import FloatSpin, EVT_FLOATSPIN, FS_LEFT, FS_RIGHT, FS_CENTRE, FS_READONLY
from vespa.common.wx_gravy.widgets.floatspin_multiplier.floatspin_multiplier_base import FloatSpinMultiplier


# begin wxGlade: extracode
# end wxGlade



class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.sizer_6_staticbox = wx.StaticBox(self, -1, "Metabolite Inclusion Range")
        self.sizer_4_staticbox = wx.StaticBox(self, -1, "Spectral Resolution")
        self.FloatSpectralPoints = FloatSpinMultiplier(self, -1, digits=0, agwStyle=FS_CENTRE)
        self.label_12 = wx.StaticText(self, -1, "Spectral Sweep Width [Hz]:", style=wx.ALIGN_RIGHT)
        self.FloatSweepWidth = FloatSpin(self, -1, value=3.0, increment=1.0, agwStyle=FS_CENTRE)
        self.FloatFrequency = FloatSpin(self, -1, value=128.0, increment=1.0, agwStyle=FS_LEFT|FS_CENTRE)
        self.FloatPpmRangeStart = FloatSpin(self, -1, agwStyle=FS_LEFT)
        self.label_11_copy = wx.StaticText(self, -1, "End [ppm]:")
        self.FloatPpmRangeEnd = FloatSpin(self, -1, agwStyle=FS_LEFT)
        self.LabelOkCancelPlaceholder = wx.StaticText(self, -1, "   OK and Cancel Placeholder")

        self.__set_properties()
        self.__do_layout()

        self.Bind(EVT_FLOATSPIN, self.on_spectral_points, self.FloatSpectralPoints)
        self.Bind(EVT_FLOATSPIN, self.on_sweep_width, self.FloatSweepWidth)
        self.Bind(EVT_FLOATSPIN, self.on_frequency, self.FloatFrequency)
        self.Bind(EVT_FLOATSPIN, self.on_ppm_range_start, self.FloatPpmRangeStart)
        self.Bind(EVT_FLOATSPIN, self.on_ppm_range_end, self.FloatPpmRangeEnd)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyDialog.__set_properties
        self.SetTitle("dialog_1")
        self.FloatSpectralPoints.SetMinSize((100, -1))
        self.FloatSweepWidth.SetMinSize((100, -1))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyDialog.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.StaticBoxSizer(self.sizer_6_staticbox, wx.VERTICAL)
        sizer_37 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.VERTICAL)
        grid_sizer_2 = wx.FlexGridSizer(3, 2, 5, 5)
        label_13 = wx.StaticText(self, -1, "Spectral Data Points:", style=wx.ALIGN_RIGHT)
        grid_sizer_2.Add(label_13, 0, wx.ALL|wx.ALIGN_RIGHT, 4)
        grid_sizer_2.Add(self.FloatSpectralPoints, 0, 0, 0)
        grid_sizer_2.Add(self.label_12, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.FloatSweepWidth, 0, 0, 0)
        label_8 = wx.StaticText(self, -1, "Resonance Frequency [MHz]:", style=wx.ALIGN_RIGHT)
        grid_sizer_2.Add(label_8, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.FloatFrequency, 0, 0, 0)
        sizer_4.Add(grid_sizer_2, 0, wx.ALL|wx.EXPAND, 2)
        sizer_3.Add(sizer_4, 1, wx.TOP|wx.BOTTOM|wx.EXPAND, 6)
        label_10 = wx.StaticText(self, -1, "Start [ppm]:")
        sizer_37.Add(label_10, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_37.Add(self.FloatPpmRangeStart, 0, wx.LEFT, 4)
        sizer_37.Add(self.label_11_copy, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 8)
        sizer_37.Add(self.FloatPpmRangeEnd, 0, wx.LEFT|wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_6.Add(sizer_37, 0, wx.ALL|wx.EXPAND, 4)
        sizer_3.Add(sizer_6, 0, wx.TOP|wx.BOTTOM|wx.EXPAND, 6)
        sizer_5.Add(self.LabelOkCancelPlaceholder, 0, wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_3.Add(sizer_5, 0, wx.TOP|wx.ALIGN_CENTER_HORIZONTAL|wx.ALIGN_CENTER_VERTICAL, 10)
        sizer_2.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 0, wx.ALL|wx.EXPAND, 10)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def on_spectral_points(self, event): # wxGlade: MyDialog.<event_handler>
        print "Event handler `on_spectral_points' not implemented!"
        event.Skip()

    def on_sweep_width(self, event): # wxGlade: MyDialog.<event_handler>
        print "Event handler `on_sweep_width' not implemented!"
        event.Skip()

    def on_frequency(self, event): # wxGlade: MyDialog.<event_handler>
        print "Event handler `on_frequency' not implemented!"
        event.Skip()

    def on_ppm_range_start(self, event): # wxGlade: MyDialog.<event_handler>
        print "Event handler `on_ppm_range_start' not implemented!"
        event.Skip()

    def on_ppm_range_end(self, event): # wxGlade: MyDialog.<event_handler>
        print "Event handler `on_ppm_range_end' not implemented!"
        event.Skip()

# end of class MyDialog


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    dialog_1 = MyDialog(None, -1, "")
    app.SetTopWindow(dialog_1)
    dialog_1.Show()
    app.MainLoop()
