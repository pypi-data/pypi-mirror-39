#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 on Thu Feb 20 18:48:43 2014

import wx

# begin wxGlade: extracode
# end wxGlade


class MyDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE | wx.RESIZE_BORDER | wx.THICK_FRAME
        wx.Dialog.__init__(self, *args, **kwds)
        self.choiceOuputFormat = wx.Choice(self, -1, choices=["Siemens-IDEA", "Siemens-Vision", "ASCII - Magn/Phase", "Annotated ASCII - Magn/Phase", "Siemens-IDEA C Header"])
        self.ButtonBrowse = wx.Button(self, -1, "&Browse...")
        self.LabelFilename = wx.StaticText(self, -1, "filename goes here...")
        self.sizer_4_copy_1_staticbox = wx.StaticBox(self, -1, "Output Format and Location")
        self.PanelSiemensIdea = wx.Panel(self, -1)
        self.TextIdeaName = wx.TextCtrl(self.PanelSiemensIdea, -1, "")
        self.TextIdeaComment = wx.TextCtrl(self.PanelSiemensIdea, -1, "")
        self.sizer_2_staticbox = wx.StaticBox(self.PanelSiemensIdea, -1, "Siemens IDEA - Pulse Description")
        self.TextIdeaMinslice = wx.TextCtrl(self.PanelSiemensIdea, -1, "")
        self.TextIdeaMaxslice = wx.TextCtrl(self.PanelSiemensIdea, -1, "")
        self.label_4 = wx.StaticText(self.PanelSiemensIdea, -1, "Bandwidth [kHz]:")
        self.TextIdeaBandwidth = wx.TextCtrl(self.PanelSiemensIdea, -1, "")
        self.TextIdeaFlipAngle = wx.TextCtrl(self.PanelSiemensIdea, -1, "")
        self.sizer_3_staticbox = wx.StaticBox(self.PanelSiemensIdea, -1, "Siemens IDEA - Pulse Characteristics")
        self.PanelSiemensVision = wx.Panel(self, -1)
        self.TextVisionName = wx.TextCtrl(self.PanelSiemensVision, -1, "")
        self.TextVisionComment = wx.TextCtrl(self.PanelSiemensVision, -1, "")
        self.sizer_22_staticbox = wx.StaticBox(self.PanelSiemensVision, -1, "Siemens Vision - Pulse Description")
        self.TextVisionFamilyName = wx.TextCtrl(self.PanelSiemensVision, -1, "")
        self.TextVisionMinslice = wx.TextCtrl(self.PanelSiemensVision, -1, "")
        self.TextVisionMaxslice = wx.TextCtrl(self.PanelSiemensVision, -1, "")
        self.TextVisionBandwidth = wx.TextCtrl(self.PanelSiemensVision, -1, "")
        self.TextVisionFlipAngle = wx.TextCtrl(self.PanelSiemensVision, -1, "")
        self.sizer_33_staticbox = wx.StaticBox(self.PanelSiemensVision, -1, "Siemens Vision - Pulse Characteristics")
        self.PanelAsciiMagnPhase = wx.Panel(self, -1)
        self.sizer_4_staticbox = wx.StaticBox(self.PanelAsciiMagnPhase, -1, "ASCII - Real/Imaginary Format")
        self.PanelSiemensIdeaCHeader = wx.Panel(self, -1)
        self.label_10 = wx.StaticText(self.PanelSiemensIdeaCHeader, -1, "Header Variables Base String:")
        self.TextHeaderVariablesBaseString = wx.TextCtrl(self.PanelSiemensIdeaCHeader, -1, "")
        self.label_6 = wx.StaticText(self.PanelSiemensIdeaCHeader, -1, "Header Comment: ")
        self.TextHeaderComment = wx.TextCtrl(self.PanelSiemensIdeaCHeader, -1, "")
        self.label_9 = wx.StaticText(self.PanelSiemensIdeaCHeader, -1, "Min Slice Thickness [mm]:")
        self.TextHeaderMinslice = wx.TextCtrl(self.PanelSiemensIdeaCHeader, -1, "")
        self.label_5 = wx.StaticText(self.PanelSiemensIdeaCHeader, -1, "Bandwidth [kHz]:")
        self.TextHeaderBandwidth = wx.TextCtrl(self.PanelSiemensIdeaCHeader, -1, "")
        self.TextHeaderFlipAngle = wx.TextCtrl(self.PanelSiemensIdeaCHeader, -1, "")
        self.sizer_5_staticbox = wx.StaticBox(self.PanelSiemensIdeaCHeader, -1, "Siemens IDEA - C Header File")
        self.LabelOkCancelPlaceholder = wx.StaticText(self, -1, "Placeholder for OK/Cancel")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_CHOICE, self.on_format, self.choiceOuputFormat)
        self.Bind(wx.EVT_BUTTON, self.on_browse, self.ButtonBrowse)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyDialog.__set_properties
        self.SetTitle("Third Party Export")
        self.choiceOuputFormat.SetSelection(0)
        self.TextIdeaMinslice.SetMinSize((100, -1))
        self.TextIdeaMaxslice.SetMinSize((100, -1))
        self.TextIdeaBandwidth.SetMinSize((100, -1))
        self.TextVisionMinslice.SetMinSize((100, -1))
        self.TextVisionMaxslice.SetMinSize((100, -1))
        self.TextVisionBandwidth.SetMinSize((100, -1))
        self.PanelSiemensVision.Hide()
        self.PanelAsciiMagnPhase.Hide()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyDialog.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_34 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_5_staticbox.Lower()
        sizer_5 = wx.StaticBoxSizer(self.sizer_5_staticbox, wx.VERTICAL)
        grid_sizer_3 = wx.FlexGridSizer(5, 2, 3, 3)
        self.sizer_4_staticbox.Lower()
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.VERTICAL)
        sizer_21 = wx.BoxSizer(wx.VERTICAL)
        self.sizer_33_staticbox.Lower()
        sizer_33 = wx.StaticBoxSizer(self.sizer_33_staticbox, wx.VERTICAL)
        grid_sizer_33 = wx.FlexGridSizer(5, 2, 4, 4)
        self.sizer_22_staticbox.Lower()
        sizer_22 = wx.StaticBoxSizer(self.sizer_22_staticbox, wx.VERTICAL)
        grid_sizer_1_copy = wx.FlexGridSizer(2, 2, 4, 4)
        sizer_1_copy = wx.BoxSizer(wx.VERTICAL)
        self.sizer_3_staticbox.Lower()
        sizer_3 = wx.StaticBoxSizer(self.sizer_3_staticbox, wx.VERTICAL)
        grid_sizer_2 = wx.FlexGridSizer(4, 2, 4, 4)
        self.sizer_2_staticbox.Lower()
        sizer_2 = wx.StaticBoxSizer(self.sizer_2_staticbox, wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(3, 2, 4, 4)
        self.sizer_4_copy_1_staticbox.Lower()
        sizer_4_copy_1 = wx.StaticBoxSizer(self.sizer_4_copy_1_staticbox, wx.VERTICAL)
        sizer_23 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3_copy = wx.BoxSizer(wx.HORIZONTAL)
        label_2_copy = wx.StaticText(self, -1, "Format:")
        sizer_3_copy.Add(label_2_copy, 0, wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_3_copy.Add(self.choiceOuputFormat, 0, wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_4_copy_1.Add(sizer_3_copy, 0, wx.BOTTOM | wx.EXPAND, 5)
        label_4_copy = wx.StaticText(self, -1, "Output Location:")
        sizer_23.Add(label_4_copy, 0, wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_23.Add(self.ButtonBrowse, 0, wx.RIGHT, 10)
        sizer_23.Add(self.LabelFilename, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4_copy_1.Add(sizer_23, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 5)
        sizer_1.Add(sizer_4_copy_1, 0, wx.TOP | wx.EXPAND, 5)
        label_1 = wx.StaticText(self.PanelSiemensIdea, -1, "Name:")
        grid_sizer_1.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1.Add(self.TextIdeaName, 0, wx.EXPAND, 0)
        label_2 = wx.StaticText(self.PanelSiemensIdea, -1, "Comment:")
        grid_sizer_1.Add(label_2, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1.Add(self.TextIdeaComment, 0, wx.EXPAND, 0)
        grid_sizer_1.AddGrowableCol(1)
        sizer_2.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        sizer_1_copy.Add(sizer_2, 0, wx.EXPAND, 0)
        label_7 = wx.StaticText(self.PanelSiemensIdea, -1, "Min Slice Thickness [mm]:")
        grid_sizer_2.Add(label_7, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_2.Add(self.TextIdeaMinslice, 0, 0, 0)
        label_8 = wx.StaticText(self.PanelSiemensIdea, -1, "Max Slice Thickness [mm]:")
        grid_sizer_2.Add(label_8, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_2.Add(self.TextIdeaMaxslice, 0, 0, 0)
        grid_sizer_2.Add(self.label_4, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.TextIdeaBandwidth, 0, 0, 0)
        label_11 = wx.StaticText(self.PanelSiemensIdea, -1, "Flip Angle [deg]:")
        grid_sizer_2.Add(label_11, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.Add(self.TextIdeaFlipAngle, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_2.AddGrowableCol(1)
        sizer_3.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        sizer_1_copy.Add(sizer_3, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 4)
        self.PanelSiemensIdea.SetSizer(sizer_1_copy)
        sizer_1.Add(self.PanelSiemensIdea, 1, wx.EXPAND, 0)
        label_21 = wx.StaticText(self.PanelSiemensVision, -1, "Pulse Name:")
        grid_sizer_1_copy.Add(label_21, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1_copy.Add(self.TextVisionName, 0, wx.EXPAND, 0)
        label_22 = wx.StaticText(self.PanelSiemensVision, -1, "Entry Description:")
        grid_sizer_1_copy.Add(label_22, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1_copy.Add(self.TextVisionComment, 0, wx.EXPAND, 0)
        grid_sizer_1_copy.AddGrowableCol(1)
        sizer_22.Add(grid_sizer_1_copy, 1, wx.EXPAND, 0)
        sizer_21.Add(sizer_22, 0, wx.EXPAND, 0)
        label_24 = wx.StaticText(self.PanelSiemensVision, -1, "Family Name:")
        grid_sizer_33.Add(label_24, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_33.Add(self.TextVisionFamilyName, 0, wx.EXPAND, 0)
        label_25 = wx.StaticText(self.PanelSiemensVision, -1, "Min Slice Thickness [mm]:")
        grid_sizer_33.Add(label_25, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_33.Add(self.TextVisionMinslice, 0, 0, 0)
        label_26 = wx.StaticText(self.PanelSiemensVision, -1, "Max Slice Thickness [mm]:")
        grid_sizer_33.Add(label_26, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_33.Add(self.TextVisionMaxslice, 0, 0, 0)
        label_26_copy = wx.StaticText(self.PanelSiemensVision, -1, "Bandwidth [kHz]:")
        grid_sizer_33.Add(label_26_copy, 0, wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_33.Add(self.TextVisionBandwidth, 0, 0, 0)
        label_12 = wx.StaticText(self.PanelSiemensVision, -1, "Flip Angle [deg]:")
        grid_sizer_33.Add(label_12, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_33.Add(self.TextVisionFlipAngle, 0, 0, 0)
        grid_sizer_33.AddGrowableCol(1)
        sizer_33.Add(grid_sizer_33, 1, wx.EXPAND, 0)
        sizer_21.Add(sizer_33, 0, wx.TOP | wx.BOTTOM | wx.EXPAND, 4)
        self.PanelSiemensVision.SetSizer(sizer_21)
        sizer_1.Add(self.PanelSiemensVision, 1, wx.EXPAND, 0)
        label_3 = wx.StaticText(self.PanelAsciiMagnPhase, -1, "Note. This is a very simple format that outputs\nthe final result of a project as ASCII pairs of \nmagnitude/phase value pairs, one per line, \nin mT and degrees for each time point in the \nwaveform. ")
        sizer_4.Add(label_3, 0, wx.ALL, 6)
        self.PanelAsciiMagnPhase.SetSizer(sizer_4)
        sizer_1.Add(self.PanelAsciiMagnPhase, 1, wx.EXPAND, 0)
        grid_sizer_3.Add(self.label_10, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.TextHeaderVariablesBaseString, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.label_6, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.TextHeaderComment, 0, wx.EXPAND, 0)
        grid_sizer_3.Add(self.label_9, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.TextHeaderMinslice, 0, wx.EXPAND, 0)
        grid_sizer_3.Add(self.label_5, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.TextHeaderBandwidth, 0, wx.EXPAND, 0)
        label_13 = wx.StaticText(self.PanelSiemensIdeaCHeader, -1, "Flip Angle [deg]:")
        grid_sizer_3.Add(label_13, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.Add(self.TextHeaderFlipAngle, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_3.AddGrowableCol(1)
        sizer_5.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        self.PanelSiemensIdeaCHeader.SetSizer(sizer_5)
        sizer_1.Add(self.PanelSiemensIdeaCHeader, 0, wx.EXPAND, 0)
        sizer_34.Add(self.LabelOkCancelPlaceholder, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_1.Add(sizer_34, 0, wx.ALL | wx.EXPAND, 4)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

    def on_format(self, event):  # wxGlade: MyDialog.<event_handler>
        print "Event handler `on_format' not implemented!"
        event.Skip()

    def on_browse(self, event):  # wxGlade: MyDialog.<event_handler>
        print "Event handler `on_browse' not implemented!"
        event.Skip()

# end of class MyDialog
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    dialog_1 = MyDialog(None, -1, "")
    app.SetTopWindow(dialog_1)
    dialog_1.Show()
    app.MainLoop()
