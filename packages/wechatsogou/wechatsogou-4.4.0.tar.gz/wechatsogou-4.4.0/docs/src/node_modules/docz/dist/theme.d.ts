import * as React from 'react';
import { ComponentType as CT } from 'react';
import { ComponentsMap } from './components/DocPreview';
export declare type MSXComponent = CT<{
    components: ComponentsMap;
}>;
export interface MSXImport {
    default: MSXComponent;
}
export interface Heading {
    depth: number;
    slug: string;
    value: string;
}
export interface Entry {
    id: string;
    filepath: string;
    slug: string;
    route: string;
    name: string;
    order: number;
    menu: string | null;
    headings: Heading[];
    [key: string]: any;
}
export interface ThemeConfig {
    [key: string]: any;
}
export declare type EntryMap = Record<string, Entry>;
export declare type ImportMap = Record<string, () => Promise<MSXImport>>;
export interface DataContext {
    config: ThemeConfig;
    entries: EntryMap;
    imports: ImportMap;
}
export declare const dataContext: React.Context<DataContext>;
export interface ThemeProps extends DataContext {
    wrapper?: CT;
    hashRouter?: boolean;
    children(WrappedComponent: CT): JSX.Element;
}
export declare type TransformFn = (config: ThemeConfig) => ThemeConfig;
export declare type ThemeReturn = (WrappedComponent: CT) => CT<ThemeProps>;
export declare function theme(defaultConfig?: ThemeConfig, transform?: TransformFn): ThemeReturn;
