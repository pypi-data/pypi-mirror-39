import{realpathSync}from"fs";import{resolve,join,extname,relative,dirname}from"path";import resolve$1 from"resolve";import{format}from"prettier";import logger from"signale";import{remove,ensureDir,createWriteStream,createReadStream,pathExists,copySync,emptyDir}from"fs-extra";import{compile}from"art-template";import{ulid}from"ulid";import vfile from"to-vfile";import unified from"unified";import remark from"remark-parse";import matter from"remark-frontmatter";import slug from"remark-slug";import parseFrontmatter from"remark-parse-yaml";import slugify from"@sindresorhus/slugify";import find from"unist-util-find";import is from"unist-util-is";import visit from"unist-util-visit";import get from"lodash.get";import humanize from"humanize-string";import{sync}from"fast-glob";import{load,finds}from"load-cfg";import chokidar from"chokidar";import WS from"ws";import merge from"deepmerge";import remove$1 from"unist-util-remove";import nodeToString from"hast-util-to-string";import HappyPack from"happypack";import slug$1 from"rehype-slug";import headings from"rehype-autolink-headings";import webpackBarPlugin from"webpackbar";import Config from"webpack-chain";import friendlyErrors from"friendly-errors-webpack-plugin";import htmlWebpackPlugin from"html-webpack-plugin";import manifestPlugin from"webpack-manifest-plugin";import UglifyJs from"uglifyjs-webpack-plugin";import convert from"koa-connect";import history from"connect-history-api-fallback";import webpack from"webpack";import serve from"webpack-serve";import detectPort from"detect-port";import chalk from"chalk";import FSR from"react-dev-utils/FileSizeReporter";import formatWebpackMessages from"react-dev-utils/formatWebpackMessages";import printBuildError from"react-dev-utils/printBuildError";const ensureSlash=(e,t)=>{const r=e.endsWith("/");return r&&!t?e.substr(e,e.length-1):!r&&t?`${e}/`:e},root=realpathSync(process.cwd()),resolveApp=e=>resolve(root,e),templates=join(resolve$1.sync("docz-core"),"../templates"),packageJson=resolveApp("package.json"),servedPath=e=>ensureSlash(e,!0),docz=resolveApp(".docz"),app=resolve(docz,"app/"),appPublic=resolve(docz,"public/"),getDist=e=>join(root,e),distPublic=e=>join(e,"public/"),importsJs=resolve(app,"imports.js"),rootJs=resolve(app,"root.jsx"),indexJs=resolve(app,"index.jsx"),indexHtml=resolve(app,"index.html"),entriesJson=resolve(app,"entries.json"),configJson=resolve(app,"config.json");var paths=Object.freeze({root:root,templates:templates,packageJson:packageJson,servedPath:servedPath,docz:docz,app:app,appPublic:appPublic,getDist:getDist,distPublic:distPublic,importsJs:importsJs,rootJs:rootJs,indexJs:indexJs,indexHtml:indexHtml,entriesJson:entriesJson,configJson:configJson});function __rest(e,t){var r={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&0>t.indexOf(s)&&(r[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(s=Object.getOwnPropertySymbols(e);s.length>o;o++)0>t.indexOf(s[o])&&(r[s[o]]=e[s[o]])}return r}const format$1=e=>new Promise((t,r)=>{try{t(format(e,{parser:"babylon",semi:!1,singleQuote:!0,trailingComma:"all"}))}catch(e){logger.fatal(e),t(e)}}),touch=(e,t)=>new Promise(async(r,s)=>{const o=/jsx?$/.test(extname(e))?await format$1(t):t,i=createWriteStream(e);i.write(o,"utf-8"),i.on("finish",()=>r()),i.on("error",e=>s(e)),i.end()}),read=e=>new Promise((t,r)=>{let s="";const o=createReadStream(e,{encoding:"utf-8"});o.on("data",e=>s+=e),o.on("end",()=>t(s)),o.on("error",e=>r(e))}),compiled=async e=>read(e).then(e=>compile(e)).catch(e=>e),{keys:keys}=Object,isFn=e=>"function"==typeof e;function omit(e,t){return keys(t).filter(t=>-1===e.indexOf(t)).reduce((e,r)=>Object.assign({},e,{[r]:t[r]}),{})}const mapToObj=e=>Array.from(e.entries()).reduce((e,[t,r])=>Object.assign({},e,{[`${t}`]:r}),{}),parseMdx=e=>{const t=vfile.readSync(e,"utf-8"),r=unified().use(remark,{type:"yaml",marker:"-"}).use(matter).use(parseFrontmatter).use(slug);return r.run(r.parse(t))},getParsedData=e=>{const t=find(e,e=>is("yaml",e));return get(t,"data.parsedValue")},getHeadings=e=>{const t=[];return visit(e,"heading",e=>{const r=get(e,"data.id"),s=get(e,"depth");t.push({depth:s,slug:r,value:humanize(r)})}),t};class Entry{static async check(e){const t=await parseMdx(e),r=getParsedData(t);return!(!r||!r.name)}constructor(e,t,r){const s=this.getFilepath(t,r),o=getParsedData(e);this.id=ulid(),this.filepath=s,this.slug=this.slugify(s),this.route=this.getRoute(o),this.name=o.name,this.order=o.order||0,this.menu=o.menu,this.headings=getHeadings(e),this.settings=o}getFilepath(e,t){const r=resolve(root,t),s=relative(r,e);return"win32"===process.platform?s.split("\\").join("/"):s}slugify(e){const t=extname(e),r=e.replace(t,"");return slugify(r)}getRoute(e){return e&&e.route?e.route:`/${this.slug}`}}class Plugin{constructor(e){this.setConfig=e.setConfig,this.modifyBundlerConfig=e.modifyBundlerConfig,this.modifyBabelRc=e.modifyBabelRc,this.onServerListening=e.onServerListening,this.onPreBuild=e.onPreBuild,this.onPostBuild=e.onPostBuild,this.onPreRender=e.onPreRender,this.onPostRender=e.onPostRender}static runPluginsMethod(e){return(t,...r)=>{if(e&&e.length>0)for(const s of e){const e=get(s,t);isFn(e)&&e(...r)}}}static propsOfPlugins(e){return t=>e&&e.length>0&&e.map(e=>get(e,t)).filter(e=>e)}static reduceFromPlugins(e){return(t,r,...s)=>[...e||[]].reduce((e,r)=>{const o=get(r,t);return o&&isFn(o)?o(e,...s):e},r)}}function createPlugin(e){return new Plugin(e)}const fromTemplates=e=>join(templates,e),getHtmlFilepath=e=>e?join(root,e):fromTemplates("index.tpl.html"),writeAppFiles=async(e,t)=>{const{plugins:r,title:s,description:o,theme:i,indexHtml:n}=e,a=Plugin.propsOfPlugins(r),l=a("onPreRender"),c=a("onPostRender"),p=await compiled(fromTemplates("root.tpl.js")),d=await compiled(fromTemplates("index.tpl.js")),u=await compiled(getHtmlFilepath(n)),m=p({theme:i,isProd:!t,wrapper:e.wrapper,hashRouter:e.hashRouter,websocketUrl:`ws://${e.websocketHost}:${e.websocketPort}`}),g=d({onPreRenders:l,onPostRenders:c}),f=u({title:s,description:o});await touch(rootJs,m),await touch(indexJs,g),await touch(indexHtml,f)},writeImports=async e=>{const t=(await compiled(fromTemplates("imports.tpl.js")))({entries:Object.values(e)});await touch(importsJs,t)},writeData=async(e,t)=>{const r=Object.assign({title:t.title,description:t.description},t.themeConfig);await touch(entriesJson,JSON.stringify(e,null,2)),await touch(configJson,JSON.stringify(r,null,2))};class Entries{static async writeApp(e,t){await ensureDir(app),await writeAppFiles(e,!!t)}static async writeImports(e){await writeImports(e)}static async writeData(e,t){await writeData(e,t)}constructor(e){this.all=new Map,this.get=(async()=>this.getMap(e))}async getMap(e){const{src:t,files:r}=e,s=sync(Array.isArray(r)?[...r,"!node_modules"]:[r,"!node_modules"]),o=new Map,i=await Promise.all(s.filter(async e=>Entry.check(e)).map(async e=>{const r=await parseMdx(e),s=new Entry(r,e,t),{settings:o}=s,i=__rest(s,["settings"]);return Object.assign({},o,i)}));for(const e of i)o.set(e.filepath,e);return this.all=o,mapToObj(o)}}const isSocketOpened=e=>e.readyState===WS.OPEN;class DataServer{constructor({server:e,config:t}){this.config=t,this.server=new WS.Server({server:e,port:t.websocketPort,host:t.websocketHost})}async processEntries(e){const t=chokidar.watch(this.config.files,{ignored:/(^|[\/\\])\../});this.server.on("connection",async r=>{const s=this.updateEntries(e,r),o=await e.get();t.on("change",async()=>s(this.config)),t.on("unlink",async()=>s(this.config)),t.on("raw",async(e,t,r)=>{"moved"===r.event&&"directory"===r.type&&await s(this.config)}),r.send(this.entriesData(o)),await Entries.writeImports(o)}),this.server.on("close",()=>t.close())}async processThemeConfig(){const e=chokidar.watch(finds("docz"));this.server.on("connection",async t=>{const r=this.updateConfig(t);e.on("add",()=>r()),e.on("change",()=>r()),e.on("unlink",()=>r()),r()}),this.server.on("close",()=>e.close())}dataObj(e,t){return JSON.stringify({type:e,data:t})}entriesData(e){return this.dataObj("docz.entries",e)}configData(e){return this.dataObj("docz.config",Object.assign({},e.themeConfig,{title:e.title,description:e.description}))}updateEntries(e,t){return async r=>{if(isSocketOpened(t)){const r=await e.get();await Entries.writeImports(r),t.send(this.entriesData(r))}}}updateConfig(e){const t={title:this.config.title,description:this.config.description,themeConfig:this.config.themeConfig};return()=>{const r=load("docz",t,!0);isSocketOpened(e)&&e.send(this.configData(r))}}}class Bundler{constructor(e){const{args:t,config:r,server:s,build:o}=e;this.args=t,this.config=r,this.server=s,this.builder=o}getConfig(){const e=this.mountConfig(this.config);return this.args.modifyBundlerConfig(e,!this.isProd())}async createServer(e){return this.server(e)}async build(e){await this.builder(e)}mountConfig(e){const{plugins:t}=this.args;return Plugin.reduceFromPlugins(t)("modifyBundlerConfig",e,!this.isProd())}isProd(){return"production"===process.env.NODE_ENV}}const babelrc=e=>{const t=merge(load("babel",null),{babelrc:!1,cacheDirectory:!e.debug,presets:[[require.resolve("babel-preset-react-app"),{flow:!e.typescript}],...e.typescript?[require.resolve("@babel/preset-typescript")]:[]],plugins:[]});return Plugin.reduceFromPlugins(e.plugins)("modifyBabelRc",e.modifyBabelRc(t))},componentName=e=>{const t=e.match(/^\<\\?(\w+)/);return t&&t[1]},valuesFromNodes=e=>(t,r)=>{const s=[];if(t!==r)for(let o=r;o>=t;o--){const r=e.children[o];r.children&&r.children.length>0&&s.push(...r.children.map(e=>e.value)),r.value&&r.value.length>0&&s.push(r.value),o!==t&&remove$1(e,r)}return s},mergeNodeWithoutCloseTag=(e,t,r)=>{if(!t.value||"string"!=typeof t.value)return;const s=componentName(t.value),o=RegExp(`^\\<${s}`),i=RegExp(`\\<\\/${s}\\>$`),n=e=>o.test(e),a=e=>i.test(e),l=e=>e&&!n(e)&&a(e);if(!s||n(t.value)&&a(t.value))return;const c=e.children.findIndex(({value:e,children:t})=>t?t.some(e=>l(e.value)):l(e));if(c>-1&&c!==r){const s=valuesFromNodes(e)(r,c);t.value=s.reverse().join("\n")}},plugin=()=>e=>{visit(e,"html",function(t,r){mergeNodeWithoutCloseTag(e,t,r)})},componentName$1=e=>{const t=e.match(/^\<\\?(\w+)/);return t&&t[1]},isPlayground=e=>"Playground"===e,addCodeProp=async e=>{const t=componentName$1(e.value),r=RegExp(`^\\<${t}`);if(isPlayground(t)){const s=(await format$1(nodeToString(e))).slice(1,1/0);e.value=e.value.replace(r,`<${t} __code={(components) => ${`components && (\n      <components.pre className="react-prism language-jsx">\n        <code>{\`${s}\`}</code>\n      </components.pre>\n    )`}}`)}},plugin$1=()=>(e,t)=>{const r=[e.children.filter(e=>is("jsx",e)).map(async function(e){await addCodeProp(e)})];return Promise.all(r).then(()=>e)},setupHappypack=(e,t,r)=>{const s={cacheDirectory:!0,loader:require.resolve("babel-loader"),options:merge(r,{plugins:[require.resolve("react-hot-loader/babel")]})},o={id:"jsx",verbose:t.debug,loaders:[s]};t.propsParser&&!t.typescript&&s.options.plugins.push([require.resolve("babel-plugin-react-docgen"),{resolver:"findAllExportedComponentDefinitions"}]),t.propsParser&&t.typescript&&o.loaders.push({loader:require.resolve("react-docgen-typescript-loader")});const i={id:"mdx",verbose:t.debug,loaders:[{loader:require.resolve("babel-loader"),options:r}]};e.plugin("happypack-jsx").use(HappyPack,[o]),e.plugin("happypack-mdx").use(HappyPack,[i])},js=(e,t)=>{const r=resolve(root,t.src);e.module.rule("js").test(/\.(js|jsx|mjs)$/).include.add(r).add(docz).end().exclude.add(/node_modules/).end().use("happypack-jsx").loader("happypack/loader?id=jsx")},ts=(e,t)=>{const r=resolve(root,t.src);e.module.rule("ts").test(/\.(ts|tsx)$/).include.add(r).end().exclude.add(/node_modules/).end().use("happypack-jsx").loader("happypack/loader?id=jsx")},mdx=(e,t)=>{const{mdPlugins:r,hastPlugins:s}=t,o=resolve(root,t.src);e.module.rule("mdx").test(/\.md?x$/).include.add(o).end().exclude.add(/node_modules/).end().use("happypack-mdx").loader("happypack/loader?id=mdx").end().use("mdx-loader").loader(require.resolve("@mdx-js/loader")).options({type:"yaml",marker:"-",properties:{"aria-hidden":!0},content:{type:"element",tagName:"span",properties:{className:["icon-link"]},children:[{type:"text",value:"#"}]},mdPlugins:r.concat([matter,plugin]),hastPlugins:s.concat([plugin$1,slug$1,headings])})},INLINE_LIMIT=1e4,images=e=>{e.module.rule("images").test(/\.(png|jpe?g|gif)(\?.*)?$/).use("url-loader").loader(require.resolve("url-loader")).options({limit:1e4,name:"static/img/[name].[hash:8].[ext]"})},svg=e=>{e.module.rule("svg").test(/\.(svg)(\?.*)?$/).use("file-loader").loader(require.resolve("file-loader")).options({name:"static/img/[name].[hash:8].[ext]"})},media=e=>{e.module.rule("media").test(/\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/).use("url-loader").loader(require.resolve("url-loader")).options({limit:1e4,name:"static/media/[name].[hash:8].[ext]"})},fonts=e=>{e.module.rule("fonts").test(/\.(woff2?|eot|ttf|otf)(\?.*)?$/i).use("url-loader").loader(require.resolve("url-loader")).options({limit:1e4,name:"static/fonts/[name].[hash:8].[ext]"})},uglify=new UglifyJs({parallel:!0,cache:!0,sourceMap:!0,uglifyOptions:{parse:{ecma:8},compress:{ecma:5,warnings:!1,comparisons:!1},mangle:{safari10:!0},output:{ecma:5,comments:!1,ascii_only:!0}}}),createConfig=e=>(t,r)=>{const{debug:s,host:o,port:i,protocol:n}=t,a=new Config,l="production"===r,c=servedPath(t.base),p=getDist(t.dest),d=resolve(root,t.src);a.context(root),a.set("mode",r),a.when(s,e=>e.devtool("source-map")),a.when(!l,e=>e.devtool("cheap-module-eval-source-map")),a.node.merge({child_process:"empty",dgram:"empty",fs:"empty",net:"empty",tls:"empty"});a.output.pathinfo(!0).path(p).when(l,e=>e.filename("static/js/[name].[chunkhash:8].js").sourceMapFilename("static/js/[name].[chunkhash:8].js.map").publicPath(c),e=>e.filename("static/js/[name].js").sourceMapFilename("static/js/[name].js.map").publicPath("/")).crossOriginLoading("anonymous"),a.merge({optimization:Object.assign({nodeEnv:r,namedModules:!0,noEmitOnErrors:!0,runtimeChunk:!0,splitChunks:{chunks:"all",name:"vendors"}},l&&{minimize:!0,minimizer:[uglify]})}),a.entry("app").add(require.resolve("babel-polyfill")).add(indexJs),a.resolve.set("symlinks",!0).alias.set("@babel/runtime",dirname(require.resolve("@babel/runtime/package.json")));const u=e=>{e.extensions.add(".web.js").add(".mjs").add(".js").add(".json").add(".web.jsx").add(".jsx").add(".mdx").end(),t.typescript&&e.extensions.prepend(".ts").prepend(".tsx").end()};u(a.resolve),u(a.resolveLoader),a.resolve.modules.add("node_modules").add(d).add(root),a.resolveLoader.set("symlinks",!0).modules.add("node_modules").add(root),js(a,t),mdx(a,t),t.typescript&&ts(a,t),setupHappypack(a,t,e),images(a),svg(a),media(a),fonts(a),a.plugin("assets-plugin").use(manifestPlugin,[{filename:"assets.json"}]),a.plugin("html-webpack-plugin").use(htmlWebpackPlugin,[Object.assign({inject:!0,template:indexHtml},l&&{minify:{removeComments:!0,collapseWhitespace:!0,removeRedundantAttributes:!0,useShortDoctype:!0,removeEmptyAttributes:!0,removeStyleLinkTypeAttributes:!0,keepClosingSlash:!0,minifyJS:!0,minifyCSS:!0,minifyURLs:!0}})]);const m="127.0.0.1"===o||"0.0.0.0"===o?"localhost":o;return a.when(!s&&!l,e=>{e.plugin("webpackbar").use(webpackBarPlugin,[{color:"#41b883",compiledIn:!1,name:"Client"}]),e.plugin("friendly-errors").use(friendlyErrors,[{compilationSuccessInfo:{messages:[`You application is running at ${n}://${m}:${i}`]}}])}),a.plugin("injections").use(require("webpack/lib/DefinePlugin"),[{BASE_URL:JSON.stringify(c)}]),a.performance.hints(!1),a},devServerConfig=(e,t,r)=>{const s=resolve(__dirname,"non-existent"),o=t=>e.debug?"debug":t;return{compiler:t,host:e.host,port:e.port,content:[s],logLevel:o("error"),dev:{logLevel:o("silent")},hot:{reload:!1,logLevel:o("error")},add:e=>{e.use(convert(history({rewrites:[{from:/\.html$/,to:"/"}]})))}}},server=e=>async t=>{const r=webpack(t),s=await detectPort(e.port),o=devServerConfig(Object.assign({},e,{port:s}),r);return{start:async()=>{const e=await serve(o);return{on:e.on,close:e.close}}}};process.env.BABEL_ENV=process.env.BABEL_ENV||"production",process.env.NODE_ENV=process.env.NODE_ENV||"production";const{measureFileSizesBeforeBuild:measureFileSizesBeforeBuild,printFileSizesAfterBuild:printFileSizesAfterBuild}=FSR,WARN_AFTER_BUNDLE_GZIP_SIZE=524288,WARN_AFTER_CHUNK_GZIP_SIZE=1048576,hasCiEnvVar=()=>process.env.CI&&("string"!=typeof process.env.CI||"false"!==process.env.CI.toLowerCase()),copyPublicFolder=async e=>{await pathExists(appPublic)&&await copySync(appPublic,distPublic(e),{dereference:!0,filter:e=>e!==indexHtml})},compile$1=e=>new Promise((t,r)=>{let s;try{s=webpack(e)}catch(e){onError(e)}s&&s.run((e,s)=>{e&&r(e),t(s)})}),builder=async(e,t)=>(logger.start("Creating an optimized production build..."),new Promise(async(r,s)=>{try{const o=await compile$1(e),i=formatWebpackMessages(o.toJson({},!0));return i.errors.length?s(Error(i.errors.join("\n\n"))):hasCiEnvVar()&&i.warnings.length?(logger.warn("\nTreating warnings as errors because process.env.CI = true.\nMost CI servers set it automatically.\n"),s(Error(i.warnings.join("\n\n")))):r({stats:o,previousFileSizes:t,warnings:i.warnings})}catch(e){s(e)}})),onSuccess=(e,{stats:t,previousFileSizes:r,warnings:s})=>{s.length?(logger.warn("Compiled with warnings.\n"),logger.warn(s.join("\n\n")),logger.warn("\nSearch for the "+chalk.underline(chalk.yellow("keywords"))+" to learn more about each warning."),logger.warn("To ignore, add "+chalk.cyan("// eslint-disable-next-line")+" to the line before.\n")):logger.success(chalk.green("Compiled successfully.\n")),logger.log("File sizes after gzip:\n"),printFileSizesAfterBuild(t,r,e,524288,1048576),logger.log()},onError=e=>{logger.fatal(chalk.red("Failed to compile.\n")),printBuildError(e),process.exit(1)},build=e=>async t=>{const r=getDist(e.dest);try{await ensureDir(r);const e=await measureFileSizesBeforeBuild(r);await emptyDir(r),await copyPublicFolder(r);const s=await builder(t,e);onSuccess(r,s)}catch(e){onError(e)}},bundler=(e,t)=>{const r=createConfig(babelrc(e))(e,t).toConfig();return new Bundler({args:e,config:r,build:build(e),server:server(e)})},toOmit=["_","$0","version","help"],loadConfig=e=>{const t=load("docz",Object.assign({},e,{paths:paths,hashRouter:!1,plugins:[],mdPlugins:[],hastPlugins:[],themeConfig:{},modifyBundlerConfig:e=>e,modifyBabelRc:e=>e})),r=Plugin.reduceFromPlugins(t.plugins);return omit(toOmit,r("setConfig",t))};process.env.BABEL_ENV=process.env.BABEL_ENV||"development",process.env.NODE_ENV=process.env.NODE_ENV||"development";const dev=async e=>{const t=loadConfig(e),r=bundler(t,"development"),s=new Entries(t),o=await s.get(),i=await r.createServer(r.getConfig());(await i.start()).on("listening",async({server:e})=>{const r=await detectPort(t.websocketPort),i=Plugin.runPluginsMethod(t.plugins),n=Object.assign({},t,{websocketPort:r}),a=new DataServer({server:e,config:n});try{logger.info("Removing old app files"),await remove(app),logger.info("Creating new docz files"),await Entries.writeApp(n,!0),await Entries.writeImports(o),logger.info(`Setup entries socket on port ${r}`),await a.processEntries(s),await a.processThemeConfig(),await i("onServerListening",e)}catch(e){logger.fatal("Failed to process your server:",e),process.exit(1)}})};process.env.BABEL_ENV=process.env.BABEL_ENV||"production",process.env.NODE_ENV=process.env.NODE_ENV||"production";const build$1=async e=>{const t=loadConfig(e),r=bundler(t,"production"),s=new Entries(t),o=await s.get(),i=Plugin.runPluginsMethod(t.plugins);await remove(app),await Entries.writeApp(t),await Entries.writeImports(o),await Entries.writeData(o,t);try{await i("onPreBuild"),await r.build(r.getConfig()),await i("onPostBuild")}catch(e){logger.fatal(e),process.exit(1)}},args=e=>{e.positional("base",{type:"string",default:"/"}),e.positional("source",{alias:"src",type:"string",default:"./"}),e.positional("files",{type:"string",default:"**/*.mdx"}),e.positional("dest",{alias:"d",type:"string",default:".docz/dist"}),e.positional("title",{type:"string",default:"MyDoc"}),e.positional("description",{type:"string",default:"My awesome app using Docz"}),e.positional("theme",{type:"string",default:"docz-theme-default"}),e.positional("typescript",{alias:"ts",type:"boolean",default:!1}),e.positional("propsParser",{type:"boolean",default:!0}),e.positional("wrapper",{type:"string"}),e.positional("indexHtml",{type:"string"}),e.positional("debug",{type:"boolean",default:process.env.DEBUG||!1}),e.positional("protocol",{type:"string",default:"true"===process.env.HTTPS?"https":"http"}),e.positional("host",{type:"string",default:process.env.HOST||"127.0.0.1"}),e.positional("port",{alias:"p",type:"number",default:process.env.PORT||3e3}),e.positional("websocketHost",{type:"string",default:process.env.WEBSOCKET_HOST||"127.0.0.1"}),e.positional("websocketPort",{type:"number",default:process.env.WEBSOCKET_PORT||8089})};var index=Object.freeze({dev:dev,build:build$1,args:args});export{index as commands,Plugin,createPlugin};
