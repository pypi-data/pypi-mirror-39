# coding=utf-8
# Copyright 2018 The TensorFlow Datasets Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# pylint: skip-file
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: download.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='download.proto',
  package='tensorflow_datasets',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0e\x64ownload.proto\x12\x13tensorflow_datasets\"\x16\n\x07UrlInfo\x12\x0b\n\x03url\x18\x01 \x01(\t\"\xc7\x01\n\x0b\x45xtractInfo\x12\x0c\n\x04path\x18\x01 \x01(\t\x12L\n\x11\x65xtraction_method\x18\x02 \x01(\x0e\x32\x31.tensorflow_datasets.ExtractInfo.ExtractionMethod\"\\\n\x10\x45xtractionMethod\x12\x10\n\x0c\x41UTO_EXTRACT\x10\x00\x12\x0e\n\nNO_EXTRACT\x10\x01\x12\x07\n\x03ZIP\x10\x02\x12\x08\n\x04GZIP\x10\x03\x12\x07\n\x03TAR\x10\x04\x12\n\n\x06TAR_GZ\x10\x05\"x\n\x0eUrlExtractInfo\x12.\n\x08url_info\x18\x01 \x01(\x0b\x32\x1c.tensorflow_datasets.UrlInfo\x12\x36\n\x0c\x65xtract_info\x18\x02 \x01(\x0b\x32 .tensorflow_datasets.ExtractInfob\x06proto3')
)



_EXTRACTINFO_EXTRACTIONMETHOD = _descriptor.EnumDescriptor(
  name='ExtractionMethod',
  full_name='tensorflow_datasets.ExtractInfo.ExtractionMethod',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AUTO_EXTRACT', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_EXTRACT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ZIP', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GZIP', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TAR', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TAR_GZ', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=171,
  serialized_end=263,
)
_sym_db.RegisterEnumDescriptor(_EXTRACTINFO_EXTRACTIONMETHOD)


_URLINFO = _descriptor.Descriptor(
  name='UrlInfo',
  full_name='tensorflow_datasets.UrlInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url', full_name='tensorflow_datasets.UrlInfo.url', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=39,
  serialized_end=61,
)


_EXTRACTINFO = _descriptor.Descriptor(
  name='ExtractInfo',
  full_name='tensorflow_datasets.ExtractInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='tensorflow_datasets.ExtractInfo.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='extraction_method', full_name='tensorflow_datasets.ExtractInfo.extraction_method', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _EXTRACTINFO_EXTRACTIONMETHOD,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=64,
  serialized_end=263,
)


_URLEXTRACTINFO = _descriptor.Descriptor(
  name='UrlExtractInfo',
  full_name='tensorflow_datasets.UrlExtractInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='url_info', full_name='tensorflow_datasets.UrlExtractInfo.url_info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='extract_info', full_name='tensorflow_datasets.UrlExtractInfo.extract_info', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=265,
  serialized_end=385,
)

_EXTRACTINFO.fields_by_name['extraction_method'].enum_type = _EXTRACTINFO_EXTRACTIONMETHOD
_EXTRACTINFO_EXTRACTIONMETHOD.containing_type = _EXTRACTINFO
_URLEXTRACTINFO.fields_by_name['url_info'].message_type = _URLINFO
_URLEXTRACTINFO.fields_by_name['extract_info'].message_type = _EXTRACTINFO
DESCRIPTOR.message_types_by_name['UrlInfo'] = _URLINFO
DESCRIPTOR.message_types_by_name['ExtractInfo'] = _EXTRACTINFO
DESCRIPTOR.message_types_by_name['UrlExtractInfo'] = _URLEXTRACTINFO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

UrlInfo = _reflection.GeneratedProtocolMessageType('UrlInfo', (_message.Message,), dict(
  DESCRIPTOR = _URLINFO,
  __module__ = 'download_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_datasets.UrlInfo)
  ))
_sym_db.RegisterMessage(UrlInfo)

ExtractInfo = _reflection.GeneratedProtocolMessageType('ExtractInfo', (_message.Message,), dict(
  DESCRIPTOR = _EXTRACTINFO,
  __module__ = 'download_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_datasets.ExtractInfo)
  ))
_sym_db.RegisterMessage(ExtractInfo)

UrlExtractInfo = _reflection.GeneratedProtocolMessageType('UrlExtractInfo', (_message.Message,), dict(
  DESCRIPTOR = _URLEXTRACTINFO,
  __module__ = 'download_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow_datasets.UrlExtractInfo)
  ))
_sym_db.RegisterMessage(UrlExtractInfo)


# @@protoc_insertion_point(module_scope)