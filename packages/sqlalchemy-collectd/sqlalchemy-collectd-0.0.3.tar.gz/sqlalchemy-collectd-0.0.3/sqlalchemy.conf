LoadPlugin "aggregation"
LoadPlugin "match_regex"
LoadPlugin "network"

# set up network listening
<Plugin network>

	# change to 0.0.0.0 or a specific IP to allow
	# other hosts to send stats
   <Listen "127.0.0.1" "25826">
   		# messages are not signed or encrypted
        SecurityLevel None

        # optional
        # Interface eth0
   </Listen>

   MaxPacketSize 1452

   # proxy setup (client and server as above):
   Forward true

   # statistics about the network plugin itself
   ReportStats false

</Plugin>


LoadPlugin "aggregation"
LoadPlugin "match_regex"
<Plugin "aggregation">
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_numpools"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		SetTypeInstance "processes"
		CalculateNum true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_numpools"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_checkedout"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_checkedin"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_detached"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_invalidated"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_connections"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_newconnections"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_checkouts"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_commits"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_rollbacks"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_invalidated"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
	<Aggregation>
		Plugin "sqlalchemy"
		Type "sqlalchemy_transactions"
		GroupBy "Host"
		SetPlugin "sqlalchemy_aggregated"
		CalculateSum true
		CalculateAverage true
	</Aggregation>
</Plugin>

<Chain "PostCache">
  <Rule>
	# send all SQLAlchemy messages to the aggregation plugin,
	# and don't send them anywhere else, thereby filtering out the
	# per-PID messages.
    <Match regex>
      Plugin "^sqlalchemy$"
    </Match>
    <Target write>
      Plugin "aggregation"
    </Target>
    Target stop
  </Rule>
  Target write
</Chain>
