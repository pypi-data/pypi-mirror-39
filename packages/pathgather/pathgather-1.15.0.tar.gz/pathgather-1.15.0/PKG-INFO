Metadata-Version: 1.1
Name: pathgather
Version: 1.15.0
Summary: API client for PathGather
Home-page: https://github.com/tonybaloney/pathgather
Author: Anthony Shaw
Author-email: anthonyshaw@apache.org
License: Apache License (2.0)
Description: ===============================
        PathGather
        ===============================
        
        .. image:: https://img.shields.io/pypi/v/pathgather.svg
                :target: https://pypi.python.org/pypi/pathgather
        
        .. image:: https://img.shields.io/travis/tonybaloney/pathgather.svg
                :target: https://travis-ci.org/tonybaloney/pathgather
        
        .. image:: https://readthedocs.org/projects/pathgather/badge/?version=latest
                :target: http://pathgather.readthedocs.io/en/latest/
                :alt: Documentation Status
        
        .. image:: https://codecov.io/gh/tonybaloney/pathgather/branch/master/graph/badge.svg
                :target: https://codecov.io/gh/tonybaloney/pathgather
        
        .. image:: https://pyup.io/repos/github/tonybaloney/pathgather/shield.svg
             :target: https://pyup.io/repos/github/tonybaloney/pathgather/
             :alt: Updates
        
        .. image:: https://pyup.io/repos/github/tonybaloney/pathgather/python-3-shield.svg
             :target: https://pyup.io/repos/github/tonybaloney/pathgather/
             :alt: Python 3
        
        The Pathgather python package is for connecting to and leveraging the Pathgather REST API from Python 2 or 3.
        
        This project is not part of Pathgather or operated by Pathgather, it is an open-source package for consuming their API.
        
        * Free software: Apache 2 license
        * Documentation: https://pathgather.readthedocs.org.
        
        Example
        -------
        
        .. code-block:: python
        
                from pathgather import PathgatherClient
                import yaml
                import json
                from pprint import pprint
        
                with open('.tenant.yml', 'r') as tenant_yml:
                   config = yaml.load(tenant_yml)
        
                client = PathgatherClient(config['host'], config['api_key'])
        
                print(client.users.all())
        
                with open('dump.json', 'r') as dump_j:
                    data = json.load(dump_j)
        
                for user in data['users']:
                    print('Creating {0}'.format(user['full_name']))
                    new_user = client.users.create(
                        name=user['full_name'], 
                        job_title=user['job_title'],
                        department='Learning and Development',
                        email=user['email'])
                    print(new_user)
        
                pprint(client.users.all())
        
                pprint(client.users.skills('362add1b-0a28-425b-a83c-40a6808fd094'))
        
                pprint(client.paths.all())
        
        Features
        --------
        
        * User management
        * Content management
        * Path queries
        * User completions of content
        * Gathering management and gathering membership
        * Gathering Content and Path management
        * Skills
        * Creating and listing comments on paths and content items
        
        Missing
        -------
        
        The following features are in the API but not yet in this client
        
        * Conversations
        
        Credits
        ---------
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        
        
        =======
        History
        =======
        
        1.14.0
        ------
        
        * Fix bug when department isn't set for a user and paging all users (even deactivated ones)
        
        1.13.0
        ------
        
        * Fix bug in deactivating content.
        
        1.12.0
        ------
        
        * Fix the feature to add content to a gathering.
        
        1.11.0
        ------
        
        * Add providers API
        
        1.10.0
        ------
        
        * Set default of 50 max results per page, configurable via client object.
        
        1.9.0
        -----
        
        * Added support for comments on paths, creating and listing comments. Delete comment added but API returns 404.
        * Added support for comments on content
        
        1.8.0
        -----
        
        * Allow filtering of paths and users by custom query
        * Added `get_by_email` to users class
        
        1.7.0
        -----
        
        * Use arrow dates on formatted UserPath
        
        1.4.0 (2018-03-12)
        ------------------
        
        * Add support for filtering content
        * Add support for updating a piece of content
        
        1.3.0 (2017-12-11)
        ------------------
        
        * Add pathgather.skills API for gathering, listing and adding skills
        * Add support to invite a user from a gathering
        * Remove `add_user` feature, since the API doesn't work
        * Add ability to list content in a gathering and delete content
        * Add support to list paths within a gathering
        * Update production path and user models
        
        1.2.0 (2017-12-09)
        ------------------
        
        * Fetch content completions and starts for users
        * Register content completion for a user and a piece of content
        * Fetch path starts and completions for users
        * Gatherings API for listing, getting, creating, updating and deleting Gatherings
        * List users within a gathering
        * Add or remove users from a gathering
        
        1.1.0 (2017-12-08)
        ------------------
        
        * Updated content models with new fields
        * Added support to specific content provider by name or custom_id
        * Fixed doc issue with content.create
        * Added pathgather.models package to setup.py
        * Added SSL check disable flag on client and HTTP proxy settings
        
        1.0.0 (2017-09-01)
        ------------------
        
        * Introduce models for all methods, created tests based on documented and real API results. 91% test coverage
        * Add support for adding skills to users, setting the skill level and deleting skills
        
        0.5.0 (2017-09-01)
        ------------------
        
        * Added some unit tests to the base client and improved doc strings for documentation
        
        0.4.0 (2017-08-29)
        ------------------
        
        * [FIX] Remove default proxy settings
        * Add support to page out all() methods in content, users and paths. Method will now return all results
        
        0.3.0 (2017-08-29)
        ------------------
        
        * Add proxy support
        
        0.2.0 (2017-08-28)
        ------------------
        
        * Added path and content API endpoints
        
        0.1.0 (2017-08-28)
        ------------------
        
        * First release on PyPI.
        
Keywords: pathgather
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
