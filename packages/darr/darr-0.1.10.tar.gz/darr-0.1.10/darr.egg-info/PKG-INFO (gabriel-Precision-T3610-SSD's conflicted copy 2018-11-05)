Metadata-Version: 1.1
Name: darr
Version: 0.1.7+27.gf094f34.dirty
Summary: Darr is a Python science library for storing numeric data arrays in a format that is open, simple, and self-explanatory
Home-page: https://github.com/gbeckers/darr
Author: Gabriel J.L. Beckers
Author-email: gabriel@gbeckers.nl
License: BSD-3
Description-Content-Type: text/markdown
Description: 
        Darr is a Python science library for storing numeric data arrays in a way
        that is open, simple, and self-explanatory. It enables fast memory-mapped
        read/write access to such disk-based data, the ability to append data, and
        the flexible use of metadata. It is primarily designed for scientific use
        cases. Save and use your numeric arrays and metadata with one line of code
        while long-term and tool-independent accessibility and easy shareability
        is ensured.
        
        To avoid dependency on specific tools, Darr is based on a combination of
        flat binary and human-readable text files. It automatically saves a clear
        text description of how the data is stored, together with code for reading
        the specific data in a variety of current scientific data tools such as
        Python, R, Julia, Matlab and Mathematica (see 
        [example array](https://github.com/gbeckers/Darr/tree/master/examplearray.da)).
        
        
        Features
        --------
        
        -   **Transparent data format** based on **flat binary** and **text** files.
        -   Supports **very large data arrays** through **memory-mapped** file access.
        -   Data read/write access through **NumPy indexing**
        -   Data is easily **appendable**.
        -   **Human-readable explanation of how the binary data is stored** is saved 
            in a README text file.
        -   README also contains **examples of how to read the array** in popular 
            analysis environments such as Python (without Darr), R, Julia, 
            Octave/Matlab, GDL/IDL, and Mathematica.
        -   **Many numeric types** are supported: (u)int8-(u)int64, float16-float64, 
            complex64, complex128.
        -   Easy use of **metadata**, stored in a separate JSON text file.
        -   **Minimal dependencies**, only NumPy.
        -   **Integrates easily** with the Dask or NumExpr libraries for 
            **numeric computation on very large Darr arrays**.
        
        See the [documentation](http://darr.readthedocs.io/) for more information.
        
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Information Technology
Classifier: Intended Audience :: Science/Research
Requires: numpy
