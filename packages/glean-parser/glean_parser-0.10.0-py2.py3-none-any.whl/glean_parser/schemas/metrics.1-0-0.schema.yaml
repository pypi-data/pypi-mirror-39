$schema: http://json-schema.org/draft-07/schema#
title: Metrics
description: |
  Schema for the metrics.yaml files for Mozilla's glean telemetry SDK.

$id: moz://mozilla.org/schemas/glean/metrics/1-0-0

definitions:
  token:
    type: string
    pattern: "^[A-Za-z_][A-Za-z0-9_\\.]*$"

  snake_case:
    type: string
    pattern: "^[a-z_][a-z0-9_]*$"

  dotted_snake_case:
    type: string
    pattern: "^[a-z_][a-z0-9_]{0,29}(\\.[a-z_][a-z0-9_]{0,29})*$"
    maxLength: 40

  short_id:
    allOf:
      - $ref: "#/definitions/snake_case"
      - maxLength: 30

  very_short_id:
    allOf:
      - $ref: "#/definitions/snake_case"
      - maxLength: 20

  metric:
    type: object

    additionalProperties: false

    properties:
      type:
        title: Metric type
        description: |
          Specifies the type of a metric, like "counter" or "event". This defines
          which operations are valid for the metric, how it is stored and how
          data analysis tooling displays it.

          The supported types are:
            - boolean: true or false.
            - string: a Unicode string value.
            - string_list: a list of Unicode strings.
            - enumeration: a string with a fixes set of values. Additional properties:
              `values`.
            - counter: A numeric value that can only be incremented.
            - timespan: Represents a time interval. Additional properties: `time_unit`.
            - timing_distribution: Record the distribution of multiple timings.
              Additional properties: `time_unit`.
            - datetime: A date/time value.  Represented as an ISO datetime in UTC.
              Additional properties: `time_unit`.
            - use_counter: Records the value of one of more values in relation
              to another value. Represented internally as a list of numerators
              and denominator, all of which can be incremented separately.
              Additional properties: `labels`, `denominator`.
            - usage: Record whether a feature is used. This is functionally
              equivalent to a boolean metric type, except the analysis and
              visualization side may present it differently, knowing that it
              indicates the usage of a feature.
            - rate: Record the rate of an event over time. This is functionally
              equivalent to a counter, except the analysis and visualization
              will tie it to the duration of the ping to display it as a rate
              over time.
            - event: Record a specific event (with optional metadata).
              Additional properties: `objects` and `extra_keys`.
            - uuid: Record a UUID v4.
        type: string
        enum:
          - boolean
          - string
          - string_list
          - enumeration
          - counter
          - timespan
          - timing_distribution
          - datetime
          - use_counter
          - usage
          - rate
          - event
          - uuid

      description:
        title: Description
        description: |
          A textual description of what this metric does, means, its edge cases
          and any other helpful information.
        type: string

      lifetime:
        title: Lifetime
        description: |
          Defines the lifetime of the metric.  If must be one of the following values:
          - `ping` (default): The metric is reset each time it is sent in a ping.
          - `user`: The metric contains a property that is part of the user's
            profile and is never reset.
          - `application`: The metric contains a property that is related to the
            application, and is reset only at application restarts.
        enum:
          - ping
          - user
          - application
        default: ping

      send_in_pings:
        title: Send in pings
        description: |
          Which pings the metric should be sent on. If not specified, the metric
          is sent on the "default ping", which is the "events" ping for events,
          and the "metrics" ping for everything else. Most metrics don't need to
          specify this.
        type: array
        items:
          $ref: "#/definitions/snake_case"
        default:
          - default

      notification_emails:
        title: Notification emails
        description: |
          A list of email addresses to notify for important events with the
          metric or when people with context or ownership for the metric need to
          contacted.
        type: array
        minItems: 1
        items:
          type: string
          format: email

      bugs:
        title: Related bugs
        description: |
          A list of bugs (e.g. Bugzilla and Github) that are relevant to this
          metric, e.g., tracking its original implementation or later changes to
          it. If a number, it is an ID to an issue in the default tracker (e.g.
          Mozilla's Bugzilla instance). If a string, it must be a URI to a bug
          page in a tracker.
        type: array
        minItems: 1
        items:
          anyOf:
            - type: integer
            - type: string
              format: uri

      reviews:
        title: Review references
        description: |
          A list of URLs to any data collection reviews relevant to the metric.
        type: array
        items:
          type: string
          format: uri

      disabled:
        title: Disabled
        description: |
          If true, the metric is disabled, and any metric collection on it will
          be silently ignored at runtime.
        type: boolean
        default: false

      expires_after_build_date:
        title: Expires after build date.
        description: |
          If provided, an ISO 8601 date that represents the day from which any
          collection using the metric should be silently ignored. The date is
          checked at build time. If the specified date is passed, this metric is
          seen as expired.
        anyOf:
          - type: string
            format: date-time
          - type: "null"
        default: null

      version:
        title: Metric version
        description: |
          The version of the metric. A monotonically increasing value. If not
          provided, defaults to 0.

      values:
        title: Supported values
        description: |
          A list of strings that are supported enum values.

          Valid when `type` is `enum`.
        type: array
        items:
          type: string

      time_unit:
        title: Time unit
        description: |
          Specifies the unit that the metric will be stored and displayed in. If
          not provided, it defaults to milliseconds. Time values are sent to the
          backend as integers, so `time_unit` also implies the maximum
          resolution at which timespans are recorded. Valid when `type` is
          `timespan`, `timing_distribution` or `datetime`.
        enum:
          - nanosecond
          - microsecond
          - millisecond
          - second
          - minute
          - hour
          - day

      labeled:
        title: Labeled metric
        description: |
          Record multiple separate metrics under different labels.
          The labels may be known ahead of time (provided in the `labels`
          property) or be dynamic at runtime.
        type: boolean

      labels:
        title: Labels
        description: |
          A list of labels for a labeled metric or use counter.

          Valid when `labeled` is `true`.
        type: array
        items:
          $ref: "#/definitions/snake_case"

      denominator:
        title: Denominator
        description: |
          The name of the denominator value for a use counter.

          Valid when `type` is `use_counter`.
        allOf:
          - $ref: "#/definitions/snake_case"

      objects:
        title: Objects
        description: |
          The valid event objects. This is a list of strings.

          Valid when `type` is `event`.
        type: array
        minItems: 1
        items:
          $ref: "#/definitions/very_short_id"

      extra_keys:
        title: Extra keys
        description: |
          The acceptable keys on the "extra" object sent with events. This is an
          object mapping the key to a description.

          Valid when `type` is `event`.
        type: object
        propertyNames:
          $ref: "#/definitions/very_short_id"
        additionalProperties:
          type: string
          maxLength: 80
        default: {}
        maxProperties: 10

    required:
      - type
      - bugs
      - description
      - notification_emails

type: object

propertyNames:
  anyOf:
    - $ref: "#/definitions/dotted_snake_case"
    - enum: ['$schema']

properties:
  $schema:
    type: string
    format: url

additionalProperties:
  type: object
  propertyNames:
    anyOf:
      - $ref: "#/definitions/very_short_id"
  additionalProperties:
    allOf:
      - $ref: "#/definitions/metric"
      - if:
          properties:
            type:
              const: event
        then:
          properties:
            lifetime:
              const: ping
