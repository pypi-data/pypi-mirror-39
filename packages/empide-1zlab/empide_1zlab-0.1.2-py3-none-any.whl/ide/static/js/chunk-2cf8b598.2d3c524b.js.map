{"version":3,"sources":["webpack:///./src/pages/ide/emp.js","webpack:///./node_modules/core-js/modules/_fix-re-wks.js","webpack:///./node_modules/core-js/modules/es6.regexp.split.js","webpack:///./node_modules/core-js/modules/_fails-is-regexp.js","webpack:///./src/pages/ide/components/Cli/slots.js","webpack:///./node_modules/core-js/modules/_is-regexp.js","webpack:///./node_modules/core-js/modules/_string-context.js","webpack:///./node_modules/core-js/modules/es6.string.starts-with.js"],"names":["funcName","func","split","deviceInfo","memoryStatus","memoryAnalysing","filename","concat","runScript","tree","getCode","newFile","delFile","newFolder","path","delFolder","rename","old","_new","install","pkg","hide","__webpack_require__","redefine","fails","defined","wks","module","exports","KEY","length","exec","SYMBOL","fns","strfn","rxfn","O","String","prototype","RegExp","string","arg","call","this","SPLIT","$split","isRegExp","_split","$push","push","$SPLIT","LENGTH","LAST_INDEX","NPCG","undefined","separator","limit","separator2","match","lastIndex","lastLength","i","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","splitLimit","separatorCopy","source","index","slice","replace","arguments","apply","test","fn","MATCH","re","e","f","slots","methods","slotToggleTermVisible","termVisible","slotToggleConfig","showConfig","slotResizeTerm","term","fit","slotClearTerm","clear","slotConnectToDevice","kwargs","passwd","url","lastCmd","ws","WebSocket","binaryType","attach","onopen","onOpen","onclose","onClose","slotDisconnect","close","slotSendCommands","tasklock","$toast","error","send","command","startsWith","emp","$send","SIGNAL_LOCK","slotPutFile","fileData","putFileData","TextEncoder","encode","dest_fname","dest_fsize","rec","Uint8Array","charCodeAt","binaryState","info","slotGetFile","src_fname","getFilename","getFileData","slotDependsOnMemoryToGetFile","mf","fsize","isObject","cof","it","that","searchString","NAME","TypeError","$export","toLength","context","STARTS_WITH","$startsWith","P","F","Math","min","search"],"mappings":"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","file":"js/chunk-2cf8b598.2d3c524b.js","sourcesContent":["export const funcName = (func) => func('').split('(')[0]\n\nexport const deviceInfo = () => `device_info()\\r`\nexport const memoryStatus = () => `memory_status()\\r`\nexport const memoryAnalysing = (filename) => `memory_analysing('${filename}')\\r`\nexport const runScript = (filename) => `exec(open('${filename}').read())\\r`\nexport const tree = () => 'tree()\\r'\nexport const getCode = (filename) => `get_code('${filename}')\\r`\nexport const newFile = (filename) => `new_file('${filename}')\\r`\nexport const delFile = (filename) => `del_file('${filename}')\\r`\nexport const newFolder = (path) => `new_folder('${path}')\\r`\nexport const delFolder = (path) => `del_folder('${path}')\\r`\nexport const rename = (old, _new) => `rename('${old}','${_new}')\\r`\nexport const install = (pkg) => `emp_install('${pkg}')\\r`","'use strict';\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n  var fns = exec(defined, SYMBOL, ''[KEY]);\n  var strfn = fns[0];\n  var rxfn = fns[1];\n  if (fails(function () {\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  })) {\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","// @@split logic\nrequire('./_fix-re-wks')('split', 2, function (defined, SPLIT, $split) {\n  'use strict';\n  var isRegExp = require('./_is-regexp');\n  var _split = $split;\n  var $push = [].push;\n  var $SPLIT = 'split';\n  var LENGTH = 'length';\n  var LAST_INDEX = 'lastIndex';\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group\n    // based on es5-shim implementation, need to rework it\n    $split = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return _split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var separator2, match, lastIndex, lastLength, i;\n      // Doesn't need flags gy, but they don't hurt\n      if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\\\s)', flags);\n      while (match = separatorCopy.exec(string)) {\n        // `separatorCopy.lastIndex` is not reliable cross-browser\n        lastIndex = match.index + match[0][LENGTH];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG\n          // eslint-disable-next-line no-loop-func\n          if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {\n            for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;\n          });\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    $split = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);\n    };\n  }\n  // 21.1.3.17 String.prototype.split(separator, limit)\n  return [function split(separator, limit) {\n    var O = defined(this);\n    var fn = separator == undefined ? undefined : separator[SPLIT];\n    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);\n  }, $split];\n});\n","var MATCH = require('./_wks')('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n","import * as emp from \"../../emp.js\";\n\n\nvar slots = {\n  methods: {\n    slotToggleTermVisible() {\n      this.termVisible = !this.termVisible;\n    },\n\n    slotToggleConfig() {\n      this.showConfig = !this.showConfig;\n    },\n\n    slotResizeTerm() {\n      // this.term.resize(20,1);\n      this.term.fit();\n    },\n\n    slotClearTerm() {\n      this.term.clear();\n    },\n\n    slotConnectToDevice(kwargs) {\n      this.passwd = kwargs.passwd;\n      var url = kwargs.url;\n      this.lastCmd = \"connect\";\n      this.ws = new WebSocket(url);\n      this.ws.binaryType = \"arraybuffer\";\n      this.term.attach(this.ws, true, true);\n\n      this.ws.onopen = this.onOpen;\n      this.ws.onclose = this.onClose;\n    },\n\n    slotDisconnect() {\n      this.ws.close();\n    },\n\n    slotSendCommands(kwargs) {\n      if (!this.tasklock) {\n        this.ws.send(kwargs.command);\n        if (kwargs.command.startsWith(emp.funcName(emp.memoryAnalysing))) {\n          this.$send(this.SIGNAL_LOCK(this));\n        }\n      } else\n        this.$toast.error(\"IO busy\");\n    },\n\n    slotPutFile(kwargs) {\n      if (!this.tasklock) {\n        if (kwargs.fileData.length > 0)\n          this.putFileData = kwargs.fileData;\n        else {\n          this.putFileData = new TextEncoder().encode(' ');\n          kwargs.fileData = new TextEncoder().encode(' ');\n        }\n\n        var dest_fname = kwargs.filename;\n        var dest_fsize = kwargs.fileData.length;\n\n        // WEBREPL_FILE = \"<2sBBQLH64s\"\n        var rec = new Uint8Array(2 + 1 + 1 + 8 + 4 + 2 + 64);\n        rec[0] = \"W\".charCodeAt(0);\n        rec[1] = \"A\".charCodeAt(0);\n        rec[2] = 1; // put\n        rec[3] = 0;\n        rec[4] = 0;\n        rec[5] = 0;\n        rec[6] = 0;\n        rec[7] = 0;\n        rec[8] = 0;\n        rec[9] = 0;\n        rec[10] = 0;\n        rec[11] = 0;\n        rec[12] = dest_fsize & 0xff;\n        rec[13] = (dest_fsize >> 8) & 0xff;\n        rec[14] = (dest_fsize >> 16) & 0xff;\n        rec[15] = (dest_fsize >> 24) & 0xff;\n        rec[16] = dest_fname.length & 0xff;\n        rec[17] = (dest_fname.length >> 8) & 0xff;\n        for (var i = 0; i < 64; ++i) {\n          if (i < dest_fname.length) {\n            rec[18 + i] = dest_fname.charCodeAt(i);\n          } else {\n            rec[18 + i] = 0;\n          }\n        }\n\n        // initiate put\n        this.binaryState = 11;\n        // this.show_message(\"Sending \" + put_file_name + \"...\");\n        this.$toast.info(\"Sending \" + kwargs.filename + \"...\");\n        this.$send(this.SIGNAL_LOCK(this));\n        this.ws.send(rec);\n      } else {\n        this.$toast.error(\"IO busy\");\n      }\n    },\n\n    slotGetFile(kwargs) {\n      var src_fname = kwargs.filename;\n      // WEBREPL_FILE = \"<2sBBQLH64s\"\n      var rec = new Uint8Array(2 + 1 + 1 + 8 + 4 + 2 + 64);\n      rec[0] = 'W'.charCodeAt(0);\n      rec[1] = 'A'.charCodeAt(0);\n      rec[2] = 2; // get\n      rec[3] = 0;\n      rec[4] = 0;\n      rec[5] = 0;\n      rec[6] = 0;\n      rec[7] = 0;\n      rec[8] = 0;\n      rec[9] = 0;\n      rec[10] = 0;\n      rec[11] = 0;\n      rec[12] = 0;\n      rec[13] = 0;\n      rec[14] = 0;\n      rec[15] = 0;\n      rec[16] = src_fname.length & 0xff;\n      rec[17] = (src_fname.length >> 8) & 0xff;\n      for (var i = 0; i < 64; ++i) {\n        if (i < src_fname.length) {\n          rec[18 + i] = src_fname.charCodeAt(i);\n        } else {\n          rec[18 + i] = 0;\n        }\n      }\n      // initiate get\n      this.binaryState = 21;\n      this.getFilename = src_fname;\n      this.getFileData = new Uint8Array(0);\n      this.$toast.info('Getting ' + this.getFilename + '...');\n      this.ws.send(rec);\n    },\n\n    slotDependsOnMemoryToGetFile(kwargs) {\n      this.getFilename = kwargs.filename;\n\n      var mf = kwargs.mf;\n\n      var fsize = kwargs.fsize;\n\n      if (fsize < 0.85 * mf) {\n        // this.ws.send('get_code(\\'' + kwargs.filename + '\\')\\r');\n        this.ws.send(emp.getCode(kwargs.filename));\n      } else {\n        this.slotGetFile(kwargs);\n      }\n    },\n\n  }\n}\n\nexport default slots\n","// 7.2.8 IsRegExp(argument)\nvar isObject = require('./_is-object');\nvar cof = require('./_cof');\nvar MATCH = require('./_wks')('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n","// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = require('./_is-regexp');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n","// 21.1.3.18 String.prototype.startsWith(searchString [, position ])\n'use strict';\nvar $export = require('./_export');\nvar toLength = require('./_to-length');\nvar context = require('./_string-context');\nvar STARTS_WITH = 'startsWith';\nvar $startsWith = ''[STARTS_WITH];\n\n$export($export.P + $export.F * require('./_fails-is-regexp')(STARTS_WITH), 'String', {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = context(this, searchString, STARTS_WITH);\n    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n"],"sourceRoot":""}