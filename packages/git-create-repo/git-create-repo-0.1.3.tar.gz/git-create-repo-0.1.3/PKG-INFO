Metadata-Version: 2.1
Name: git-create-repo
Version: 0.1.3
Summary: Creates local and remote repository from command line
Home-page: https://github.com/OpticGenius/git-create-repo
Author: Armaan McLeod
Author-email: opticgenius@hotmail.com
License: UNKNOWN
Project-URL: Bug Reports, https://github.com/OpticGenius/git-create-repo/issues
Project-URL: Source, https://github.com/OpticGenius/git-create-repo
Description: # git-create-repo
        
        [![PyPI version](https://badge.fury.io/py/git-create-repo.svg)](https://badge.fury.io/py/git-create-repo)
        [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
        
        Creates local and remote git repository from command line. This tool is intended for **Python 3**.
        
        ## Install
        
        `pip install git-create-repo`
        
        Or
        
        `python setup.py install`
        
        Also make sure you have [git](https://git-scm.com/downloads) installed. 
        
        ## Usage
        
        `git_create [--private] [--name name] [--ssh]`
        
        Make sure you are in the folder you want to create a repository in. Before running, `cd` into your desired folder. 
        
        #### Create public repository
        
        `git_create`
        
        #### Create private repository
        
        `git_create --private`
        
        #### Adding Remote repository name
        
        You can specify a different name for the remote repository with `--name`. Otherwise the local repo name will be used. 
        
        #### Remote URL
        
        By default, remotes are added by HTTPS. You can change this to SSH by adding `--ssh`, assuming you have your SSH keys setup. 
        
        #### Github Username
        
        The tool simply fetches the username from `git config user.name`. If you don't have this set, the tool with prompt you to enter it beforehand. 
        
        #### Next steps
        
        * You will be prompted to enter your password and a description. The description can be skipped by simply pressing `enter`. If your password is incorrect, you will be prompted again.
        
        * If the above is successful, you will now have a repository created on your Github account. 
        
        ## Note
        
        * This will create a default `README.md` file including the name of your repository if none exist. 
        * It is also suggested to create your own `.gitignore`, so you can ignore what files you don't want commited beforehand. 
        
        ## Development
        
        ### Windows
        
        #### Installing Development Dependencies:
        
        * Run `build install`
        
        #### Testing Script
        
        * Use `test` folder generated from `build test` to run script. This is to ensure your actual git repository is not compromised. 
        
        The other build targets are used to upload to Pypi. 
        
        ### Linux
        
        #### Installing Development Dependencies
        
        * Ensure you have [GNU Make](https://www.gnu.org/software/make/) installed. You can install this with `sudo apt-get install make`. 
        
        * To install development dependences, run `make install`.
        
        #### Testing Script
        
        * Use `test` folder generated from `make test` to run script. This is to ensure your actual git repository is not compromised. 
        
        The other build targets are used to upload to Pypi. 
        
        ## Future
        * Other features that can make this tool more usable. 
        * Please let me know in the issues tab.
Keywords: git repository python remote
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown
